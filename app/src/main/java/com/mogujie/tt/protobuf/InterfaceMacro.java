// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interface_Macro.proto

package com.mogujie.tt.protobuf;

public final class InterfaceMacro {
  private InterfaceMacro() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   *错误码
   * </pre>
   *
   * Protobuf enum {@code Pb_Error}
   */
  public enum Pb_Error
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *操作成功，或者数据为空，视操作请求定
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NULL = 0;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NULL(0),
    /**
     * <pre>
     *未初始化
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOTINIT = -1;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOTINIT(-1),
    /**
     * <pre>
     *内存分配失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_MEMORY = -2;</code>
     */
    Pb_ERROR_MEET_INTERFACE_MEMORY(-2),
    /**
     * <pre>
     *不支持的请求
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSPPORTTYPE = -3;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOSPPORTTYPE(-3),
    /**
     * <pre>
     *不支持的请求方法
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSPPORTMETHOD = -4;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOSPPORTMETHOD(-4),
    /**
     * <pre>
     *下载失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_DOWNLOAD = -5;</code>
     */
    Pb_ERROR_MEET_INTERFACE_DOWNLOAD(-5),
    /**
     * <pre>
     *发送失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NETSEND = -6;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NETSEND(-6),
    /**
     * <pre>
     *数据未准备好,可能正在等待数据返回
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOREADY = -7;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOREADY(-7),
    /**
     * <pre>
     *找不到
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOFIND = -8;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOFIND(-8),
    /**
     * <pre>
     *不支持的属性
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSPPORTPROPERTY = -9;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOSPPORTPROPERTY(-9),
    /**
     * <pre>
     *超过最大值
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_UPPONMAXVALUE = -10;</code>
     */
    Pb_ERROR_MEET_INTERFACE_UPPONMAXVALUE(-10),
    /**
     * <pre>
     *个数为0
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_ZERO = -11;</code>
     */
    Pb_ERROR_MEET_INTERFACE_ZERO(-11),
    /**
     * <pre>
     *参数错误
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_PARAMETER = -12;</code>
     */
    Pb_ERROR_MEET_INTERFACE_PARAMETER(-12),
    /**
     * <pre>
     *数据错误
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_DATA = -13;</code>
     */
    Pb_ERROR_MEET_INTERFACE_DATA(-13),
    /**
     * <pre>
     *功能未授权使用
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_UNAUTHORIZED = -14;</code>
     */
    Pb_ERROR_MEET_INTERFACE_UNAUTHORIZED(-14),
    /**
     * <pre>
     * 短信服务器未响应
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOCONNECT = -15;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOCONNECT(-15),
    /**
     * <pre>
     * SOCKET创建失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_SOCKET = -16;</code>
     */
    Pb_ERROR_MEET_INTERFACE_SOCKET(-16),
    /**
     * <pre>
     * 用户名或密码错误
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NAMEORPWD = -17;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NAMEORPWD(-17),
    /**
     * <pre>
     * 访问服务异常
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_SERVERERR = -18;</code>
     */
    Pb_ERROR_MEET_INTERFACE_SERVERERR(-18),
    /**
     * <pre>
     * 余额不足
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSMSCNT = -19;</code>
     */
    Pb_ERROR_MEET_INTERFACE_NOSMSCNT(-19),
    /**
     * <pre>
     * 文件打开失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_OPENFILEERROR = -20;</code>
     */
    Pb_ERROR_MEET_INTERFACE_OPENFILEERROR(-20),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *操作成功，或者数据为空，视操作请求定
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NULL = 0;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NULL_VALUE = 0;
    /**
     * <pre>
     *未初始化
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOTINIT = -1;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOTINIT_VALUE = -1;
    /**
     * <pre>
     *内存分配失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_MEMORY = -2;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_MEMORY_VALUE = -2;
    /**
     * <pre>
     *不支持的请求
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSPPORTTYPE = -3;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOSPPORTTYPE_VALUE = -3;
    /**
     * <pre>
     *不支持的请求方法
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSPPORTMETHOD = -4;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOSPPORTMETHOD_VALUE = -4;
    /**
     * <pre>
     *下载失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_DOWNLOAD = -5;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_DOWNLOAD_VALUE = -5;
    /**
     * <pre>
     *发送失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NETSEND = -6;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NETSEND_VALUE = -6;
    /**
     * <pre>
     *数据未准备好,可能正在等待数据返回
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOREADY = -7;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOREADY_VALUE = -7;
    /**
     * <pre>
     *找不到
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOFIND = -8;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOFIND_VALUE = -8;
    /**
     * <pre>
     *不支持的属性
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSPPORTPROPERTY = -9;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOSPPORTPROPERTY_VALUE = -9;
    /**
     * <pre>
     *超过最大值
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_UPPONMAXVALUE = -10;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_UPPONMAXVALUE_VALUE = -10;
    /**
     * <pre>
     *个数为0
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_ZERO = -11;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_ZERO_VALUE = -11;
    /**
     * <pre>
     *参数错误
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_PARAMETER = -12;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_PARAMETER_VALUE = -12;
    /**
     * <pre>
     *数据错误
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_DATA = -13;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_DATA_VALUE = -13;
    /**
     * <pre>
     *功能未授权使用
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_UNAUTHORIZED = -14;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_UNAUTHORIZED_VALUE = -14;
    /**
     * <pre>
     * 短信服务器未响应
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOCONNECT = -15;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOCONNECT_VALUE = -15;
    /**
     * <pre>
     * SOCKET创建失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_SOCKET = -16;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_SOCKET_VALUE = -16;
    /**
     * <pre>
     * 用户名或密码错误
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NAMEORPWD = -17;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NAMEORPWD_VALUE = -17;
    /**
     * <pre>
     * 访问服务异常
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_SERVERERR = -18;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_SERVERERR_VALUE = -18;
    /**
     * <pre>
     * 余额不足
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_NOSMSCNT = -19;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_NOSMSCNT_VALUE = -19;
    /**
     * <pre>
     * 文件打开失败
     * </pre>
     *
     * <code>Pb_ERROR_MEET_INTERFACE_OPENFILEERROR = -20;</code>
     */
    public static final int Pb_ERROR_MEET_INTERFACE_OPENFILEERROR_VALUE = -20;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Error valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Error forNumber(int value) {
      switch (value) {
        case 0: return Pb_ERROR_MEET_INTERFACE_NULL;
        case -1: return Pb_ERROR_MEET_INTERFACE_NOTINIT;
        case -2: return Pb_ERROR_MEET_INTERFACE_MEMORY;
        case -3: return Pb_ERROR_MEET_INTERFACE_NOSPPORTTYPE;
        case -4: return Pb_ERROR_MEET_INTERFACE_NOSPPORTMETHOD;
        case -5: return Pb_ERROR_MEET_INTERFACE_DOWNLOAD;
        case -6: return Pb_ERROR_MEET_INTERFACE_NETSEND;
        case -7: return Pb_ERROR_MEET_INTERFACE_NOREADY;
        case -8: return Pb_ERROR_MEET_INTERFACE_NOFIND;
        case -9: return Pb_ERROR_MEET_INTERFACE_NOSPPORTPROPERTY;
        case -10: return Pb_ERROR_MEET_INTERFACE_UPPONMAXVALUE;
        case -11: return Pb_ERROR_MEET_INTERFACE_ZERO;
        case -12: return Pb_ERROR_MEET_INTERFACE_PARAMETER;
        case -13: return Pb_ERROR_MEET_INTERFACE_DATA;
        case -14: return Pb_ERROR_MEET_INTERFACE_UNAUTHORIZED;
        case -15: return Pb_ERROR_MEET_INTERFACE_NOCONNECT;
        case -16: return Pb_ERROR_MEET_INTERFACE_SOCKET;
        case -17: return Pb_ERROR_MEET_INTERFACE_NAMEORPWD;
        case -18: return Pb_ERROR_MEET_INTERFACE_SERVERERR;
        case -19: return Pb_ERROR_MEET_INTERFACE_NOSMSCNT;
        case -20: return Pb_ERROR_MEET_INTERFACE_OPENFILEERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Error>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Error> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Error>() {
            public Pb_Error findValueByNumber(int number) {
              return Pb_Error.forNumber(number);
            }
          };

    private final int value;

    private Pb_Error(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Error)
  }

  /**
   * <pre>
   *&#47;/数据后台回复的错误信息
   * </pre>
   *
   * Protobuf enum {@code Pb_DB_StatusCode}
   */
  public enum Pb_DB_StatusCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *多条查询记录
     * </pre>
     *
     * <code>Pb_STATUS_MULTIRECORD = 0;</code>
     */
    Pb_STATUS_MULTIRECORD(0),
    /**
     * <pre>
     *单条查询记录
     * </pre>
     *
     * <code>Pb_STATUS_SINGLERECORDD = 1;</code>
     */
    Pb_STATUS_SINGLERECORDD(1),
    /**
     * <pre>
     *无返回记录
     * </pre>
     *
     * <code>Pb_STATUS_NORECORED = 2;</code>
     */
    Pb_STATUS_NORECORED(2),
    /**
     * <pre>
     *操作成功
     * </pre>
     *
     * <code>Pb_STATUS_DONE = 3;</code>
     */
    Pb_STATUS_DONE(3),
    /**
     * <pre>
     *请求失败
     * </pre>
     *
     * <code>Pb_STATUS_FAIL = 4;</code>
     */
    Pb_STATUS_FAIL(4),
    /**
     * <pre>
     *数据库异常
     * </pre>
     *
     * <code>Pb_STATUS_EXCPT_DB = 5;</code>
     */
    Pb_STATUS_EXCPT_DB(5),
    /**
     * <pre>
     *服务器异常
     * </pre>
     *
     * <code>Pb_STATUS_EXCPT_SV = 6;</code>
     */
    Pb_STATUS_EXCPT_SV(6),
    /**
     * <pre>
     *权限限制
     * </pre>
     *
     * <code>Pb_STATUS_ACCESSDENIED = 7;</code>
     */
    Pb_STATUS_ACCESSDENIED(7),
    /**
     * <pre>
     *密码错误
     * </pre>
     *
     * <code>Pb_STATUS_PSWFAILED = 8;</code>
     */
    Pb_STATUS_PSWFAILED(8),
    /**
     * <pre>
     *创建会议有冲突
     * </pre>
     *
     * <code>Pb_STATUS_COLL_MEETING = 9;</code>
     */
    Pb_STATUS_COLL_MEETING(9),
    /**
     * <pre>
     *参数错误,不应该为0
     * </pre>
     *
     * <code>Pb_STATUS_PARAMETERZERO = 10;</code>
     */
    Pb_STATUS_PARAMETERZERO(10),
    /**
     * <pre>
     *不存在的数据
     * </pre>
     *
     * <code>Pb_STATUS_NOTEXIST = 11;</code>
     */
    Pb_STATUS_NOTEXIST(11),
    /**
     * <pre>
     *协议版本不区配		
     * </pre>
     *
     * <code>Pb_STATUS_PROTOLDISMATCH = 12;</code>
     */
    Pb_STATUS_PROTOLDISMATCH(12),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *多条查询记录
     * </pre>
     *
     * <code>Pb_STATUS_MULTIRECORD = 0;</code>
     */
    public static final int Pb_STATUS_MULTIRECORD_VALUE = 0;
    /**
     * <pre>
     *单条查询记录
     * </pre>
     *
     * <code>Pb_STATUS_SINGLERECORDD = 1;</code>
     */
    public static final int Pb_STATUS_SINGLERECORDD_VALUE = 1;
    /**
     * <pre>
     *无返回记录
     * </pre>
     *
     * <code>Pb_STATUS_NORECORED = 2;</code>
     */
    public static final int Pb_STATUS_NORECORED_VALUE = 2;
    /**
     * <pre>
     *操作成功
     * </pre>
     *
     * <code>Pb_STATUS_DONE = 3;</code>
     */
    public static final int Pb_STATUS_DONE_VALUE = 3;
    /**
     * <pre>
     *请求失败
     * </pre>
     *
     * <code>Pb_STATUS_FAIL = 4;</code>
     */
    public static final int Pb_STATUS_FAIL_VALUE = 4;
    /**
     * <pre>
     *数据库异常
     * </pre>
     *
     * <code>Pb_STATUS_EXCPT_DB = 5;</code>
     */
    public static final int Pb_STATUS_EXCPT_DB_VALUE = 5;
    /**
     * <pre>
     *服务器异常
     * </pre>
     *
     * <code>Pb_STATUS_EXCPT_SV = 6;</code>
     */
    public static final int Pb_STATUS_EXCPT_SV_VALUE = 6;
    /**
     * <pre>
     *权限限制
     * </pre>
     *
     * <code>Pb_STATUS_ACCESSDENIED = 7;</code>
     */
    public static final int Pb_STATUS_ACCESSDENIED_VALUE = 7;
    /**
     * <pre>
     *密码错误
     * </pre>
     *
     * <code>Pb_STATUS_PSWFAILED = 8;</code>
     */
    public static final int Pb_STATUS_PSWFAILED_VALUE = 8;
    /**
     * <pre>
     *创建会议有冲突
     * </pre>
     *
     * <code>Pb_STATUS_COLL_MEETING = 9;</code>
     */
    public static final int Pb_STATUS_COLL_MEETING_VALUE = 9;
    /**
     * <pre>
     *参数错误,不应该为0
     * </pre>
     *
     * <code>Pb_STATUS_PARAMETERZERO = 10;</code>
     */
    public static final int Pb_STATUS_PARAMETERZERO_VALUE = 10;
    /**
     * <pre>
     *不存在的数据
     * </pre>
     *
     * <code>Pb_STATUS_NOTEXIST = 11;</code>
     */
    public static final int Pb_STATUS_NOTEXIST_VALUE = 11;
    /**
     * <pre>
     *协议版本不区配		
     * </pre>
     *
     * <code>Pb_STATUS_PROTOLDISMATCH = 12;</code>
     */
    public static final int Pb_STATUS_PROTOLDISMATCH_VALUE = 12;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_DB_StatusCode valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_DB_StatusCode forNumber(int value) {
      switch (value) {
        case 0: return Pb_STATUS_MULTIRECORD;
        case 1: return Pb_STATUS_SINGLERECORDD;
        case 2: return Pb_STATUS_NORECORED;
        case 3: return Pb_STATUS_DONE;
        case 4: return Pb_STATUS_FAIL;
        case 5: return Pb_STATUS_EXCPT_DB;
        case 6: return Pb_STATUS_EXCPT_SV;
        case 7: return Pb_STATUS_ACCESSDENIED;
        case 8: return Pb_STATUS_PSWFAILED;
        case 9: return Pb_STATUS_COLL_MEETING;
        case 10: return Pb_STATUS_PARAMETERZERO;
        case 11: return Pb_STATUS_NOTEXIST;
        case 12: return Pb_STATUS_PROTOLDISMATCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_DB_StatusCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_DB_StatusCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_DB_StatusCode>() {
            public Pb_DB_StatusCode findValueByNumber(int number) {
              return Pb_DB_StatusCode.forNumber(number);
            }
          };

    private final int value;

    private Pb_DB_StatusCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_DB_StatusCode)
  }

  /**
   * <pre>
   *操作类型
   * </pre>
   *
   * Protobuf enum {@code Pb_Type}
   */
  public enum Pb_Type
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *初始化环境
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_INITENV = 0;</code>
     */
    Pb_TYPE_MEET_INTERFACE_INITENV(0),
    /**
     * <pre>
     *平台时间 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TIME = 1;</code>
     */
    Pb_TYPE_MEET_INTERFACE_TIME(1),
    /**
     * <pre>
     *平台初始化完毕
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_READY = 2;</code>
     */
    Pb_TYPE_MEET_INTERFACE_READY(2),
    /**
     * <pre>
     *平台下载 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DOWNLOAD = 3;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DOWNLOAD(3),
    /**
     * <pre>
     *平台上传 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_UPLOAD = 4;</code>
     */
    Pb_TYPE_MEET_INTERFACE_UPLOAD(4),
    /**
     * <pre>
     *平台播放进度通知 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEDIAPLAYPOSINFO = 5;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEDIAPLAYPOSINFO(5),
    /**
     * <pre>
     *设备
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEINFO = 6;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DEVICEINFO(6),
    /**
     * <pre>
     *会议网页
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEFAULTURL = 7;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DEFAULTURL(7),
    /**
     * <pre>
     *管理员
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ADMIN = 8;</code>
     */
    Pb_TYPE_MEET_INTERFACE_ADMIN(8),
    /**
     * <pre>
     *设备控制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICECONTROL = 9;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DEVICECONTROL(9),
    /**
     * <pre>
     *常用人员信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PEOPLE = 10;</code>
     */
    Pb_TYPE_MEET_INTERFACE_PEOPLE(10),
    /**
     * <pre>
     *参会人员信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBER = 11;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEMBER(11),
    /**
     * <pre>
     *参会人员分组
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERGROUP = 12;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEMBERGROUP(12),
    /**
     * <pre>
     *参会人员分组人员
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERGROUPITEM = 13;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEMBERGROUPITEM(13),
    /**
     * <pre>
     *设备会议信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEFACESHOW = 14;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DEVICEFACESHOW(14),
    /**
     * <pre>
     *会场
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ROOM = 15;</code>
     */
    Pb_TYPE_MEET_INTERFACE_ROOM(15),
    /**
     * <pre>
     *会场设备
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ROOMDEVICE = 16;</code>
     */
    Pb_TYPE_MEET_INTERFACE_ROOMDEVICE(16),
    /**
     * <pre>
     *文件推送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILEPUSH = 17;</code>
     */
    Pb_TYPE_MEET_INTERFACE_FILEPUSH(17),
    /**
     * <pre>
     *流请求推送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_REQUESTSTREAMPUSH = 18;</code>
     */
    Pb_TYPE_MEET_INTERFACE_REQUESTSTREAMPUSH(18),
    /**
     * <pre>
     *流推送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_STREAMPUSH = 19;</code>
     */
    Pb_TYPE_MEET_INTERFACE_STREAMPUSH(19),
    /**
     * <pre>
     *会议信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETINFO = 20;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETINFO(20),
    /**
     * <pre>
     *会议议程
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETAGENDA = 21;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETAGENDA(21),
    /**
     * <pre>
     *会议公告
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETBULLET = 22;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETBULLET(22),
    /**
     * <pre>
     *会议目录
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETDIRECTORY = 23;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETDIRECTORY(23),
    /**
     * <pre>
     *会议目录文件
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYFILE = 24;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYFILE(24),
    /**
     * <pre>
     *会议目录权限
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYRIGHT = 25;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYRIGHT(25),
    /**
     * <pre>
     *会议视频
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETVIDEO = 26;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETVIDEO(26),
    /**
     * <pre>
     *会议双屏显示
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETTABLECARD = 27;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETTABLECARD(27),
    /**
     * <pre>
     *会议排位
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSEAT = 28;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETSEAT(28),
    /**
     * <pre>
     *会议交流
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETIM = 29;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETIM(29),
    /**
     * <pre>
     *会议发起投票
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETONVOTING = 30;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETONVOTING(30),
    /**
     * <pre>
     *会议投票信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO = 31;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO(31),
    /**
     * <pre>
     *会议投票人信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED = 32;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED(32),
    /**
     * <pre>
     *会议管理会场
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MANAGEROOM = 33;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MANAGEROOM(33),
    /**
     * <pre>
     *会议签到
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSIGN = 34;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETSIGN(34),
    /**
     * <pre>
     *会议白板
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_WHITEBOARD = 35;</code>
     */
    Pb_TYPE_MEET_INTERFACE_WHITEBOARD(35),
    /**
     * <pre>
     *会议功能配置
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FUNCONFIG = 36;</code>
     */
    Pb_TYPE_MEET_INTERFACE_FUNCONFIG(36),
    /**
     * <pre>
     *参会人员权限信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERPERMISSION = 37;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEMBERPERMISSION(37),
    /**
     * <pre>
     *常用人员分组
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PEOPLEGROUP = 38;</code>
     */
    Pb_TYPE_MEET_INTERFACE_PEOPLEGROUP(38),
    /**
     * <pre>
     *常用人员分组人员
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PEOPLEGROUPITEM = 39;</code>
     */
    Pb_TYPE_MEET_INTERFACE_PEOPLEGROUPITEM(39),
    /**
     * <pre>
     *屏幕鼠标控制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SCREENMOUSECONTROL = 40;</code>
     */
    Pb_TYPE_MEET_INTERFACE_SCREENMOUSECONTROL(40),
    /**
     * <pre>
     *屏幕键盘控制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SCREENKEYBOARDCONTROL = 41;</code>
     */
    Pb_TYPE_MEET_INTERFACE_SCREENKEYBOARDCONTROL(41),
    /**
     * <pre>
     *设备当前会议的一些信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEMEETSTATUS = 42;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DEVICEMEETSTATUS(42),
    /**
     * <pre>
     *设备交互信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEOPER = 43;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DEVICEOPER(43),
    /**
     * <pre>
     *数据库后台回复错误信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DBSERVERERROR = 44;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DBSERVERERROR(44),
    /**
     * <pre>
     *媒体播放
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEDIAPLAY = 45;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEDIAPLAY(45),
    /**
     * <pre>
     *流播放
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_STREAMPLAY = 46;</code>
     */
    Pb_TYPE_MEET_INTERFACE_STREAMPLAY(46),
    /**
     * <pre>
     *流播放
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_STOPPLAY = 47;</code>
     */
    Pb_TYPE_MEET_INTERFACE_STOPPLAY(47),
    /**
     * <pre>
     *参会人员白板颜色
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERCOLOR = 48;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEMBERCOLOR(48),
    /**
     * <pre>
     *上下文
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETCONTEXT = 49;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETCONTEXT(49),
    /**
     * <pre>
     *缓存清理,清空所有缓存,其它类型也支持单独
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETCLEAR = 50;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETCLEAR(50),
    /**
     * <pre>
     *会议统计
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC = 51;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC(51),
    /**
     * <pre>
     *界面配置
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETFACECONFIG = 52;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETFACECONFIG(52),
    /**
     * <pre>
     *邮件发送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSENDMAIL = 53;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETSENDMAIL(53),
    /**
     * <pre>
     *会议文件评分相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILESCORE = 54;</code>
     */
    Pb_TYPE_MEET_INTERFACE_FILESCORE(54),
    /**
     * <pre>
     *会议文件评价相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILEEVALUATE = 55;</code>
     */
    Pb_TYPE_MEET_INTERFACE_FILEEVALUATE(55),
    /**
     * <pre>
     *会议评价相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETEVALUATE = 56;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETEVALUATE(56),
    /**
     * <pre>
     *管理员操作日志相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SYSTEMLOG = 57;</code>
     */
    Pb_TYPE_MEET_INTERFACE_SYSTEMLOG(57),
    /**
     * <pre>
     *设备ID校验
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEVALIDATE = 58;</code>
     */
    Pb_TYPE_MEET_INTERFACE_DEVICEVALIDATE(58),
    /**
     * <pre>
     *平台功能限制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SYSTEMFUNCTIONLIMIT = 59;</code>
     */
    Pb_TYPE_MEET_INTERFACE_SYSTEMFUNCTIONLIMIT(59),
    /**
     * <pre>
     *全局字串
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PUBLICINFO = 60;</code>
     */
    Pb_TYPE_MEET_INTERFACE_PUBLICINFO(60),
    /**
     * <pre>
     *自定义文件评分投票
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILESCOREVOTE = 61;</code>
     */
    Pb_TYPE_MEET_INTERFACE_FILESCOREVOTE(61),
    /**
     * <pre>
     *PDF文件多人同时书写
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PDFWHITEBOARD = 62;</code>
     */
    Pb_TYPE_MEET_INTERFACE_PDFWHITEBOARD(62),
    /**
     * <pre>
     *自定义文件评分投票记名信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILESCOREVOTESIGN = 63;</code>
     */
    Pb_TYPE_MEET_INTERFACE_FILESCOREVOTESIGN(63),
    /**
     * <pre>
     *中控生物认证
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ZKIDENTIFY = 64;</code>
     */
    Pb_TYPE_MEET_INTERFACE_ZKIDENTIFY(64),
    /**
     * <pre>
     * 短信服务
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SMSSERVICE = 65;</code>
     */
    Pb_TYPE_MEET_INTERFACE_SMSSERVICE(65),
    /**
     * <pre>
     * 升级软件
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_UPDATE = 66;</code>
     */
    Pb_TYPE_MEET_INTERFACE_UPDATE(66),
    /**
     * <pre>
     *会议议题
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TOPIC = 67;</code>
     */
    Pb_TYPE_MEET_INTERFACE_TOPIC(67),
    /**
     * <pre>
     * 会议议题参加单位
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TOPICGROUP = 68;</code>
     */
    Pb_TYPE_MEET_INTERFACE_TOPICGROUP(68),
    /**
     * <pre>
     * 会议议题权限
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TOPICPERMINSSION = 69;</code>
     */
    Pb_TYPE_MEET_INTERFACE_TOPICPERMINSSION(69),
    /**
     * <pre>
     * 会议发布任务
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETTASK = 70;</code>
     */
    Pb_TYPE_MEET_INTERFACE_MEETTASK(70),
    /**
     * <pre>
     *退出释放资源
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_EXITENV = 999;</code>
     */
    Pb_TYPE_MEET_INTERFACE_EXITENV(999),
    /**
     * <pre>
     *网页登陆验证（登陆Pb_METHOD_MEET_INTERFACE_LOGON，退出:Pb_METHOD_MEET_INTERFACE_EXIT,查询可用在线数量Pb_METHOD_MEET_INTERFACE_QUERY(协议头ret字段返回可用值，小于0表示错误值 ））
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_WEBSESSIONID = 1000;</code>
     */
    Pb_TYPE_MEET_INTERFACE_WEBSESSIONID(1000),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *初始化环境
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_INITENV = 0;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_INITENV_VALUE = 0;
    /**
     * <pre>
     *平台时间 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TIME = 1;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_TIME_VALUE = 1;
    /**
     * <pre>
     *平台初始化完毕
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_READY = 2;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_READY_VALUE = 2;
    /**
     * <pre>
     *平台下载 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DOWNLOAD = 3;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DOWNLOAD_VALUE = 3;
    /**
     * <pre>
     *平台上传 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_UPLOAD = 4;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_UPLOAD_VALUE = 4;
    /**
     * <pre>
     *平台播放进度通知 -- 高频回调
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEDIAPLAYPOSINFO = 5;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEDIAPLAYPOSINFO_VALUE = 5;
    /**
     * <pre>
     *设备
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEINFO = 6;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DEVICEINFO_VALUE = 6;
    /**
     * <pre>
     *会议网页
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEFAULTURL = 7;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DEFAULTURL_VALUE = 7;
    /**
     * <pre>
     *管理员
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ADMIN = 8;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_ADMIN_VALUE = 8;
    /**
     * <pre>
     *设备控制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICECONTROL = 9;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DEVICECONTROL_VALUE = 9;
    /**
     * <pre>
     *常用人员信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PEOPLE = 10;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_PEOPLE_VALUE = 10;
    /**
     * <pre>
     *参会人员信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBER = 11;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEMBER_VALUE = 11;
    /**
     * <pre>
     *参会人员分组
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERGROUP = 12;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEMBERGROUP_VALUE = 12;
    /**
     * <pre>
     *参会人员分组人员
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERGROUPITEM = 13;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEMBERGROUPITEM_VALUE = 13;
    /**
     * <pre>
     *设备会议信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEFACESHOW = 14;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DEVICEFACESHOW_VALUE = 14;
    /**
     * <pre>
     *会场
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ROOM = 15;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_ROOM_VALUE = 15;
    /**
     * <pre>
     *会场设备
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ROOMDEVICE = 16;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_ROOMDEVICE_VALUE = 16;
    /**
     * <pre>
     *文件推送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILEPUSH = 17;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_FILEPUSH_VALUE = 17;
    /**
     * <pre>
     *流请求推送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_REQUESTSTREAMPUSH = 18;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_REQUESTSTREAMPUSH_VALUE = 18;
    /**
     * <pre>
     *流推送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_STREAMPUSH = 19;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_STREAMPUSH_VALUE = 19;
    /**
     * <pre>
     *会议信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETINFO = 20;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETINFO_VALUE = 20;
    /**
     * <pre>
     *会议议程
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETAGENDA = 21;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETAGENDA_VALUE = 21;
    /**
     * <pre>
     *会议公告
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETBULLET = 22;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETBULLET_VALUE = 22;
    /**
     * <pre>
     *会议目录
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETDIRECTORY = 23;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETDIRECTORY_VALUE = 23;
    /**
     * <pre>
     *会议目录文件
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYFILE = 24;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYFILE_VALUE = 24;
    /**
     * <pre>
     *会议目录权限
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYRIGHT = 25;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYRIGHT_VALUE = 25;
    /**
     * <pre>
     *会议视频
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETVIDEO = 26;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETVIDEO_VALUE = 26;
    /**
     * <pre>
     *会议双屏显示
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETTABLECARD = 27;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETTABLECARD_VALUE = 27;
    /**
     * <pre>
     *会议排位
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSEAT = 28;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETSEAT_VALUE = 28;
    /**
     * <pre>
     *会议交流
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETIM = 29;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETIM_VALUE = 29;
    /**
     * <pre>
     *会议发起投票
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETONVOTING = 30;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETONVOTING_VALUE = 30;
    /**
     * <pre>
     *会议投票信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO = 31;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO_VALUE = 31;
    /**
     * <pre>
     *会议投票人信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED = 32;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED_VALUE = 32;
    /**
     * <pre>
     *会议管理会场
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MANAGEROOM = 33;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MANAGEROOM_VALUE = 33;
    /**
     * <pre>
     *会议签到
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSIGN = 34;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETSIGN_VALUE = 34;
    /**
     * <pre>
     *会议白板
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_WHITEBOARD = 35;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_WHITEBOARD_VALUE = 35;
    /**
     * <pre>
     *会议功能配置
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FUNCONFIG = 36;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_FUNCONFIG_VALUE = 36;
    /**
     * <pre>
     *参会人员权限信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERPERMISSION = 37;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEMBERPERMISSION_VALUE = 37;
    /**
     * <pre>
     *常用人员分组
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PEOPLEGROUP = 38;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_PEOPLEGROUP_VALUE = 38;
    /**
     * <pre>
     *常用人员分组人员
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PEOPLEGROUPITEM = 39;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_PEOPLEGROUPITEM_VALUE = 39;
    /**
     * <pre>
     *屏幕鼠标控制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SCREENMOUSECONTROL = 40;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_SCREENMOUSECONTROL_VALUE = 40;
    /**
     * <pre>
     *屏幕键盘控制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SCREENKEYBOARDCONTROL = 41;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_SCREENKEYBOARDCONTROL_VALUE = 41;
    /**
     * <pre>
     *设备当前会议的一些信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEMEETSTATUS = 42;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DEVICEMEETSTATUS_VALUE = 42;
    /**
     * <pre>
     *设备交互信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEOPER = 43;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DEVICEOPER_VALUE = 43;
    /**
     * <pre>
     *数据库后台回复错误信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DBSERVERERROR = 44;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DBSERVERERROR_VALUE = 44;
    /**
     * <pre>
     *媒体播放
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEDIAPLAY = 45;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEDIAPLAY_VALUE = 45;
    /**
     * <pre>
     *流播放
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_STREAMPLAY = 46;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_STREAMPLAY_VALUE = 46;
    /**
     * <pre>
     *流播放
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_STOPPLAY = 47;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_STOPPLAY_VALUE = 47;
    /**
     * <pre>
     *参会人员白板颜色
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEMBERCOLOR = 48;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEMBERCOLOR_VALUE = 48;
    /**
     * <pre>
     *上下文
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETCONTEXT = 49;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETCONTEXT_VALUE = 49;
    /**
     * <pre>
     *缓存清理,清空所有缓存,其它类型也支持单独
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETCLEAR = 50;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETCLEAR_VALUE = 50;
    /**
     * <pre>
     *会议统计
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC = 51;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC_VALUE = 51;
    /**
     * <pre>
     *界面配置
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETFACECONFIG = 52;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETFACECONFIG_VALUE = 52;
    /**
     * <pre>
     *邮件发送
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETSENDMAIL = 53;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETSENDMAIL_VALUE = 53;
    /**
     * <pre>
     *会议文件评分相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILESCORE = 54;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_FILESCORE_VALUE = 54;
    /**
     * <pre>
     *会议文件评价相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILEEVALUATE = 55;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_FILEEVALUATE_VALUE = 55;
    /**
     * <pre>
     *会议评价相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETEVALUATE = 56;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETEVALUATE_VALUE = 56;
    /**
     * <pre>
     *管理员操作日志相关
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SYSTEMLOG = 57;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_SYSTEMLOG_VALUE = 57;
    /**
     * <pre>
     *设备ID校验
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_DEVICEVALIDATE = 58;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_DEVICEVALIDATE_VALUE = 58;
    /**
     * <pre>
     *平台功能限制
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SYSTEMFUNCTIONLIMIT = 59;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_SYSTEMFUNCTIONLIMIT_VALUE = 59;
    /**
     * <pre>
     *全局字串
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PUBLICINFO = 60;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_PUBLICINFO_VALUE = 60;
    /**
     * <pre>
     *自定义文件评分投票
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILESCOREVOTE = 61;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_FILESCOREVOTE_VALUE = 61;
    /**
     * <pre>
     *PDF文件多人同时书写
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_PDFWHITEBOARD = 62;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_PDFWHITEBOARD_VALUE = 62;
    /**
     * <pre>
     *自定义文件评分投票记名信息
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_FILESCOREVOTESIGN = 63;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_FILESCOREVOTESIGN_VALUE = 63;
    /**
     * <pre>
     *中控生物认证
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_ZKIDENTIFY = 64;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_ZKIDENTIFY_VALUE = 64;
    /**
     * <pre>
     * 短信服务
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_SMSSERVICE = 65;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_SMSSERVICE_VALUE = 65;
    /**
     * <pre>
     * 升级软件
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_UPDATE = 66;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_UPDATE_VALUE = 66;
    /**
     * <pre>
     *会议议题
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TOPIC = 67;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_TOPIC_VALUE = 67;
    /**
     * <pre>
     * 会议议题参加单位
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TOPICGROUP = 68;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_TOPICGROUP_VALUE = 68;
    /**
     * <pre>
     * 会议议题权限
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_TOPICPERMINSSION = 69;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_TOPICPERMINSSION_VALUE = 69;
    /**
     * <pre>
     * 会议发布任务
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_MEETTASK = 70;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_MEETTASK_VALUE = 70;
    /**
     * <pre>
     *退出释放资源
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_EXITENV = 999;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_EXITENV_VALUE = 999;
    /**
     * <pre>
     *网页登陆验证（登陆Pb_METHOD_MEET_INTERFACE_LOGON，退出:Pb_METHOD_MEET_INTERFACE_EXIT,查询可用在线数量Pb_METHOD_MEET_INTERFACE_QUERY(协议头ret字段返回可用值，小于0表示错误值 ））
     * </pre>
     *
     * <code>Pb_TYPE_MEET_INTERFACE_WEBSESSIONID = 1000;</code>
     */
    public static final int Pb_TYPE_MEET_INTERFACE_WEBSESSIONID_VALUE = 1000;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Type valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Type forNumber(int value) {
      switch (value) {
        case 0: return Pb_TYPE_MEET_INTERFACE_INITENV;
        case 1: return Pb_TYPE_MEET_INTERFACE_TIME;
        case 2: return Pb_TYPE_MEET_INTERFACE_READY;
        case 3: return Pb_TYPE_MEET_INTERFACE_DOWNLOAD;
        case 4: return Pb_TYPE_MEET_INTERFACE_UPLOAD;
        case 5: return Pb_TYPE_MEET_INTERFACE_MEDIAPLAYPOSINFO;
        case 6: return Pb_TYPE_MEET_INTERFACE_DEVICEINFO;
        case 7: return Pb_TYPE_MEET_INTERFACE_DEFAULTURL;
        case 8: return Pb_TYPE_MEET_INTERFACE_ADMIN;
        case 9: return Pb_TYPE_MEET_INTERFACE_DEVICECONTROL;
        case 10: return Pb_TYPE_MEET_INTERFACE_PEOPLE;
        case 11: return Pb_TYPE_MEET_INTERFACE_MEMBER;
        case 12: return Pb_TYPE_MEET_INTERFACE_MEMBERGROUP;
        case 13: return Pb_TYPE_MEET_INTERFACE_MEMBERGROUPITEM;
        case 14: return Pb_TYPE_MEET_INTERFACE_DEVICEFACESHOW;
        case 15: return Pb_TYPE_MEET_INTERFACE_ROOM;
        case 16: return Pb_TYPE_MEET_INTERFACE_ROOMDEVICE;
        case 17: return Pb_TYPE_MEET_INTERFACE_FILEPUSH;
        case 18: return Pb_TYPE_MEET_INTERFACE_REQUESTSTREAMPUSH;
        case 19: return Pb_TYPE_MEET_INTERFACE_STREAMPUSH;
        case 20: return Pb_TYPE_MEET_INTERFACE_MEETINFO;
        case 21: return Pb_TYPE_MEET_INTERFACE_MEETAGENDA;
        case 22: return Pb_TYPE_MEET_INTERFACE_MEETBULLET;
        case 23: return Pb_TYPE_MEET_INTERFACE_MEETDIRECTORY;
        case 24: return Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYFILE;
        case 25: return Pb_TYPE_MEET_INTERFACE_MEETDIRECTORYRIGHT;
        case 26: return Pb_TYPE_MEET_INTERFACE_MEETVIDEO;
        case 27: return Pb_TYPE_MEET_INTERFACE_MEETTABLECARD;
        case 28: return Pb_TYPE_MEET_INTERFACE_MEETSEAT;
        case 29: return Pb_TYPE_MEET_INTERFACE_MEETIM;
        case 30: return Pb_TYPE_MEET_INTERFACE_MEETONVOTING;
        case 31: return Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO;
        case 32: return Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED;
        case 33: return Pb_TYPE_MEET_INTERFACE_MANAGEROOM;
        case 34: return Pb_TYPE_MEET_INTERFACE_MEETSIGN;
        case 35: return Pb_TYPE_MEET_INTERFACE_WHITEBOARD;
        case 36: return Pb_TYPE_MEET_INTERFACE_FUNCONFIG;
        case 37: return Pb_TYPE_MEET_INTERFACE_MEMBERPERMISSION;
        case 38: return Pb_TYPE_MEET_INTERFACE_PEOPLEGROUP;
        case 39: return Pb_TYPE_MEET_INTERFACE_PEOPLEGROUPITEM;
        case 40: return Pb_TYPE_MEET_INTERFACE_SCREENMOUSECONTROL;
        case 41: return Pb_TYPE_MEET_INTERFACE_SCREENKEYBOARDCONTROL;
        case 42: return Pb_TYPE_MEET_INTERFACE_DEVICEMEETSTATUS;
        case 43: return Pb_TYPE_MEET_INTERFACE_DEVICEOPER;
        case 44: return Pb_TYPE_MEET_INTERFACE_DBSERVERERROR;
        case 45: return Pb_TYPE_MEET_INTERFACE_MEDIAPLAY;
        case 46: return Pb_TYPE_MEET_INTERFACE_STREAMPLAY;
        case 47: return Pb_TYPE_MEET_INTERFACE_STOPPLAY;
        case 48: return Pb_TYPE_MEET_INTERFACE_MEMBERCOLOR;
        case 49: return Pb_TYPE_MEET_INTERFACE_MEETCONTEXT;
        case 50: return Pb_TYPE_MEET_INTERFACE_MEETCLEAR;
        case 51: return Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC;
        case 52: return Pb_TYPE_MEET_INTERFACE_MEETFACECONFIG;
        case 53: return Pb_TYPE_MEET_INTERFACE_MEETSENDMAIL;
        case 54: return Pb_TYPE_MEET_INTERFACE_FILESCORE;
        case 55: return Pb_TYPE_MEET_INTERFACE_FILEEVALUATE;
        case 56: return Pb_TYPE_MEET_INTERFACE_MEETEVALUATE;
        case 57: return Pb_TYPE_MEET_INTERFACE_SYSTEMLOG;
        case 58: return Pb_TYPE_MEET_INTERFACE_DEVICEVALIDATE;
        case 59: return Pb_TYPE_MEET_INTERFACE_SYSTEMFUNCTIONLIMIT;
        case 60: return Pb_TYPE_MEET_INTERFACE_PUBLICINFO;
        case 61: return Pb_TYPE_MEET_INTERFACE_FILESCOREVOTE;
        case 62: return Pb_TYPE_MEET_INTERFACE_PDFWHITEBOARD;
        case 63: return Pb_TYPE_MEET_INTERFACE_FILESCOREVOTESIGN;
        case 64: return Pb_TYPE_MEET_INTERFACE_ZKIDENTIFY;
        case 65: return Pb_TYPE_MEET_INTERFACE_SMSSERVICE;
        case 66: return Pb_TYPE_MEET_INTERFACE_UPDATE;
        case 67: return Pb_TYPE_MEET_INTERFACE_TOPIC;
        case 68: return Pb_TYPE_MEET_INTERFACE_TOPICGROUP;
        case 69: return Pb_TYPE_MEET_INTERFACE_TOPICPERMINSSION;
        case 70: return Pb_TYPE_MEET_INTERFACE_MEETTASK;
        case 999: return Pb_TYPE_MEET_INTERFACE_EXITENV;
        case 1000: return Pb_TYPE_MEET_INTERFACE_WEBSESSIONID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Type>() {
            public Pb_Type findValueByNumber(int number) {
              return Pb_Type.forNumber(number);
            }
          };

    private final int value;

    private Pb_Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Type)
  }

  /**
   * <pre>
   *操作方法
   * </pre>
   *
   * Protobuf enum {@code Pb_Method}
   */
  public enum Pb_Method
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *不使用
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ZERO = 0;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ZERO(0),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_QUERY = 1;</code>
     */
    Pb_METHOD_MEET_INTERFACE_QUERY(1),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_ADD = 2;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ADD(2),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFY = 3;</code>
     */
    Pb_METHOD_MEET_INTERFACE_MODIFY(3),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DEL = 4;</code>
     */
    Pb_METHOD_MEET_INTERFACE_DEL(4),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SET = 6;</code>
     */
    Pb_METHOD_MEET_INTERFACE_SET(6),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_GETSIZE = 7;</code>
     */
    Pb_METHOD_MEET_INTERFACE_GETSIZE(7),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_NOTIFY = 8;</code>
     */
    Pb_METHOD_MEET_INTERFACE_NOTIFY(8),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_CLEAR = 9;</code>
     */
    Pb_METHOD_MEET_INTERFACE_CLEAR(9),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_LOGON = 10;</code>
     */
    Pb_METHOD_MEET_INTERFACE_LOGON(10),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PUSH = 11;</code>
     */
    Pb_METHOD_MEET_INTERFACE_PUSH(11),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_ASK = 12;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ASK(12),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_REJECT = 13;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REJECT(13),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_EXIT = 14;</code>
     */
    Pb_METHOD_MEET_INTERFACE_EXIT(14),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_OPEN = 15;</code>
     */
    Pb_METHOD_MEET_INTERFACE_OPEN(15),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_CLOSE = 16;</code>
     */
    Pb_METHOD_MEET_INTERFACE_CLOSE(16),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_ENTER = 17;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ENTER(17),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PAGEQUERY = 18;</code>
     */
    Pb_METHOD_MEET_INTERFACE_PAGEQUERY(18),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFYNAME = 19;</code>
     */
    Pb_METHOD_MEET_INTERFACE_MODIFYNAME(19),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFYINFO = 20;</code>
     */
    Pb_METHOD_MEET_INTERFACE_MODIFYINFO(20),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFYSTATUS = 21;</code>
     */
    Pb_METHOD_MEET_INTERFACE_MODIFYSTATUS(21),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYID = 22;</code>
     */
    Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYID(22),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYNAME = 23;</code>
     */
    Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYNAME(23),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_CONTROL = 24;</code>
     */
    Pb_METHOD_MEET_INTERFACE_CONTROL(24),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SAVE = 25;</code>
     */
    Pb_METHOD_MEET_INTERFACE_SAVE(25),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_REFRESH = 26;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REFRESH(26),
    /**
     * <pre>
     *复合查询
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_COMPLEXQUERY = 27;</code>
     */
    Pb_METHOD_MEET_INTERFACE_COMPLEXQUERY(27),
    /**
     * <pre>
     *复合按页查询
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_COMPLEXPAGEQUERY = 28;</code>
     */
    Pb_METHOD_MEET_INTERFACE_COMPLEXPAGEQUERY(28),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_START = 29;</code>
     */
    Pb_METHOD_MEET_INTERFACE_START(29),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_STOP = 30;</code>
     */
    Pb_METHOD_MEET_INTERFACE_STOP(30),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PLAY = 31;</code>
     */
    Pb_METHOD_MEET_INTERFACE_PLAY(31),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PAUSE = 32;</code>
     */
    Pb_METHOD_MEET_INTERFACE_PAUSE(32),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MOVE = 33;</code>
     */
    Pb_METHOD_MEET_INTERFACE_MOVE(33),
    /**
     * <pre>
     *缩放操作
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ZOOM = 34;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ZOOM(34),
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_BACK = 35;</code>
     */
    Pb_METHOD_MEET_INTERFACE_BACK(35),
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUEST = 36;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REQUEST(36),
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_BROADCAST = 37;</code>
     */
    Pb_METHOD_MEET_INTERFACE_BROADCAST(37),
    /**
     * <pre>
     *查询属性
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_QUERYPROPERTY = 38;</code>
     */
    Pb_METHOD_MEET_INTERFACE_QUERYPROPERTY(38),
    /**
     * <pre>
     *设置属性
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_SETPROPERTY = 39;</code>
     */
    Pb_METHOD_MEET_INTERFACE_SETPROPERTY(39),
    /**
     * <pre>
     *复制
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_DUMP = 40;</code>
     */
    Pb_METHOD_MEET_INTERFACE_DUMP(40),
    /**
     * <pre>
     *询问推送
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTPUSH = 41;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REQUESTPUSH(41),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DELALL = 42;</code>
     */
    Pb_METHOD_MEET_INTERFACE_DELALL(42),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SEND = 43;</code>
     */
    Pb_METHOD_MEET_INTERFACE_SEND(43),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DETAILINFO = 44;</code>
     */
    Pb_METHOD_MEET_INTERFACE_DETAILINFO(44),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_INIT = 45;</code>
     */
    Pb_METHOD_MEET_INTERFACE_INIT(45),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DESTORY = 46;</code>
     */
    Pb_METHOD_MEET_INTERFACE_DESTORY(46),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MAKEVIDEO = 47;</code>
     */
    Pb_METHOD_MEET_INTERFACE_MAKEVIDEO(47),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SUBMIT = 48;</code>
     */
    Pb_METHOD_MEET_INTERFACE_SUBMIT(48),
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PUBLIST = 49;</code>
     */
    Pb_METHOD_MEET_INTERFACE_PUBLIST(49),
    /**
     * <pre>
     *缓存
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_CACHE = 50;</code>
     */
    Pb_METHOD_MEET_INTERFACE_CACHE(50),
    /**
     * <pre>
     *子级数据
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_CHILDRED = 51;</code>
     */
    Pb_METHOD_MEET_INTERFACE_CHILDRED(51),
    /**
     * <pre>
     *所有子级数据
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ALLCHILDRED = 52;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ALLCHILDRED(52),
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSE = 53;</code>
     */
    Pb_METHOD_MEET_INTERFACE_RESPONSE(53),
    /**
     * <pre>
     *请求管理员
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTTOMANAGE = 54;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REQUESTTOMANAGE(54),
    /**
     * <pre>
     *回复请求管理员
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSETOMANAGE = 55;</code>
     */
    Pb_METHOD_MEET_INTERFACE_RESPONSETOMANAGE(55),
    /**
     * <pre>
     *请求参会人员权限
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTPRIVELIGE = 56;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REQUESTPRIVELIGE(56),
    /**
     * <pre>
     *回复请求参会人员权限
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSEPRIVELIGE = 57;</code>
     */
    Pb_METHOD_MEET_INTERFACE_RESPONSEPRIVELIGE(57),
    /**
     * <pre>
     *更新、升级
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_UPDATE = 58;</code>
     */
    Pb_METHOD_MEET_INTERFACE_UPDATE(58),
    /**
     * <pre>
     *文本消息
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_TEXTMSG = 59;</code>
     */
    Pb_METHOD_MEET_INTERFACE_TEXTMSG(59),
    /**
     * <pre>
     *重启
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REBOOT = 60;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REBOOT(60),
    /**
     * <pre>
     *播放资源信息
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESINFO = 61;</code>
     */
    Pb_METHOD_MEET_INTERFACE_RESINFO(61),
    /**
     * <pre>
     *定位
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_LOCATE = 62;</code>
     */
    Pb_METHOD_MEET_INTERFACE_LOCATE(62),
    /**
     * <pre>
     *执行邀请
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTINVITE = 63;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REQUESTINVITE(63),
    /**
     * <pre>
     *回复邀请
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSEINVITE = 64;</code>
     */
    Pb_METHOD_MEET_INTERFACE_RESPONSEINVITE(64),
    /**
     * <pre>
     *退出对讲
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_EXITCHAT = 65;</code>
     */
    Pb_METHOD_MEET_INTERFACE_EXITCHAT(65),
    /**
     * <pre>
     *远程配置
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REMOTESET = 66;</code>
     */
    Pb_METHOD_MEET_INTERFACE_REMOTESET(66),
    /**
     * <pre>
     *添加INK
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDINK = 1001;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ADDINK(1001),
    /**
     * <pre>
     *添加矩形、直线、圆形
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDRECT = 1002;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ADDRECT(1002),
    /**
     * <pre>
     *添加文本
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDTEXT = 1003;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ADDTEXT(1003),
    /**
     * <pre>
     *添加图片
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDPICTURE = 1004;</code>
     */
    Pb_METHOD_MEET_INTERFACE_ADDPICTURE(1004),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *不使用
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ZERO = 0;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ZERO_VALUE = 0;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_QUERY = 1;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_QUERY_VALUE = 1;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_ADD = 2;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ADD_VALUE = 2;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFY = 3;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_MODIFY_VALUE = 3;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DEL = 4;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_DEL_VALUE = 4;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SET = 6;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_SET_VALUE = 6;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_GETSIZE = 7;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_GETSIZE_VALUE = 7;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_NOTIFY = 8;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_NOTIFY_VALUE = 8;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_CLEAR = 9;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_CLEAR_VALUE = 9;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_LOGON = 10;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_LOGON_VALUE = 10;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PUSH = 11;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_PUSH_VALUE = 11;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_ASK = 12;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ASK_VALUE = 12;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_REJECT = 13;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REJECT_VALUE = 13;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_EXIT = 14;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_EXIT_VALUE = 14;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_OPEN = 15;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_OPEN_VALUE = 15;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_CLOSE = 16;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_CLOSE_VALUE = 16;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_ENTER = 17;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ENTER_VALUE = 17;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PAGEQUERY = 18;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_PAGEQUERY_VALUE = 18;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFYNAME = 19;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_MODIFYNAME_VALUE = 19;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFYINFO = 20;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_MODIFYINFO_VALUE = 20;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MODIFYSTATUS = 21;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_MODIFYSTATUS_VALUE = 21;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYID = 22;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYID_VALUE = 22;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYNAME = 23;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYNAME_VALUE = 23;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_CONTROL = 24;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_CONTROL_VALUE = 24;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SAVE = 25;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_SAVE_VALUE = 25;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_REFRESH = 26;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REFRESH_VALUE = 26;
    /**
     * <pre>
     *复合查询
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_COMPLEXQUERY = 27;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_COMPLEXQUERY_VALUE = 27;
    /**
     * <pre>
     *复合按页查询
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_COMPLEXPAGEQUERY = 28;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_COMPLEXPAGEQUERY_VALUE = 28;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_START = 29;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_START_VALUE = 29;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_STOP = 30;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_STOP_VALUE = 30;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PLAY = 31;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_PLAY_VALUE = 31;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PAUSE = 32;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_PAUSE_VALUE = 32;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MOVE = 33;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_MOVE_VALUE = 33;
    /**
     * <pre>
     *缩放操作
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ZOOM = 34;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ZOOM_VALUE = 34;
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_BACK = 35;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_BACK_VALUE = 35;
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUEST = 36;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REQUEST_VALUE = 36;
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_BROADCAST = 37;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_BROADCAST_VALUE = 37;
    /**
     * <pre>
     *查询属性
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_QUERYPROPERTY = 38;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_QUERYPROPERTY_VALUE = 38;
    /**
     * <pre>
     *设置属性
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_SETPROPERTY = 39;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_SETPROPERTY_VALUE = 39;
    /**
     * <pre>
     *复制
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_DUMP = 40;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_DUMP_VALUE = 40;
    /**
     * <pre>
     *询问推送
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTPUSH = 41;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REQUESTPUSH_VALUE = 41;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DELALL = 42;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_DELALL_VALUE = 42;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SEND = 43;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_SEND_VALUE = 43;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DETAILINFO = 44;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_DETAILINFO_VALUE = 44;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_INIT = 45;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_INIT_VALUE = 45;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_DESTORY = 46;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_DESTORY_VALUE = 46;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_MAKEVIDEO = 47;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_MAKEVIDEO_VALUE = 47;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_SUBMIT = 48;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_SUBMIT_VALUE = 48;
    /**
     * <code>Pb_METHOD_MEET_INTERFACE_PUBLIST = 49;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_PUBLIST_VALUE = 49;
    /**
     * <pre>
     *缓存
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_CACHE = 50;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_CACHE_VALUE = 50;
    /**
     * <pre>
     *子级数据
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_CHILDRED = 51;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_CHILDRED_VALUE = 51;
    /**
     * <pre>
     *所有子级数据
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ALLCHILDRED = 52;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ALLCHILDRED_VALUE = 52;
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSE = 53;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_RESPONSE_VALUE = 53;
    /**
     * <pre>
     *请求管理员
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTTOMANAGE = 54;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REQUESTTOMANAGE_VALUE = 54;
    /**
     * <pre>
     *回复请求管理员
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSETOMANAGE = 55;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_RESPONSETOMANAGE_VALUE = 55;
    /**
     * <pre>
     *请求参会人员权限
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTPRIVELIGE = 56;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REQUESTPRIVELIGE_VALUE = 56;
    /**
     * <pre>
     *回复请求参会人员权限
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSEPRIVELIGE = 57;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_RESPONSEPRIVELIGE_VALUE = 57;
    /**
     * <pre>
     *更新、升级
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_UPDATE = 58;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_UPDATE_VALUE = 58;
    /**
     * <pre>
     *文本消息
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_TEXTMSG = 59;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_TEXTMSG_VALUE = 59;
    /**
     * <pre>
     *重启
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REBOOT = 60;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REBOOT_VALUE = 60;
    /**
     * <pre>
     *播放资源信息
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESINFO = 61;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_RESINFO_VALUE = 61;
    /**
     * <pre>
     *定位
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_LOCATE = 62;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_LOCATE_VALUE = 62;
    /**
     * <pre>
     *执行邀请
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REQUESTINVITE = 63;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REQUESTINVITE_VALUE = 63;
    /**
     * <pre>
     *回复邀请
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_RESPONSEINVITE = 64;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_RESPONSEINVITE_VALUE = 64;
    /**
     * <pre>
     *退出对讲
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_EXITCHAT = 65;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_EXITCHAT_VALUE = 65;
    /**
     * <pre>
     *远程配置
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_REMOTESET = 66;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_REMOTESET_VALUE = 66;
    /**
     * <pre>
     *添加INK
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDINK = 1001;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ADDINK_VALUE = 1001;
    /**
     * <pre>
     *添加矩形、直线、圆形
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDRECT = 1002;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ADDRECT_VALUE = 1002;
    /**
     * <pre>
     *添加文本
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDTEXT = 1003;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ADDTEXT_VALUE = 1003;
    /**
     * <pre>
     *添加图片
     * </pre>
     *
     * <code>Pb_METHOD_MEET_INTERFACE_ADDPICTURE = 1004;</code>
     */
    public static final int Pb_METHOD_MEET_INTERFACE_ADDPICTURE_VALUE = 1004;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Method valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Method forNumber(int value) {
      switch (value) {
        case 0: return Pb_METHOD_MEET_INTERFACE_ZERO;
        case 1: return Pb_METHOD_MEET_INTERFACE_QUERY;
        case 2: return Pb_METHOD_MEET_INTERFACE_ADD;
        case 3: return Pb_METHOD_MEET_INTERFACE_MODIFY;
        case 4: return Pb_METHOD_MEET_INTERFACE_DEL;
        case 6: return Pb_METHOD_MEET_INTERFACE_SET;
        case 7: return Pb_METHOD_MEET_INTERFACE_GETSIZE;
        case 8: return Pb_METHOD_MEET_INTERFACE_NOTIFY;
        case 9: return Pb_METHOD_MEET_INTERFACE_CLEAR;
        case 10: return Pb_METHOD_MEET_INTERFACE_LOGON;
        case 11: return Pb_METHOD_MEET_INTERFACE_PUSH;
        case 12: return Pb_METHOD_MEET_INTERFACE_ASK;
        case 13: return Pb_METHOD_MEET_INTERFACE_REJECT;
        case 14: return Pb_METHOD_MEET_INTERFACE_EXIT;
        case 15: return Pb_METHOD_MEET_INTERFACE_OPEN;
        case 16: return Pb_METHOD_MEET_INTERFACE_CLOSE;
        case 17: return Pb_METHOD_MEET_INTERFACE_ENTER;
        case 18: return Pb_METHOD_MEET_INTERFACE_PAGEQUERY;
        case 19: return Pb_METHOD_MEET_INTERFACE_MODIFYNAME;
        case 20: return Pb_METHOD_MEET_INTERFACE_MODIFYINFO;
        case 21: return Pb_METHOD_MEET_INTERFACE_MODIFYSTATUS;
        case 22: return Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYID;
        case 23: return Pb_METHOD_MEET_INTERFACE_SINGLEQUERYBYNAME;
        case 24: return Pb_METHOD_MEET_INTERFACE_CONTROL;
        case 25: return Pb_METHOD_MEET_INTERFACE_SAVE;
        case 26: return Pb_METHOD_MEET_INTERFACE_REFRESH;
        case 27: return Pb_METHOD_MEET_INTERFACE_COMPLEXQUERY;
        case 28: return Pb_METHOD_MEET_INTERFACE_COMPLEXPAGEQUERY;
        case 29: return Pb_METHOD_MEET_INTERFACE_START;
        case 30: return Pb_METHOD_MEET_INTERFACE_STOP;
        case 31: return Pb_METHOD_MEET_INTERFACE_PLAY;
        case 32: return Pb_METHOD_MEET_INTERFACE_PAUSE;
        case 33: return Pb_METHOD_MEET_INTERFACE_MOVE;
        case 34: return Pb_METHOD_MEET_INTERFACE_ZOOM;
        case 35: return Pb_METHOD_MEET_INTERFACE_BACK;
        case 36: return Pb_METHOD_MEET_INTERFACE_REQUEST;
        case 37: return Pb_METHOD_MEET_INTERFACE_BROADCAST;
        case 38: return Pb_METHOD_MEET_INTERFACE_QUERYPROPERTY;
        case 39: return Pb_METHOD_MEET_INTERFACE_SETPROPERTY;
        case 40: return Pb_METHOD_MEET_INTERFACE_DUMP;
        case 41: return Pb_METHOD_MEET_INTERFACE_REQUESTPUSH;
        case 42: return Pb_METHOD_MEET_INTERFACE_DELALL;
        case 43: return Pb_METHOD_MEET_INTERFACE_SEND;
        case 44: return Pb_METHOD_MEET_INTERFACE_DETAILINFO;
        case 45: return Pb_METHOD_MEET_INTERFACE_INIT;
        case 46: return Pb_METHOD_MEET_INTERFACE_DESTORY;
        case 47: return Pb_METHOD_MEET_INTERFACE_MAKEVIDEO;
        case 48: return Pb_METHOD_MEET_INTERFACE_SUBMIT;
        case 49: return Pb_METHOD_MEET_INTERFACE_PUBLIST;
        case 50: return Pb_METHOD_MEET_INTERFACE_CACHE;
        case 51: return Pb_METHOD_MEET_INTERFACE_CHILDRED;
        case 52: return Pb_METHOD_MEET_INTERFACE_ALLCHILDRED;
        case 53: return Pb_METHOD_MEET_INTERFACE_RESPONSE;
        case 54: return Pb_METHOD_MEET_INTERFACE_REQUESTTOMANAGE;
        case 55: return Pb_METHOD_MEET_INTERFACE_RESPONSETOMANAGE;
        case 56: return Pb_METHOD_MEET_INTERFACE_REQUESTPRIVELIGE;
        case 57: return Pb_METHOD_MEET_INTERFACE_RESPONSEPRIVELIGE;
        case 58: return Pb_METHOD_MEET_INTERFACE_UPDATE;
        case 59: return Pb_METHOD_MEET_INTERFACE_TEXTMSG;
        case 60: return Pb_METHOD_MEET_INTERFACE_REBOOT;
        case 61: return Pb_METHOD_MEET_INTERFACE_RESINFO;
        case 62: return Pb_METHOD_MEET_INTERFACE_LOCATE;
        case 63: return Pb_METHOD_MEET_INTERFACE_REQUESTINVITE;
        case 64: return Pb_METHOD_MEET_INTERFACE_RESPONSEINVITE;
        case 65: return Pb_METHOD_MEET_INTERFACE_EXITCHAT;
        case 66: return Pb_METHOD_MEET_INTERFACE_REMOTESET;
        case 1001: return Pb_METHOD_MEET_INTERFACE_ADDINK;
        case 1002: return Pb_METHOD_MEET_INTERFACE_ADDRECT;
        case 1003: return Pb_METHOD_MEET_INTERFACE_ADDTEXT;
        case 1004: return Pb_METHOD_MEET_INTERFACE_ADDPICTURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Method>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Method> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Method>() {
            public Pb_Method findValueByNumber(int number) {
              return Pb_Method.forNumber(number);
            }
          };

    private final int value;

    private Pb_Method(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Method)
  }

  /**
   * <pre>
   *基础平台错误码
   * </pre>
   *
   * Protobuf enum {@code Pb_WalletSystem_ErrorCode}
   */
  public enum Pb_WalletSystem_ErrorCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *返回的错误值，此为正常，无错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NONE = 0;</code>
     */
    Pb_RETURN_ERROR_NONE(0),
    /**
     * <pre>
     *不存在
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTBEING = 1;</code>
     */
    Pb_RETURN_ERROR_NOTBEING(1),
    /**
     * <pre>
     *不在线
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTONLINE = 2;</code>
     */
    Pb_RETURN_ERROR_NOTONLINE(2),
    /**
     * <pre>
     *无法找到可用的服务器
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOSERVER = 3;</code>
     */
    Pb_RETURN_ERROR_NOSERVER(3),
    /**
     * <pre>
     *拒绝操作
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_DENIAL = 4;</code>
     */
    Pb_RETURN_ERROR_DENIAL(4),
    /**
     * <pre>
     *密码错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_PASSWORD = 5;</code>
     */
    Pb_RETURN_ERROR_PASSWORD(5),
    /**
     * <pre>
     *格式错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_FORMAT = 6;</code>
     */
    Pb_RETURN_ERROR_FORMAT(6),
    /**
     * <pre>
     *无权限操作
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOPOWER = 7;</code>
     */
    Pb_RETURN_ERROR_NOPOWER(7),
    /**
     * <pre>
     *已存在
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_ISBEING = 8;</code>
     */
    Pb_RETURN_ERROR_ISBEING(8),
    /**
     * <pre>
     *升级的版本号低于系统正在使用的版本号
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_UPDATEVER = 9;</code>
     */
    Pb_RETURN_ERROR_UPDATEVER(9),
    /**
     * <pre>
     *数据库没连接上
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_DBOFFLINE = 10;</code>
     */
    Pb_RETURN_ERROR_DBOFFLINE(10),
    /**
     * <pre>
     *未联接到区域服务
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTCONNTECT = 11;</code>
     */
    Pb_RETURN_ERROR_NOTCONNTECT(11),
    /**
     * <pre>
     *没有资源了
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NORES = 12;</code>
     */
    Pb_RETURN_ERROR_NORES(12),
    /**
     * <pre>
     *超时
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_TIMEOUT = 13;</code>
     */
    Pb_RETURN_ERROR_TIMEOUT(13),
    /**
     * <pre>
     *数据为0
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_ZERO = 14;</code>
     */
    Pb_RETURN_ERROR_ZERO(14),
    /**
     * <pre>
     *区域服务器操作出错
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_SERVERERROR = 15;</code>
     */
    Pb_RETURN_ERROR_SERVERERROR(15),
    /**
     * <pre>
     *没有足够的空间了
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOSPACE = 16;</code>
     */
    Pb_RETURN_ERROR_NOSPACE(16),
    /**
     * <pre>
     *数据操作错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_DBOPERERROR = 17;</code>
     */
    Pb_RETURN_ERROR_DBOPERERROR(17),
    /**
     * <pre>
     *没有标识码
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTIDENTITY = 18;</code>
     */
    Pb_RETURN_ERROR_NOTIDENTITY(18),
    /**
     * <pre>
     *超过最大在线设备数
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_MAXDEVICENUM = 19;</code>
     */
    Pb_RETURN_ERROR_MAXDEVICENUM(19),
    /**
     * <pre>
     *超过最大错误次数数,拒绝登陆
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_MAXERRORTIMES = 20;</code>
     */
    Pb_RETURN_ERROR_MAXERRORTIMES(20),
    /**
     * <pre>
     *区域服务器认证失败
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_PARSEERROR = 21;</code>
     */
    Pb_RETURN_ERROR_PARSEERROR(21),
    /**
     * <pre>
     *协议版本不匹配
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_PROTOCALNOMATCH = 22;</code>
     */
    Pb_RETURN_ERROR_PROTOCALNOMATCH(22),
    /**
     * <pre>
     *区域服务器已经过期了 expiration Time
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_EXPIRATIONTIME = 23;</code>
     */
    Pb_RETURN_ERROR_EXPIRATIONTIME(23),
    /**
     * <pre>
     *协议版本不匹配,拒绝请求
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_COMMVERNOMATCH = 24;</code>
     */
    Pb_RETURN_ERROR_COMMVERNOMATCH(24),
    /**
     * <pre>
     *超出范围
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_OVERRUN = 25;</code>
     */
    Pb_RETURN_ERROR_OVERRUN(25),
    /**
     * <pre>
     *无法打开
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTOPEN = 26;</code>
     */
    Pb_RETURN_ERROR_NOTOPEN(26),
    /**
     * <pre>
     *强行停止
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_FORCEDSTOP = 27;</code>
     */
    Pb_RETURN_ERROR_FORCEDSTOP(27),
    /**
     * <pre>
     *登陆错误
     * </pre>
     *
     * <code>Pb_RETUNR_ERROR_LOGONERROR = 28;</code>
     */
    Pb_RETUNR_ERROR_LOGONERROR(28),
    /**
     * <pre>
     *超过最大并发设备数,拒绝登陆
     * </pre>
     *
     * <code>Pb_RETUNR_ERROR_MAXONLINENUM = 29;</code>
     */
    Pb_RETUNR_ERROR_MAXONLINENUM(29),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *返回的错误值，此为正常，无错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NONE = 0;</code>
     */
    public static final int Pb_RETURN_ERROR_NONE_VALUE = 0;
    /**
     * <pre>
     *不存在
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTBEING = 1;</code>
     */
    public static final int Pb_RETURN_ERROR_NOTBEING_VALUE = 1;
    /**
     * <pre>
     *不在线
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTONLINE = 2;</code>
     */
    public static final int Pb_RETURN_ERROR_NOTONLINE_VALUE = 2;
    /**
     * <pre>
     *无法找到可用的服务器
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOSERVER = 3;</code>
     */
    public static final int Pb_RETURN_ERROR_NOSERVER_VALUE = 3;
    /**
     * <pre>
     *拒绝操作
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_DENIAL = 4;</code>
     */
    public static final int Pb_RETURN_ERROR_DENIAL_VALUE = 4;
    /**
     * <pre>
     *密码错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_PASSWORD = 5;</code>
     */
    public static final int Pb_RETURN_ERROR_PASSWORD_VALUE = 5;
    /**
     * <pre>
     *格式错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_FORMAT = 6;</code>
     */
    public static final int Pb_RETURN_ERROR_FORMAT_VALUE = 6;
    /**
     * <pre>
     *无权限操作
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOPOWER = 7;</code>
     */
    public static final int Pb_RETURN_ERROR_NOPOWER_VALUE = 7;
    /**
     * <pre>
     *已存在
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_ISBEING = 8;</code>
     */
    public static final int Pb_RETURN_ERROR_ISBEING_VALUE = 8;
    /**
     * <pre>
     *升级的版本号低于系统正在使用的版本号
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_UPDATEVER = 9;</code>
     */
    public static final int Pb_RETURN_ERROR_UPDATEVER_VALUE = 9;
    /**
     * <pre>
     *数据库没连接上
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_DBOFFLINE = 10;</code>
     */
    public static final int Pb_RETURN_ERROR_DBOFFLINE_VALUE = 10;
    /**
     * <pre>
     *未联接到区域服务
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTCONNTECT = 11;</code>
     */
    public static final int Pb_RETURN_ERROR_NOTCONNTECT_VALUE = 11;
    /**
     * <pre>
     *没有资源了
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NORES = 12;</code>
     */
    public static final int Pb_RETURN_ERROR_NORES_VALUE = 12;
    /**
     * <pre>
     *超时
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_TIMEOUT = 13;</code>
     */
    public static final int Pb_RETURN_ERROR_TIMEOUT_VALUE = 13;
    /**
     * <pre>
     *数据为0
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_ZERO = 14;</code>
     */
    public static final int Pb_RETURN_ERROR_ZERO_VALUE = 14;
    /**
     * <pre>
     *区域服务器操作出错
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_SERVERERROR = 15;</code>
     */
    public static final int Pb_RETURN_ERROR_SERVERERROR_VALUE = 15;
    /**
     * <pre>
     *没有足够的空间了
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOSPACE = 16;</code>
     */
    public static final int Pb_RETURN_ERROR_NOSPACE_VALUE = 16;
    /**
     * <pre>
     *数据操作错误
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_DBOPERERROR = 17;</code>
     */
    public static final int Pb_RETURN_ERROR_DBOPERERROR_VALUE = 17;
    /**
     * <pre>
     *没有标识码
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTIDENTITY = 18;</code>
     */
    public static final int Pb_RETURN_ERROR_NOTIDENTITY_VALUE = 18;
    /**
     * <pre>
     *超过最大在线设备数
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_MAXDEVICENUM = 19;</code>
     */
    public static final int Pb_RETURN_ERROR_MAXDEVICENUM_VALUE = 19;
    /**
     * <pre>
     *超过最大错误次数数,拒绝登陆
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_MAXERRORTIMES = 20;</code>
     */
    public static final int Pb_RETURN_ERROR_MAXERRORTIMES_VALUE = 20;
    /**
     * <pre>
     *区域服务器认证失败
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_PARSEERROR = 21;</code>
     */
    public static final int Pb_RETURN_ERROR_PARSEERROR_VALUE = 21;
    /**
     * <pre>
     *协议版本不匹配
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_PROTOCALNOMATCH = 22;</code>
     */
    public static final int Pb_RETURN_ERROR_PROTOCALNOMATCH_VALUE = 22;
    /**
     * <pre>
     *区域服务器已经过期了 expiration Time
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_EXPIRATIONTIME = 23;</code>
     */
    public static final int Pb_RETURN_ERROR_EXPIRATIONTIME_VALUE = 23;
    /**
     * <pre>
     *协议版本不匹配,拒绝请求
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_COMMVERNOMATCH = 24;</code>
     */
    public static final int Pb_RETURN_ERROR_COMMVERNOMATCH_VALUE = 24;
    /**
     * <pre>
     *超出范围
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_OVERRUN = 25;</code>
     */
    public static final int Pb_RETURN_ERROR_OVERRUN_VALUE = 25;
    /**
     * <pre>
     *无法打开
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_NOTOPEN = 26;</code>
     */
    public static final int Pb_RETURN_ERROR_NOTOPEN_VALUE = 26;
    /**
     * <pre>
     *强行停止
     * </pre>
     *
     * <code>Pb_RETURN_ERROR_FORCEDSTOP = 27;</code>
     */
    public static final int Pb_RETURN_ERROR_FORCEDSTOP_VALUE = 27;
    /**
     * <pre>
     *登陆错误
     * </pre>
     *
     * <code>Pb_RETUNR_ERROR_LOGONERROR = 28;</code>
     */
    public static final int Pb_RETUNR_ERROR_LOGONERROR_VALUE = 28;
    /**
     * <pre>
     *超过最大并发设备数,拒绝登陆
     * </pre>
     *
     * <code>Pb_RETUNR_ERROR_MAXONLINENUM = 29;</code>
     */
    public static final int Pb_RETUNR_ERROR_MAXONLINENUM_VALUE = 29;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_WalletSystem_ErrorCode valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_WalletSystem_ErrorCode forNumber(int value) {
      switch (value) {
        case 0: return Pb_RETURN_ERROR_NONE;
        case 1: return Pb_RETURN_ERROR_NOTBEING;
        case 2: return Pb_RETURN_ERROR_NOTONLINE;
        case 3: return Pb_RETURN_ERROR_NOSERVER;
        case 4: return Pb_RETURN_ERROR_DENIAL;
        case 5: return Pb_RETURN_ERROR_PASSWORD;
        case 6: return Pb_RETURN_ERROR_FORMAT;
        case 7: return Pb_RETURN_ERROR_NOPOWER;
        case 8: return Pb_RETURN_ERROR_ISBEING;
        case 9: return Pb_RETURN_ERROR_UPDATEVER;
        case 10: return Pb_RETURN_ERROR_DBOFFLINE;
        case 11: return Pb_RETURN_ERROR_NOTCONNTECT;
        case 12: return Pb_RETURN_ERROR_NORES;
        case 13: return Pb_RETURN_ERROR_TIMEOUT;
        case 14: return Pb_RETURN_ERROR_ZERO;
        case 15: return Pb_RETURN_ERROR_SERVERERROR;
        case 16: return Pb_RETURN_ERROR_NOSPACE;
        case 17: return Pb_RETURN_ERROR_DBOPERERROR;
        case 18: return Pb_RETURN_ERROR_NOTIDENTITY;
        case 19: return Pb_RETURN_ERROR_MAXDEVICENUM;
        case 20: return Pb_RETURN_ERROR_MAXERRORTIMES;
        case 21: return Pb_RETURN_ERROR_PARSEERROR;
        case 22: return Pb_RETURN_ERROR_PROTOCALNOMATCH;
        case 23: return Pb_RETURN_ERROR_EXPIRATIONTIME;
        case 24: return Pb_RETURN_ERROR_COMMVERNOMATCH;
        case 25: return Pb_RETURN_ERROR_OVERRUN;
        case 26: return Pb_RETURN_ERROR_NOTOPEN;
        case 27: return Pb_RETURN_ERROR_FORCEDSTOP;
        case 28: return Pb_RETUNR_ERROR_LOGONERROR;
        case 29: return Pb_RETUNR_ERROR_MAXONLINENUM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_WalletSystem_ErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_WalletSystem_ErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_WalletSystem_ErrorCode>() {
            public Pb_WalletSystem_ErrorCode findValueByNumber(int number) {
              return Pb_WalletSystem_ErrorCode.forNumber(number);
            }
          };

    private final int value;

    private Pb_WalletSystem_ErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_WalletSystem_ErrorCode)
  }

  /**
   * <pre>
   *字符串长度限制
   * </pre>
   *
   * Protobuf enum {@code Pb_String_LenLimit}
   */
  public enum Pb_String_LenLimit
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *不使用
     * </pre>
     *
     * <code>Pb_STRING_LIMIT_ZERO = 0;</code>
     */
    Pb_STRING_LIMIT_ZERO(0),
    /**
     * <pre>
     *设备最大的IP地址信息数
     * </pre>
     *
     * <code>Pb_MAX_DEVICEIPADDR_NUM = 2;</code>
     */
    Pb_MAX_DEVICEIPADDR_NUM(2),
    /**
     * <pre>
     *设备最大的资源数
     * </pre>
     *
     * <code>Pb_MAX_RES_NUM = 6;</code>
     */
    Pb_MAX_RES_NUM(6),
    /**
     * <pre>
     *签到密码长度
     * </pre>
     *
     * <code>Pb_SIGNIN_PSW_LEN = 16;</code>
     */
    Pb_SIGNIN_PSW_LEN(16),
    /**
     * <pre>
     *密码 (ascill/md5ascill)
     * </pre>
     *
     * <code>Pb_MEET_MD5_ASCILL_MAXLEN = 32;</code>
     */
    Pb_MEET_MD5_ASCILL_MAXLEN(32),
    /**
     * <pre>
     *默认字体名称长度
     * </pre>
     *
     * <code>Pb_FONTNAME_LENG = 48;</code>
     */
    Pb_FONTNAME_LENG(48),
    /**
     * <pre>
     *用户名长度
     * </pre>
     *
     * <code>Pb_MEET_NAME_MAXLE = 100;</code>
     */
    Pb_MEET_NAME_MAXLE(100),
    /**
     * <pre>
     *默认描述字符串长度
     * </pre>
     *
     * <code>Pb_DEFAULT_SHORT_DESCRIBE_LENG = 40;</code>
     */
    Pb_DEFAULT_SHORT_DESCRIBE_LENG(40),
    /**
     * <pre>
     *设备名称长席
     * </pre>
     *
     * <code>Pb_DEVICE_NAME_MAXLEN = 128;</code>
     */
    Pb_DEVICE_NAME_MAXLEN(128),
    /**
     * <pre>
     *IP地址长度
     * </pre>
     *
     * <code>Pb_DEVICE_IPADDR_MAXLEN = 64;</code>
     */
    Pb_DEVICE_IPADDR_MAXLEN(64),
    /**
     * <pre>
     *默认文件名长度
     * </pre>
     *
     * <code>Pb_DEFAULT_FILENAME_LENG = 150;</code>
     */
    Pb_DEFAULT_FILENAME_LENG(150),
    /**
     * <pre>
     *默认文件路径长度
     * </pre>
     *
     * <code>Pb_MEET_PATH_MAXLEN = 260;</code>
     */
    Pb_MEET_PATH_MAXLEN(260),
    /**
     * <pre>
     *聊天文本长度
     * </pre>
     *
     * <code>Pb_MEETIM_CHAR_MSG_MAXLEN = 300;</code>
     */
    Pb_MEETIM_CHAR_MSG_MAXLEN(300),
    /**
     * <pre>
     *时间轴式会议议程长度
     * </pre>
     *
     * <code>Pb_MEETAGENDA_DESCTEXT_LENG = 320;</code>
     */
    Pb_MEETAGENDA_DESCTEXT_LENG(320),
    /**
     * <pre>
     *网址长度
     * </pre>
     *
     * <code>Pb_MEET_URL_MAXLEN = 1024;</code>
     */
    Pb_MEET_URL_MAXLEN(1024),
    /**
     * <pre>
     *会议任务名称长度
     * </pre>
     *
     * <code>Pb_MEET_MAX_TASKNAMELEN = 80;</code>
     */
    Pb_MEET_MAX_TASKNAMELEN(80),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *最大的投票项数
     * </pre>
     *
     * <code>Pb_MEET_MAX_VOTENUM = 6;</code>
     */
    public static final Pb_String_LenLimit Pb_MEET_MAX_VOTENUM = Pb_MAX_RES_NUM;
    /**
     * <pre>
     *默认名称长度
     * </pre>
     *
     * <code>Pb_DEFAULT_NAME_MAXLEN = 48;</code>
     */
    public static final Pb_String_LenLimit Pb_DEFAULT_NAME_MAXLEN = Pb_FONTNAME_LENG;
    /**
     * <pre>
     *默认描述字符串长度
     * </pre>
     *
     * <code>Pb_DEFAULT_DESCRIBE_LENG = 100;</code>
     */
    public static final Pb_String_LenLimit Pb_DEFAULT_DESCRIBE_LENG = Pb_MEET_NAME_MAXLE;
    /**
     * <pre>
     *默认密码长度
     * </pre>
     *
     * <code>Pb_DEFAULT_PASSWORD_LENG = 40;</code>
     */
    public static final Pb_String_LenLimit Pb_DEFAULT_PASSWORD_LENG = Pb_DEFAULT_SHORT_DESCRIBE_LENG;
    /**
     * <pre>
     *默认文件路径长度
     * </pre>
     *
     * <code>Pb_MEET_PATHNAME_MAXLEN = 260;</code>
     */
    public static final Pb_String_LenLimit Pb_MEET_PATHNAME_MAXLEN = Pb_MEET_PATH_MAXLEN;
    /**
     * <pre>
     *参会人员属性字符串长度
     * </pre>
     *
     * <code>Pb_MEET_MEMBERSTRING_MAXLEN = 260;</code>
     */
    public static final Pb_String_LenLimit Pb_MEET_MEMBERSTRING_MAXLEN = Pb_MEET_PATH_MAXLEN;
    /**
     * <pre>
     *设备属性字符串长度
     * </pre>
     *
     * <code>Pb_MEET_DEVICESTRING_MAXLEN = 260;</code>
     */
    public static final Pb_String_LenLimit Pb_MEET_DEVICESTRING_MAXLEN = Pb_MEET_PATH_MAXLEN;
    /**
     * <pre>
     *记录文本最大长度
     * </pre>
     *
     * <code>Pb_MAX_SYSTEMLOG_TEXTLEN = 260;</code>
     */
    public static final Pb_String_LenLimit Pb_MAX_SYSTEMLOG_TEXTLEN = Pb_MEET_PATH_MAXLEN;
    /**
     * <pre>
     *评价的文本最大长度
     * </pre>
     *
     * <code>Pb_MAX_EVALUATETEXTLEN = 260;</code>
     */
    public static final Pb_String_LenLimit Pb_MAX_EVALUATETEXTLEN = Pb_MEET_PATH_MAXLEN;
    /**
     * <pre>
     *会议公告长度
     * </pre>
     *
     * <code>Pb_DEFAULT_BULLETCONTENT_LENG = 320;</code>
     */
    public static final Pb_String_LenLimit Pb_DEFAULT_BULLETCONTENT_LENG = Pb_MEETAGENDA_DESCTEXT_LENG;
    /**
     * <pre>
     *不使用
     * </pre>
     *
     * <code>Pb_STRING_LIMIT_ZERO = 0;</code>
     */
    public static final int Pb_STRING_LIMIT_ZERO_VALUE = 0;
    /**
     * <pre>
     *设备最大的IP地址信息数
     * </pre>
     *
     * <code>Pb_MAX_DEVICEIPADDR_NUM = 2;</code>
     */
    public static final int Pb_MAX_DEVICEIPADDR_NUM_VALUE = 2;
    /**
     * <pre>
     *设备最大的资源数
     * </pre>
     *
     * <code>Pb_MAX_RES_NUM = 6;</code>
     */
    public static final int Pb_MAX_RES_NUM_VALUE = 6;
    /**
     * <pre>
     *最大的投票项数
     * </pre>
     *
     * <code>Pb_MEET_MAX_VOTENUM = 6;</code>
     */
    public static final int Pb_MEET_MAX_VOTENUM_VALUE = 6;
    /**
     * <pre>
     *签到密码长度
     * </pre>
     *
     * <code>Pb_SIGNIN_PSW_LEN = 16;</code>
     */
    public static final int Pb_SIGNIN_PSW_LEN_VALUE = 16;
    /**
     * <pre>
     *密码 (ascill/md5ascill)
     * </pre>
     *
     * <code>Pb_MEET_MD5_ASCILL_MAXLEN = 32;</code>
     */
    public static final int Pb_MEET_MD5_ASCILL_MAXLEN_VALUE = 32;
    /**
     * <pre>
     *默认字体名称长度
     * </pre>
     *
     * <code>Pb_FONTNAME_LENG = 48;</code>
     */
    public static final int Pb_FONTNAME_LENG_VALUE = 48;
    /**
     * <pre>
     *默认名称长度
     * </pre>
     *
     * <code>Pb_DEFAULT_NAME_MAXLEN = 48;</code>
     */
    public static final int Pb_DEFAULT_NAME_MAXLEN_VALUE = 48;
    /**
     * <pre>
     *用户名长度
     * </pre>
     *
     * <code>Pb_MEET_NAME_MAXLE = 100;</code>
     */
    public static final int Pb_MEET_NAME_MAXLE_VALUE = 100;
    /**
     * <pre>
     *默认描述字符串长度
     * </pre>
     *
     * <code>Pb_DEFAULT_DESCRIBE_LENG = 100;</code>
     */
    public static final int Pb_DEFAULT_DESCRIBE_LENG_VALUE = 100;
    /**
     * <pre>
     *默认描述字符串长度
     * </pre>
     *
     * <code>Pb_DEFAULT_SHORT_DESCRIBE_LENG = 40;</code>
     */
    public static final int Pb_DEFAULT_SHORT_DESCRIBE_LENG_VALUE = 40;
    /**
     * <pre>
     *默认密码长度
     * </pre>
     *
     * <code>Pb_DEFAULT_PASSWORD_LENG = 40;</code>
     */
    public static final int Pb_DEFAULT_PASSWORD_LENG_VALUE = 40;
    /**
     * <pre>
     *设备名称长席
     * </pre>
     *
     * <code>Pb_DEVICE_NAME_MAXLEN = 128;</code>
     */
    public static final int Pb_DEVICE_NAME_MAXLEN_VALUE = 128;
    /**
     * <pre>
     *IP地址长度
     * </pre>
     *
     * <code>Pb_DEVICE_IPADDR_MAXLEN = 64;</code>
     */
    public static final int Pb_DEVICE_IPADDR_MAXLEN_VALUE = 64;
    /**
     * <pre>
     *默认文件名长度
     * </pre>
     *
     * <code>Pb_DEFAULT_FILENAME_LENG = 150;</code>
     */
    public static final int Pb_DEFAULT_FILENAME_LENG_VALUE = 150;
    /**
     * <pre>
     *默认文件路径长度
     * </pre>
     *
     * <code>Pb_MEET_PATH_MAXLEN = 260;</code>
     */
    public static final int Pb_MEET_PATH_MAXLEN_VALUE = 260;
    /**
     * <pre>
     *默认文件路径长度
     * </pre>
     *
     * <code>Pb_MEET_PATHNAME_MAXLEN = 260;</code>
     */
    public static final int Pb_MEET_PATHNAME_MAXLEN_VALUE = 260;
    /**
     * <pre>
     *参会人员属性字符串长度
     * </pre>
     *
     * <code>Pb_MEET_MEMBERSTRING_MAXLEN = 260;</code>
     */
    public static final int Pb_MEET_MEMBERSTRING_MAXLEN_VALUE = 260;
    /**
     * <pre>
     *设备属性字符串长度
     * </pre>
     *
     * <code>Pb_MEET_DEVICESTRING_MAXLEN = 260;</code>
     */
    public static final int Pb_MEET_DEVICESTRING_MAXLEN_VALUE = 260;
    /**
     * <pre>
     *记录文本最大长度
     * </pre>
     *
     * <code>Pb_MAX_SYSTEMLOG_TEXTLEN = 260;</code>
     */
    public static final int Pb_MAX_SYSTEMLOG_TEXTLEN_VALUE = 260;
    /**
     * <pre>
     *评价的文本最大长度
     * </pre>
     *
     * <code>Pb_MAX_EVALUATETEXTLEN = 260;</code>
     */
    public static final int Pb_MAX_EVALUATETEXTLEN_VALUE = 260;
    /**
     * <pre>
     *聊天文本长度
     * </pre>
     *
     * <code>Pb_MEETIM_CHAR_MSG_MAXLEN = 300;</code>
     */
    public static final int Pb_MEETIM_CHAR_MSG_MAXLEN_VALUE = 300;
    /**
     * <pre>
     *时间轴式会议议程长度
     * </pre>
     *
     * <code>Pb_MEETAGENDA_DESCTEXT_LENG = 320;</code>
     */
    public static final int Pb_MEETAGENDA_DESCTEXT_LENG_VALUE = 320;
    /**
     * <pre>
     *会议公告长度
     * </pre>
     *
     * <code>Pb_DEFAULT_BULLETCONTENT_LENG = 320;</code>
     */
    public static final int Pb_DEFAULT_BULLETCONTENT_LENG_VALUE = 320;
    /**
     * <pre>
     *网址长度
     * </pre>
     *
     * <code>Pb_MEET_URL_MAXLEN = 1024;</code>
     */
    public static final int Pb_MEET_URL_MAXLEN_VALUE = 1024;
    /**
     * <pre>
     *会议任务名称长度
     * </pre>
     *
     * <code>Pb_MEET_MAX_TASKNAMELEN = 80;</code>
     */
    public static final int Pb_MEET_MAX_TASKNAMELEN_VALUE = 80;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_String_LenLimit valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_String_LenLimit forNumber(int value) {
      switch (value) {
        case 0: return Pb_STRING_LIMIT_ZERO;
        case 2: return Pb_MAX_DEVICEIPADDR_NUM;
        case 6: return Pb_MAX_RES_NUM;
        case 16: return Pb_SIGNIN_PSW_LEN;
        case 32: return Pb_MEET_MD5_ASCILL_MAXLEN;
        case 48: return Pb_FONTNAME_LENG;
        case 100: return Pb_MEET_NAME_MAXLE;
        case 40: return Pb_DEFAULT_SHORT_DESCRIBE_LENG;
        case 128: return Pb_DEVICE_NAME_MAXLEN;
        case 64: return Pb_DEVICE_IPADDR_MAXLEN;
        case 150: return Pb_DEFAULT_FILENAME_LENG;
        case 260: return Pb_MEET_PATH_MAXLEN;
        case 300: return Pb_MEETIM_CHAR_MSG_MAXLEN;
        case 320: return Pb_MEETAGENDA_DESCTEXT_LENG;
        case 1024: return Pb_MEET_URL_MAXLEN;
        case 80: return Pb_MEET_MAX_TASKNAMELEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_String_LenLimit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_String_LenLimit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_String_LenLimit>() {
            public Pb_String_LenLimit findValueByNumber(int number) {
              return Pb_String_LenLimit.forNumber(number);
            }
          };

    private final int value;

    private Pb_String_LenLimit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_String_LenLimit)
  }

  /**
   * <pre>
   *程序类型
   * </pre>
   *
   * Protobuf enum {@code Pb_ProgramType}
   */
  public enum Pb_ProgramType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_PROGRAM_TYPE_ZERO = 0;</code>
     */
    Pb_MEET_PROGRAM_TYPE_ZERO(0),
    /**
     * <pre>
     *会议终端软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_MEETCLIENT = 1;</code>
     */
    Pb_MEET_PROGRAM_TYPE_MEETCLIENT(1),
    /**
     * <pre>
     *投影软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_PROJECTIVE = 2;</code>
     */
    Pb_MEET_PROGRAM_TYPE_PROJECTIVE(2),
    /**
     * <pre>
     *流采集软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_STREAMCAPTURE = 3;</code>
     */
    Pb_MEET_PROGRAM_TYPE_STREAMCAPTURE(3),
    /**
     * <pre>
     *茶水服务软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_SERVICE = 4;</code>
     */
    Pb_MEET_PROGRAM_TYPE_SERVICE(4),
    /**
     * <pre>
     *android APP
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_ANDROIDAPP = 5;</code>
     */
    Pb_MEET_PROGRAM_TYPE_ANDROIDAPP(5),
    /**
     * <pre>
     *TCP客户端调试
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_CLIENTDEBUG = 6;</code>
     */
    Pb_MEET_PROGRAM_TYPE_CLIENTDEBUG(6),
    /**
     * <pre>
     *会议发布软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_PUBLISHER = 7;</code>
     */
    Pb_MEET_PROGRAM_TYPE_PUBLISHER(7),
    /**
     * <pre>
     *用于PHP的数据中转
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_PHPINTER = 8;</code>
     */
    Pb_MEET_PROGRAM_TYPE_PHPINTER(8),
    /**
     * <pre>
     *会议广播软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_BROADCAST = 9;</code>
     */
    Pb_MEET_PROGRAM_TYPE_BROADCAST(9),
    /**
     * <pre>
     *测试设备
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_TESTONLINE = 10;</code>
     */
    Pb_MEET_PROGRAM_TYPE_TESTONLINE(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_PROGRAM_TYPE_ZERO = 0;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_ZERO_VALUE = 0;
    /**
     * <pre>
     *会议终端软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_MEETCLIENT = 1;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_MEETCLIENT_VALUE = 1;
    /**
     * <pre>
     *投影软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_PROJECTIVE = 2;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_PROJECTIVE_VALUE = 2;
    /**
     * <pre>
     *流采集软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_STREAMCAPTURE = 3;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_STREAMCAPTURE_VALUE = 3;
    /**
     * <pre>
     *茶水服务软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_SERVICE = 4;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_SERVICE_VALUE = 4;
    /**
     * <pre>
     *android APP
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_ANDROIDAPP = 5;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_ANDROIDAPP_VALUE = 5;
    /**
     * <pre>
     *TCP客户端调试
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_CLIENTDEBUG = 6;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_CLIENTDEBUG_VALUE = 6;
    /**
     * <pre>
     *会议发布软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_PUBLISHER = 7;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_PUBLISHER_VALUE = 7;
    /**
     * <pre>
     *用于PHP的数据中转
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_PHPINTER = 8;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_PHPINTER_VALUE = 8;
    /**
     * <pre>
     *会议广播软件
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_BROADCAST = 9;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_BROADCAST_VALUE = 9;
    /**
     * <pre>
     *测试设备
     * </pre>
     *
     * <code>Pb_MEET_PROGRAM_TYPE_TESTONLINE = 10;</code>
     */
    public static final int Pb_MEET_PROGRAM_TYPE_TESTONLINE_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_ProgramType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_ProgramType forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_PROGRAM_TYPE_ZERO;
        case 1: return Pb_MEET_PROGRAM_TYPE_MEETCLIENT;
        case 2: return Pb_MEET_PROGRAM_TYPE_PROJECTIVE;
        case 3: return Pb_MEET_PROGRAM_TYPE_STREAMCAPTURE;
        case 4: return Pb_MEET_PROGRAM_TYPE_SERVICE;
        case 5: return Pb_MEET_PROGRAM_TYPE_ANDROIDAPP;
        case 6: return Pb_MEET_PROGRAM_TYPE_CLIENTDEBUG;
        case 7: return Pb_MEET_PROGRAM_TYPE_PUBLISHER;
        case 8: return Pb_MEET_PROGRAM_TYPE_PHPINTER;
        case 9: return Pb_MEET_PROGRAM_TYPE_BROADCAST;
        case 10: return Pb_MEET_PROGRAM_TYPE_TESTONLINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_ProgramType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_ProgramType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_ProgramType>() {
            public Pb_ProgramType findValueByNumber(int number) {
              return Pb_ProgramType.forNumber(number);
            }
          };

    private final int value;

    private Pb_ProgramType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_ProgramType)
  }

  /**
   * <pre>
   *缓存数据
   * </pre>
   *
   * Protobuf enum {@code Pb_CacheFlag}
   */
  public enum Pb_CacheFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_CACEH_FLAG_ZERO = 0;</code>
     */
    Pb_MEET_CACEH_FLAG_ZERO(0),
    /**
     * <pre>
     *强制缓存
     * </pre>
     *
     * <code>Pb_MEET_CACEH_FLAG_FORCE = 1;</code>
     */
    Pb_MEET_CACEH_FLAG_FORCE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_CACEH_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_CACEH_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *强制缓存
     * </pre>
     *
     * <code>Pb_MEET_CACEH_FLAG_FORCE = 1;</code>
     */
    public static final int Pb_MEET_CACEH_FLAG_FORCE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_CacheFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_CacheFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_CACEH_FLAG_ZERO;
        case 1: return Pb_MEET_CACEH_FLAG_FORCE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_CacheFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_CacheFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_CacheFlag>() {
            public Pb_CacheFlag findValueByNumber(int number) {
              return Pb_CacheFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_CacheFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_CacheFlag)
  }

  /**
   * <pre>
   *font align flag 字体对齐方式
   * </pre>
   *
   * Protobuf enum {@code Pb_FontAlignFlag}
   */
  public enum Pb_FontAlignFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_FONTALIGNFLAG_ZERO = 0;</code>
     */
    Pb_MEET_FONTALIGNFLAG_ZERO(0),
    /**
     * <pre>
     *左对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_LEFT = 1;</code>
     */
    Pb_MEET_FONTALIGNFLAG_LEFT(1),
    /**
     * <pre>
     *右对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_RIGHT = 2;</code>
     */
    Pb_MEET_FONTALIGNFLAG_RIGHT(2),
    /**
     * <pre>
     *水平对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_HCENTER = 4;</code>
     */
    Pb_MEET_FONTALIGNFLAG_HCENTER(4),
    /**
     * <pre>
     *上对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_TOP = 8;</code>
     */
    Pb_MEET_FONTALIGNFLAG_TOP(8),
    /**
     * <pre>
     *下对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_BOTTOM = 16;</code>
     */
    Pb_MEET_FONTALIGNFLAG_BOTTOM(16),
    /**
     * <pre>
     *垂直对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_VCENTER = 32;</code>
     */
    Pb_MEET_FONTALIGNFLAG_VCENTER(32),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_FONTALIGNFLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_FONTALIGNFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *左对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_LEFT = 1;</code>
     */
    public static final int Pb_MEET_FONTALIGNFLAG_LEFT_VALUE = 1;
    /**
     * <pre>
     *右对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_RIGHT = 2;</code>
     */
    public static final int Pb_MEET_FONTALIGNFLAG_RIGHT_VALUE = 2;
    /**
     * <pre>
     *水平对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_HCENTER = 4;</code>
     */
    public static final int Pb_MEET_FONTALIGNFLAG_HCENTER_VALUE = 4;
    /**
     * <pre>
     *上对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_TOP = 8;</code>
     */
    public static final int Pb_MEET_FONTALIGNFLAG_TOP_VALUE = 8;
    /**
     * <pre>
     *下对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_BOTTOM = 16;</code>
     */
    public static final int Pb_MEET_FONTALIGNFLAG_BOTTOM_VALUE = 16;
    /**
     * <pre>
     *垂直对齐
     * </pre>
     *
     * <code>Pb_MEET_FONTALIGNFLAG_VCENTER = 32;</code>
     */
    public static final int Pb_MEET_FONTALIGNFLAG_VCENTER_VALUE = 32;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_FontAlignFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_FontAlignFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_FONTALIGNFLAG_ZERO;
        case 1: return Pb_MEET_FONTALIGNFLAG_LEFT;
        case 2: return Pb_MEET_FONTALIGNFLAG_RIGHT;
        case 4: return Pb_MEET_FONTALIGNFLAG_HCENTER;
        case 8: return Pb_MEET_FONTALIGNFLAG_TOP;
        case 16: return Pb_MEET_FONTALIGNFLAG_BOTTOM;
        case 32: return Pb_MEET_FONTALIGNFLAG_VCENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_FontAlignFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_FontAlignFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_FontAlignFlag>() {
            public Pb_FontAlignFlag findValueByNumber(int number) {
              return Pb_FontAlignFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_FontAlignFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_FontAlignFlag)
  }

  /**
   * <pre>
   *设备播放状态
   * </pre>
   *
   * Protobuf enum {@code Pb_DevicePlayStatus}
   */
  public enum Pb_DevicePlayStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *空闲
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_IDLE = 0;</code>
     */
    Pb_DEVICE_PLAYSTATUS_IDLE(0),
    /**
     * <pre>
     *播放媒体 
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_MEDIA = 1;</code>
     */
    Pb_DEVICE_PLAYSTATUS_MEDIA(1),
    /**
     * <pre>
     *播放流
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_STREAM = 2;</code>
     */
    Pb_DEVICE_PLAYSTATUS_STREAM(2),
    /**
     * <pre>
     *对讲
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_TALK = 3;</code>
     */
    Pb_DEVICE_PLAYSTATUS_TALK(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *空闲
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_IDLE = 0;</code>
     */
    public static final int Pb_DEVICE_PLAYSTATUS_IDLE_VALUE = 0;
    /**
     * <pre>
     *播放媒体 
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_MEDIA = 1;</code>
     */
    public static final int Pb_DEVICE_PLAYSTATUS_MEDIA_VALUE = 1;
    /**
     * <pre>
     *播放流
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_STREAM = 2;</code>
     */
    public static final int Pb_DEVICE_PLAYSTATUS_STREAM_VALUE = 2;
    /**
     * <pre>
     *对讲
     * </pre>
     *
     * <code>Pb_DEVICE_PLAYSTATUS_TALK = 3;</code>
     */
    public static final int Pb_DEVICE_PLAYSTATUS_TALK_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_DevicePlayStatus valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_DevicePlayStatus forNumber(int value) {
      switch (value) {
        case 0: return Pb_DEVICE_PLAYSTATUS_IDLE;
        case 1: return Pb_DEVICE_PLAYSTATUS_MEDIA;
        case 2: return Pb_DEVICE_PLAYSTATUS_STREAM;
        case 3: return Pb_DEVICE_PLAYSTATUS_TALK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_DevicePlayStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_DevicePlayStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_DevicePlayStatus>() {
            public Pb_DevicePlayStatus findValueByNumber(int number) {
              return Pb_DevicePlayStatus.forNumber(number);
            }
          };

    private final int value;

    private Pb_DevicePlayStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_DevicePlayStatus)
  }

  /**
   * <pre>
   *会议客户端软件的界面
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFaceStatus}
   */
  public enum Pb_MeetFaceStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *处于主界面
     * </pre>
     *
     * <code>Pb_MemState_MainFace = 0;</code>
     */
    Pb_MemState_MainFace(0),
    /**
     * <pre>
     *参会人员界面
     * </pre>
     *
     * <code>Pb_MemState_MemFace = 1;</code>
     */
    Pb_MemState_MemFace(1),
    /**
     * <pre>
     *后台管理界面
     * </pre>
     *
     * <code>Pb_MemState_AdminFace = 2;</code>
     */
    Pb_MemState_AdminFace(2),
    /**
     * <pre>
     *投票界面
     * </pre>
     *
     * <code>Pb_MemState_VoteFace = 3;</code>
     */
    Pb_MemState_VoteFace(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *处于主界面
     * </pre>
     *
     * <code>Pb_MemState_MainFace = 0;</code>
     */
    public static final int Pb_MemState_MainFace_VALUE = 0;
    /**
     * <pre>
     *参会人员界面
     * </pre>
     *
     * <code>Pb_MemState_MemFace = 1;</code>
     */
    public static final int Pb_MemState_MemFace_VALUE = 1;
    /**
     * <pre>
     *后台管理界面
     * </pre>
     *
     * <code>Pb_MemState_AdminFace = 2;</code>
     */
    public static final int Pb_MemState_AdminFace_VALUE = 2;
    /**
     * <pre>
     *投票界面
     * </pre>
     *
     * <code>Pb_MemState_VoteFace = 3;</code>
     */
    public static final int Pb_MemState_VoteFace_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFaceStatus valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFaceStatus forNumber(int value) {
      switch (value) {
        case 0: return Pb_MemState_MainFace;
        case 1: return Pb_MemState_MemFace;
        case 2: return Pb_MemState_AdminFace;
        case 3: return Pb_MemState_VoteFace;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFaceStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceStatus>() {
            public Pb_MeetFaceStatus findValueByNumber(int number) {
              return Pb_MeetFaceStatus.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFaceStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFaceStatus)
  }

  /**
   * <pre>
   *property id
   *会议设备属性ID
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetDevicePropertyID}
   */
  public enum Pb_MeetDevicePropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETDEVICE_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETDEVICE_PROPERTY_ZERO(0),
    /**
     * <pre>
     *设备名称 query(text)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_NAME = 1;</code>
     */
    Pb_MEETDEVICE_PROPERTY_NAME(1),
    /**
     * <pre>
     *ip地址 query(text) paramterval(ip地址索引)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_IPADDR = 2;</code>
     */
    Pb_MEETDEVICE_PROPERTY_IPADDR(2),
    /**
     * <pre>
     *网络端口 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_PORT = 3;</code>
     */
    Pb_MEETDEVICE_PROPERTY_PORT(3),
    /**
     * <pre>
     *网络状态 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_NETSTATUS = 4;</code>
     */
    Pb_MEETDEVICE_PROPERTY_NETSTATUS(4),
    /**
     * <pre>
     *播放状态(propertyval2(triggerid), propertyval3(val),propertyval4(val2)有效) query(fixed32) paramterval(res地址索引)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_PLAYSTATUS = 5;</code>
     */
    Pb_MEETDEVICE_PROPERTY_PLAYSTATUS(5),
    /**
     * <pre>
     *界面状态 query(fixed32) (propertyval2(meetingid), propertyval3(memberid)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_FACESTATUS = 6;</code>
     */
    Pb_MEETDEVICE_PROPERTY_FACESTATUS(6),
    /**
     * <pre>
     *当前参会人员ID query(fixed32) (propertyval2(meetingid), propertyval3(facestatus)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_MEMBERID = 7;</code>
     */
    Pb_MEETDEVICE_PROPERTY_MEMBERID(7),
    /**
     * <pre>
     *当前会议ID query(fixed32) (propertyval2(memberid), propertyval3(facestatus)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_MEETINGID = 8;</code>
     */
    Pb_MEETDEVICE_PROPERTY_MEETINGID(8),
    /**
     * <pre>
     *当前正在执行的触发器ID query(fixed32) paramterval(res地址索引)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_TRIGGERID = 9;</code>
     */
    Pb_MEETDEVICE_PROPERTY_TRIGGERID(9),
    /**
     * <pre>
     *设备的流通道名称 query paramterval=查询的流通道号(text)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_STREAMNAME = 10;</code>
     */
    Pb_MEETDEVICE_PROPERTY_STREAMNAME(10),
    /**
     * <pre>
     *获取资源操作的设备ID query paramterval(res地址索引)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_RESOPERTORID = 11;</code>
     */
    Pb_MEETMEMBER_PROPERTY_RESOPERTORID(11),
    /**
     * <pre>
     *某类设备是否可用 query deviceid(设备类别ID,eg:DEVICE_MEET_SERVICE) propertyval=1可用，=0不可用
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_TYPEAVAILABLE = 12;</code>
     */
    Pb_MEETMEMBER_PROPERTY_TYPEAVAILABLE(12),
    /**
     * <pre>
     *获取指定设备的版本 query propertyval返回版本号propertyval(hard):propertyval2(soft) 
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_VERSION = 13;</code>
     */
    Pb_MEETDEVICE_PROPERTY_VERSION(13),
    /**
     * <pre>
     *获取指定设备的属性 query (propertyval fixed32)  会议设备属性 参见owbash.h MEETDEVICE_FLAG 定义
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_DEVICEFLAG = 14;</code>
     */
    Pb_MEETDEVICE_PROPERTY_DEVICEFLAG(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETDEVICE_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *设备名称 query(text)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_NAME = 1;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_NAME_VALUE = 1;
    /**
     * <pre>
     *ip地址 query(text) paramterval(ip地址索引)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_IPADDR = 2;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_IPADDR_VALUE = 2;
    /**
     * <pre>
     *网络端口 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_PORT = 3;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_PORT_VALUE = 3;
    /**
     * <pre>
     *网络状态 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_NETSTATUS = 4;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_NETSTATUS_VALUE = 4;
    /**
     * <pre>
     *播放状态(propertyval2(triggerid), propertyval3(val),propertyval4(val2)有效) query(fixed32) paramterval(res地址索引)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_PLAYSTATUS = 5;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_PLAYSTATUS_VALUE = 5;
    /**
     * <pre>
     *界面状态 query(fixed32) (propertyval2(meetingid), propertyval3(memberid)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_FACESTATUS = 6;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_FACESTATUS_VALUE = 6;
    /**
     * <pre>
     *当前参会人员ID query(fixed32) (propertyval2(meetingid), propertyval3(facestatus)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_MEMBERID = 7;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_MEMBERID_VALUE = 7;
    /**
     * <pre>
     *当前会议ID query(fixed32) (propertyval2(memberid), propertyval3(facestatus)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_MEETINGID = 8;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_MEETINGID_VALUE = 8;
    /**
     * <pre>
     *当前正在执行的触发器ID query(fixed32) paramterval(res地址索引)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_TRIGGERID = 9;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_TRIGGERID_VALUE = 9;
    /**
     * <pre>
     *设备的流通道名称 query paramterval=查询的流通道号(text)
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_STREAMNAME = 10;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_STREAMNAME_VALUE = 10;
    /**
     * <pre>
     *获取资源操作的设备ID query paramterval(res地址索引)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_RESOPERTORID = 11;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_RESOPERTORID_VALUE = 11;
    /**
     * <pre>
     *某类设备是否可用 query deviceid(设备类别ID,eg:DEVICE_MEET_SERVICE) propertyval=1可用，=0不可用
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_TYPEAVAILABLE = 12;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_TYPEAVAILABLE_VALUE = 12;
    /**
     * <pre>
     *获取指定设备的版本 query propertyval返回版本号propertyval(hard):propertyval2(soft) 
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_VERSION = 13;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_VERSION_VALUE = 13;
    /**
     * <pre>
     *获取指定设备的属性 query (propertyval fixed32)  会议设备属性 参见owbash.h MEETDEVICE_FLAG 定义
     * </pre>
     *
     * <code>Pb_MEETDEVICE_PROPERTY_DEVICEFLAG = 14;</code>
     */
    public static final int Pb_MEETDEVICE_PROPERTY_DEVICEFLAG_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetDevicePropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetDevicePropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETDEVICE_PROPERTY_ZERO;
        case 1: return Pb_MEETDEVICE_PROPERTY_NAME;
        case 2: return Pb_MEETDEVICE_PROPERTY_IPADDR;
        case 3: return Pb_MEETDEVICE_PROPERTY_PORT;
        case 4: return Pb_MEETDEVICE_PROPERTY_NETSTATUS;
        case 5: return Pb_MEETDEVICE_PROPERTY_PLAYSTATUS;
        case 6: return Pb_MEETDEVICE_PROPERTY_FACESTATUS;
        case 7: return Pb_MEETDEVICE_PROPERTY_MEMBERID;
        case 8: return Pb_MEETDEVICE_PROPERTY_MEETINGID;
        case 9: return Pb_MEETDEVICE_PROPERTY_TRIGGERID;
        case 10: return Pb_MEETDEVICE_PROPERTY_STREAMNAME;
        case 11: return Pb_MEETMEMBER_PROPERTY_RESOPERTORID;
        case 12: return Pb_MEETMEMBER_PROPERTY_TYPEAVAILABLE;
        case 13: return Pb_MEETDEVICE_PROPERTY_VERSION;
        case 14: return Pb_MEETDEVICE_PROPERTY_DEVICEFLAG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetDevicePropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetDevicePropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetDevicePropertyID>() {
            public Pb_MeetDevicePropertyID findValueByNumber(int number) {
              return Pb_MeetDevicePropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetDevicePropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetDevicePropertyID)
  }

  /**
   * <pre>
   *设备修改标志位 modflag
   * </pre>
   *
   * Protobuf enum {@code Pb_DeviceModifyFlag}
   */
  public enum Pb_DeviceModifyFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_DEVICE_MODIFYFLAG_ZERO = 0;</code>
     */
    Pb_DEVICE_MODIFYFLAG_ZERO(0),
    /**
     * <pre>
     *表示修改名称
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_NAME = 1;</code>
     */
    Pb_DEVICE_MODIFYFLAG_NAME(1),
    /**
     * <pre>
     *表示修改ip地址
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_IPADDR = 2;</code>
     */
    Pb_DEVICE_MODIFYFLAG_IPADDR(2),
    /**
     * <pre>
     *表示修改端口
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_PORT = 4;</code>
     */
    Pb_DEVICE_MODIFYFLAG_PORT(4),
    /**
     * <pre>
     *表示修改升降代码
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_LIFTRES = 8;</code>
     */
    Pb_DEVICE_MODIFYFLAG_LIFTRES(8),
    /**
     * <pre>
     *表示修改会议设备属性
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_DEVICEFLAG = 22;</code>
     */
    Pb_DEVICE_MODIFYFLAG_DEVICEFLAG(22),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_DEVICE_MODIFYFLAG_ZERO = 0;</code>
     */
    public static final int Pb_DEVICE_MODIFYFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *表示修改名称
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_NAME = 1;</code>
     */
    public static final int Pb_DEVICE_MODIFYFLAG_NAME_VALUE = 1;
    /**
     * <pre>
     *表示修改ip地址
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_IPADDR = 2;</code>
     */
    public static final int Pb_DEVICE_MODIFYFLAG_IPADDR_VALUE = 2;
    /**
     * <pre>
     *表示修改端口
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_PORT = 4;</code>
     */
    public static final int Pb_DEVICE_MODIFYFLAG_PORT_VALUE = 4;
    /**
     * <pre>
     *表示修改升降代码
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_LIFTRES = 8;</code>
     */
    public static final int Pb_DEVICE_MODIFYFLAG_LIFTRES_VALUE = 8;
    /**
     * <pre>
     *表示修改会议设备属性
     * </pre>
     *
     * <code>Pb_DEVICE_MODIFYFLAG_DEVICEFLAG = 22;</code>
     */
    public static final int Pb_DEVICE_MODIFYFLAG_DEVICEFLAG_VALUE = 22;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_DeviceModifyFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_DeviceModifyFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_DEVICE_MODIFYFLAG_ZERO;
        case 1: return Pb_DEVICE_MODIFYFLAG_NAME;
        case 2: return Pb_DEVICE_MODIFYFLAG_IPADDR;
        case 4: return Pb_DEVICE_MODIFYFLAG_PORT;
        case 8: return Pb_DEVICE_MODIFYFLAG_LIFTRES;
        case 22: return Pb_DEVICE_MODIFYFLAG_DEVICEFLAG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceModifyFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_DeviceModifyFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceModifyFlag>() {
            public Pb_DeviceModifyFlag findValueByNumber(int number) {
              return Pb_DeviceModifyFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_DeviceModifyFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_DeviceModifyFlag)
  }

  /**
   * <pre>
   *会议设备的一些标志 modflag
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetDeviceFlag}
   */
  public enum Pb_MeetDeviceFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *不使用
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_ZERO = 0;</code>
     */
    Pb_MEETDEVICE_FLAG_ZERO(0),
    /**
     * <pre>
     *免签到进入会议
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_DIRECTENTER = 1;</code>
     */
    Pb_MEETDEVICE_FLAG_DIRECTENTER(1),
    /**
     * <pre>
     *使用外部软件打开文档
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_OPENOUTSIDE = 2;</code>
     */
    Pb_MEETDEVICE_FLAG_OPENOUTSIDE(2),
    /**
     * <pre>
     *使用来宾模式-进入时必须选择参会人签到
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_GUESTMODE = 4;</code>
     */
    Pb_MEETDEVICE_FLAG_GUESTMODE(4),
    /**
     * <pre>
     *显示欢迎界面-当设备有会议并且绑定人员时点击后直接签到进入会议，其它情况不显示欢迎界面
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_WELCOMEPAGE = 8;</code>
     */
    Pb_MEETDEVICE_FLAG_WELCOMEPAGE(8),
    /**
     * <pre>
     *资料保护,禁止截图，判断当前设备是不是设置该项，如果是需要在用户端禁止用户的截图操作等
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_DATAPROTECT = 16;</code>
     */
    Pb_MEETDEVICE_FLAG_DATAPROTECT(16),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *不使用
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEETDEVICE_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *免签到进入会议
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_DIRECTENTER = 1;</code>
     */
    public static final int Pb_MEETDEVICE_FLAG_DIRECTENTER_VALUE = 1;
    /**
     * <pre>
     *使用外部软件打开文档
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_OPENOUTSIDE = 2;</code>
     */
    public static final int Pb_MEETDEVICE_FLAG_OPENOUTSIDE_VALUE = 2;
    /**
     * <pre>
     *使用来宾模式-进入时必须选择参会人签到
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_GUESTMODE = 4;</code>
     */
    public static final int Pb_MEETDEVICE_FLAG_GUESTMODE_VALUE = 4;
    /**
     * <pre>
     *显示欢迎界面-当设备有会议并且绑定人员时点击后直接签到进入会议，其它情况不显示欢迎界面
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_WELCOMEPAGE = 8;</code>
     */
    public static final int Pb_MEETDEVICE_FLAG_WELCOMEPAGE_VALUE = 8;
    /**
     * <pre>
     *资料保护,禁止截图，判断当前设备是不是设置该项，如果是需要在用户端禁止用户的截图操作等
     * </pre>
     *
     * <code>Pb_MEETDEVICE_FLAG_DATAPROTECT = 16;</code>
     */
    public static final int Pb_MEETDEVICE_FLAG_DATAPROTECT_VALUE = 16;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetDeviceFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetDeviceFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETDEVICE_FLAG_ZERO;
        case 1: return Pb_MEETDEVICE_FLAG_DIRECTENTER;
        case 2: return Pb_MEETDEVICE_FLAG_OPENOUTSIDE;
        case 4: return Pb_MEETDEVICE_FLAG_GUESTMODE;
        case 8: return Pb_MEETDEVICE_FLAG_WELCOMEPAGE;
        case 16: return Pb_MEETDEVICE_FLAG_DATAPROTECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetDeviceFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetDeviceFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetDeviceFlag>() {
            public Pb_MeetDeviceFlag findValueByNumber(int number) {
              return Pb_MeetDeviceFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetDeviceFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetDeviceFlag)
  }

  /**
   * <pre>
   *会议上下文属性ID
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_ContextPropertyID}
   */
  public enum Pb_ContextPropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETCONTEXT_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_ZERO(0),
    /**
     * <pre>
     *当前会议的角色 set/query(fixed32) 参见 Pb_MeetFaceStatus
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ROLE = 1;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_ROLE(1),
    /**
     * <pre>
     *当前会议登陆的管理员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURADMINID = 2;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_CURADMINID(2),
    /**
     * <pre>
     *当前会议登陆的管理员用户名 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURADMINNAME = 3;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_CURADMINNAME(3),
    /**
     * <pre>
     *当前会议登陆的管理员密码 md5 query(text)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURADMINPASSWORD = 4;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_CURADMINPASSWORD(4),
    /**
     * <pre>
     *当前会议是否是双屏 set/query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_HASTABLECARD = 5;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_HASTABLECARD(5),
    /**
     * <pre>
     *当前会议的会议ID set/query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURMEETINGID = 6;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_CURMEETINGID(6),
    /**
     * <pre>
     *本机设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SELFID = 7;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_SELFID(7),
    /**
     * <pre>
     *当前会议的会场ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURROOMID = 8;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_CURROOMID(8),
    /**
     * <pre>
     *当前会议的绑定的参会人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SELFMEMBERID = 9;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_SELFMEMBERID(9),
    /**
     * <pre>
     *当前会议数据库设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MEETDBDEVICEID = 10;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_MEETDBDEVICEID(10),
    /**
     * <pre>
     *本机屏幕流通道号 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SCREENSTREAMINDEX = 11;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_SCREENSTREAMINDEX(11),
    /**
     * <pre>
     *媒体服务器是否可用 query propertyval=返回可用的个数(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_AVAILABLEMEDIASERER = 12;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_AVAILABLEMEDIASERER(12),
    /**
     * <pre>
     *流服务器是否可用 query=返回可用的个数(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_AVAILABLESTREAMSERVER = 13;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_AVAILABLESTREAMSERVER(13),
    /**
     * <pre>
     *返回当前系统微秒UTC时间 query(int64u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_UTCMICROSECONDS = 14;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_UTCMICROSECONDS(14),
    /**
     * <pre>
     *返回当前系统微秒时间 query(int64u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_LOCALCICROSECONDS = 15;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_LOCALCICROSECONDS(15),
    /**
     * <pre>
     *返回硬件版本号 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_HARDVERSION = 16;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_HARDVERSION(16),
    /**
     * <pre>
     *返回软件版本号 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SOFTVERSION = 17;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_SOFTVERSION(17),
    /**
     * <pre>
     *返回设备所属企业ID query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ENTERPRISEID = 18;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_ENTERPRISEID(18),
    /**
     * <pre>
     *返回设备所属企业名称 query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ENTERPRISENAME = 19;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_ENTERPRISENAME(19),
    /**
     * <pre>
     *返回设备销售标识 query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SESELLMARK = 20;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_SESELLMARK(20),
    /**
     * <pre>
     *区域服务器有效时间 query(int64u) UTC时间 单位：秒 为0xffffffffffffff表示永久有效
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_EXPIRATIONTIME = 21;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_EXPIRATIONTIME(21),
    /**
     * <pre>
     *区域服务器企业ID query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_AREAENTERPRISEID = 22;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_AREAENTERPRISEID(22),
    /**
     * <pre>
     *返回注册时的用户自定义值 query(int32u) --&gt;该值 暂时用作网页的在线数量限制
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_REGISTERUSERDEF32 = 23;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_REGISTERUSERDEF32(23),
    /**
     * <pre>
     *设备在线最大数量 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MAXONLINENUM = 24;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_MAXONLINENUM(24),
    /**
     * <pre>
     *流采集间隔最小值 单位毫秒 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MINCAPTURETIME = 25;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_MINCAPTURETIME(25),
    /**
     * <pre>
     *流采集的编码模式 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ENCODEMODE = 26;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_ENCODEMODE(26),
    /**
     * <pre>
     *流保存标志 set/query(int32u) 1表示保存, 0表示不保存
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_STREAMSAVE = 27;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_STREAMSAVE(27),
    /**
     * <pre>
     *指定的设备或者服务器是否已经探测成功 query(propertyval int32u) 1表示已经探测成功, 0表示未探测到
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MEDIACHECK = 28;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_MEDIACHECK(28),
    /**
     * <pre>
     *获取会议离线缓存的目录 query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MEETCACHEDIR = 29;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_MEETCACHEDIR(29),
    /**
     * <pre>
     *获取登陆模式,调用登陆时接口会保存 set/query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_LOGONMODE = 30;</code>
     */
    Pb_MEETCONTEXT_PROPERTY_LOGONMODE(30),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETCONTEXT_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *当前会议的角色 set/query(fixed32) 参见 Pb_MeetFaceStatus
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ROLE = 1;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_ROLE_VALUE = 1;
    /**
     * <pre>
     *当前会议登陆的管理员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURADMINID = 2;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_CURADMINID_VALUE = 2;
    /**
     * <pre>
     *当前会议登陆的管理员用户名 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURADMINNAME = 3;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_CURADMINNAME_VALUE = 3;
    /**
     * <pre>
     *当前会议登陆的管理员密码 md5 query(text)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURADMINPASSWORD = 4;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_CURADMINPASSWORD_VALUE = 4;
    /**
     * <pre>
     *当前会议是否是双屏 set/query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_HASTABLECARD = 5;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_HASTABLECARD_VALUE = 5;
    /**
     * <pre>
     *当前会议的会议ID set/query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURMEETINGID = 6;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_CURMEETINGID_VALUE = 6;
    /**
     * <pre>
     *本机设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SELFID = 7;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_SELFID_VALUE = 7;
    /**
     * <pre>
     *当前会议的会场ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_CURROOMID = 8;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_CURROOMID_VALUE = 8;
    /**
     * <pre>
     *当前会议的绑定的参会人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SELFMEMBERID = 9;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_SELFMEMBERID_VALUE = 9;
    /**
     * <pre>
     *当前会议数据库设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MEETDBDEVICEID = 10;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_MEETDBDEVICEID_VALUE = 10;
    /**
     * <pre>
     *本机屏幕流通道号 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SCREENSTREAMINDEX = 11;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_SCREENSTREAMINDEX_VALUE = 11;
    /**
     * <pre>
     *媒体服务器是否可用 query propertyval=返回可用的个数(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_AVAILABLEMEDIASERER = 12;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_AVAILABLEMEDIASERER_VALUE = 12;
    /**
     * <pre>
     *流服务器是否可用 query=返回可用的个数(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_AVAILABLESTREAMSERVER = 13;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_AVAILABLESTREAMSERVER_VALUE = 13;
    /**
     * <pre>
     *返回当前系统微秒UTC时间 query(int64u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_UTCMICROSECONDS = 14;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_UTCMICROSECONDS_VALUE = 14;
    /**
     * <pre>
     *返回当前系统微秒时间 query(int64u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_LOCALCICROSECONDS = 15;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_LOCALCICROSECONDS_VALUE = 15;
    /**
     * <pre>
     *返回硬件版本号 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_HARDVERSION = 16;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_HARDVERSION_VALUE = 16;
    /**
     * <pre>
     *返回软件版本号 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SOFTVERSION = 17;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_SOFTVERSION_VALUE = 17;
    /**
     * <pre>
     *返回设备所属企业ID query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ENTERPRISEID = 18;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_ENTERPRISEID_VALUE = 18;
    /**
     * <pre>
     *返回设备所属企业名称 query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ENTERPRISENAME = 19;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_ENTERPRISENAME_VALUE = 19;
    /**
     * <pre>
     *返回设备销售标识 query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_SESELLMARK = 20;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_SESELLMARK_VALUE = 20;
    /**
     * <pre>
     *区域服务器有效时间 query(int64u) UTC时间 单位：秒 为0xffffffffffffff表示永久有效
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_EXPIRATIONTIME = 21;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_EXPIRATIONTIME_VALUE = 21;
    /**
     * <pre>
     *区域服务器企业ID query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_AREAENTERPRISEID = 22;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_AREAENTERPRISEID_VALUE = 22;
    /**
     * <pre>
     *返回注册时的用户自定义值 query(int32u) --&gt;该值 暂时用作网页的在线数量限制
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_REGISTERUSERDEF32 = 23;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_REGISTERUSERDEF32_VALUE = 23;
    /**
     * <pre>
     *设备在线最大数量 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MAXONLINENUM = 24;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_MAXONLINENUM_VALUE = 24;
    /**
     * <pre>
     *流采集间隔最小值 单位毫秒 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MINCAPTURETIME = 25;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_MINCAPTURETIME_VALUE = 25;
    /**
     * <pre>
     *流采集的编码模式 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_ENCODEMODE = 26;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_ENCODEMODE_VALUE = 26;
    /**
     * <pre>
     *流保存标志 set/query(int32u) 1表示保存, 0表示不保存
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_STREAMSAVE = 27;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_STREAMSAVE_VALUE = 27;
    /**
     * <pre>
     *指定的设备或者服务器是否已经探测成功 query(propertyval int32u) 1表示已经探测成功, 0表示未探测到
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MEDIACHECK = 28;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_MEDIACHECK_VALUE = 28;
    /**
     * <pre>
     *获取会议离线缓存的目录 query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_MEETCACHEDIR = 29;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_MEETCACHEDIR_VALUE = 29;
    /**
     * <pre>
     *获取登陆模式,调用登陆时接口会保存 set/query(string)
     * </pre>
     *
     * <code>Pb_MEETCONTEXT_PROPERTY_LOGONMODE = 30;</code>
     */
    public static final int Pb_MEETCONTEXT_PROPERTY_LOGONMODE_VALUE = 30;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_ContextPropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_ContextPropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETCONTEXT_PROPERTY_ZERO;
        case 1: return Pb_MEETCONTEXT_PROPERTY_ROLE;
        case 2: return Pb_MEETCONTEXT_PROPERTY_CURADMINID;
        case 3: return Pb_MEETCONTEXT_PROPERTY_CURADMINNAME;
        case 4: return Pb_MEETCONTEXT_PROPERTY_CURADMINPASSWORD;
        case 5: return Pb_MEETCONTEXT_PROPERTY_HASTABLECARD;
        case 6: return Pb_MEETCONTEXT_PROPERTY_CURMEETINGID;
        case 7: return Pb_MEETCONTEXT_PROPERTY_SELFID;
        case 8: return Pb_MEETCONTEXT_PROPERTY_CURROOMID;
        case 9: return Pb_MEETCONTEXT_PROPERTY_SELFMEMBERID;
        case 10: return Pb_MEETCONTEXT_PROPERTY_MEETDBDEVICEID;
        case 11: return Pb_MEETCONTEXT_PROPERTY_SCREENSTREAMINDEX;
        case 12: return Pb_MEETCONTEXT_PROPERTY_AVAILABLEMEDIASERER;
        case 13: return Pb_MEETCONTEXT_PROPERTY_AVAILABLESTREAMSERVER;
        case 14: return Pb_MEETCONTEXT_PROPERTY_UTCMICROSECONDS;
        case 15: return Pb_MEETCONTEXT_PROPERTY_LOCALCICROSECONDS;
        case 16: return Pb_MEETCONTEXT_PROPERTY_HARDVERSION;
        case 17: return Pb_MEETCONTEXT_PROPERTY_SOFTVERSION;
        case 18: return Pb_MEETCONTEXT_PROPERTY_ENTERPRISEID;
        case 19: return Pb_MEETCONTEXT_PROPERTY_ENTERPRISENAME;
        case 20: return Pb_MEETCONTEXT_PROPERTY_SESELLMARK;
        case 21: return Pb_MEETCONTEXT_PROPERTY_EXPIRATIONTIME;
        case 22: return Pb_MEETCONTEXT_PROPERTY_AREAENTERPRISEID;
        case 23: return Pb_MEETCONTEXT_PROPERTY_REGISTERUSERDEF32;
        case 24: return Pb_MEETCONTEXT_PROPERTY_MAXONLINENUM;
        case 25: return Pb_MEETCONTEXT_PROPERTY_MINCAPTURETIME;
        case 26: return Pb_MEETCONTEXT_PROPERTY_ENCODEMODE;
        case 27: return Pb_MEETCONTEXT_PROPERTY_STREAMSAVE;
        case 28: return Pb_MEETCONTEXT_PROPERTY_MEDIACHECK;
        case 29: return Pb_MEETCONTEXT_PROPERTY_MEETCACHEDIR;
        case 30: return Pb_MEETCONTEXT_PROPERTY_LOGONMODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_ContextPropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_ContextPropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_ContextPropertyID>() {
            public Pb_ContextPropertyID findValueByNumber(int number) {
              return Pb_ContextPropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_ContextPropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_ContextPropertyID)
  }

  /**
   * <pre>
   *会议议程
   *agendatype
   * </pre>
   *
   * Protobuf enum {@code Pb_AgendaType}
   */
  public enum Pb_AgendaType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *文本 val=文本长度
     * </pre>
     *
     * <code>Pb_MEET_AGENDA_TYPE_TEXT = 0;</code>
     */
    Pb_MEET_AGENDA_TYPE_TEXT(0),
    /**
     * <pre>
     *文件 val=媒体ID
     * </pre>
     *
     * <code>Pb_MEET_AGENDA_TYPE_FILE = 1;</code>
     */
    Pb_MEET_AGENDA_TYPE_FILE(1),
    /**
     * <pre>
     *时间轴式 val=Item_AgendaTimeInfo个数
     * </pre>
     *
     * <code>Pb_MEET_AGENDA_TYPE_TIME = 2;</code>
     */
    Pb_MEET_AGENDA_TYPE_TIME(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *文本 val=文本长度
     * </pre>
     *
     * <code>Pb_MEET_AGENDA_TYPE_TEXT = 0;</code>
     */
    public static final int Pb_MEET_AGENDA_TYPE_TEXT_VALUE = 0;
    /**
     * <pre>
     *文件 val=媒体ID
     * </pre>
     *
     * <code>Pb_MEET_AGENDA_TYPE_FILE = 1;</code>
     */
    public static final int Pb_MEET_AGENDA_TYPE_FILE_VALUE = 1;
    /**
     * <pre>
     *时间轴式 val=Item_AgendaTimeInfo个数
     * </pre>
     *
     * <code>Pb_MEET_AGENDA_TYPE_TIME = 2;</code>
     */
    public static final int Pb_MEET_AGENDA_TYPE_TIME_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_AgendaType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_AgendaType forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_AGENDA_TYPE_TEXT;
        case 1: return Pb_MEET_AGENDA_TYPE_FILE;
        case 2: return Pb_MEET_AGENDA_TYPE_TIME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_AgendaType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_AgendaType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_AgendaType>() {
            public Pb_AgendaType findValueByNumber(int number) {
              return Pb_AgendaType.forNumber(number);
            }
          };

    private final int value;

    private Pb_AgendaType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_AgendaType)
  }

  /**
   * <pre>
   *时间轴式会议议程
   * </pre>
   *
   * Protobuf enum {@code Pb_AgendaStatus}
   */
  public enum Pb_AgendaStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *未发起
     * </pre>
     *
     * <code>Pb_MEETAGENDA_STATUS_IDLE = 0;</code>
     */
    Pb_MEETAGENDA_STATUS_IDLE(0),
    /**
     * <pre>
     *进行中
     * </pre>
     *
     * <code>Pb_MEETAGENDA_STATUS_RUNNING = 1;</code>
     */
    Pb_MEETAGENDA_STATUS_RUNNING(1),
    /**
     * <pre>
     *已结束
     * </pre>
     *
     * <code>Pb_MEETAGENDA_STATUS_END = 2;</code>
     */
    Pb_MEETAGENDA_STATUS_END(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *未发起
     * </pre>
     *
     * <code>Pb_MEETAGENDA_STATUS_IDLE = 0;</code>
     */
    public static final int Pb_MEETAGENDA_STATUS_IDLE_VALUE = 0;
    /**
     * <pre>
     *进行中
     * </pre>
     *
     * <code>Pb_MEETAGENDA_STATUS_RUNNING = 1;</code>
     */
    public static final int Pb_MEETAGENDA_STATUS_RUNNING_VALUE = 1;
    /**
     * <pre>
     *已结束
     * </pre>
     *
     * <code>Pb_MEETAGENDA_STATUS_END = 2;</code>
     */
    public static final int Pb_MEETAGENDA_STATUS_END_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_AgendaStatus valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_AgendaStatus forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETAGENDA_STATUS_IDLE;
        case 1: return Pb_MEETAGENDA_STATUS_RUNNING;
        case 2: return Pb_MEETAGENDA_STATUS_END;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_AgendaStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_AgendaStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_AgendaStatus>() {
            public Pb_AgendaStatus findValueByNumber(int number) {
              return Pb_AgendaStatus.forNumber(number);
            }
          };

    private final int value;

    private Pb_AgendaStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_AgendaStatus)
  }

  /**
   * <pre>
   *管理员登陆状态
   * </pre>
   *
   * Protobuf enum {@code Pb_AdminLogonStatus}
   */
  public enum Pb_AdminLogonStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *登陆成功
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_NONE = 0;</code>
     */
    Pb_ADMINLOGON_ERR_NONE(0),
    /**
     * <pre>
     *密码错误
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_PSW = 1;</code>
     */
    Pb_ADMINLOGON_ERR_PSW(1),
    /**
     * <pre>
     *服务器异常
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_EXCPT_SV = 2;</code>
     */
    Pb_ADMINLOGON_ERR_EXCPT_SV(2),
    /**
     * <pre>
     *数据库异常
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_EXCPT_DB = 3;</code>
     */
    Pb_ADMINLOGON_ERR_EXCPT_DB(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *登陆成功
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_NONE = 0;</code>
     */
    public static final int Pb_ADMINLOGON_ERR_NONE_VALUE = 0;
    /**
     * <pre>
     *密码错误
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_PSW = 1;</code>
     */
    public static final int Pb_ADMINLOGON_ERR_PSW_VALUE = 1;
    /**
     * <pre>
     *服务器异常
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_EXCPT_SV = 2;</code>
     */
    public static final int Pb_ADMINLOGON_ERR_EXCPT_SV_VALUE = 2;
    /**
     * <pre>
     *数据库异常
     * </pre>
     *
     * <code>Pb_ADMINLOGON_ERR_EXCPT_DB = 3;</code>
     */
    public static final int Pb_ADMINLOGON_ERR_EXCPT_DB_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_AdminLogonStatus valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_AdminLogonStatus forNumber(int value) {
      switch (value) {
        case 0: return Pb_ADMINLOGON_ERR_NONE;
        case 1: return Pb_ADMINLOGON_ERR_PSW;
        case 2: return Pb_ADMINLOGON_ERR_EXCPT_SV;
        case 3: return Pb_ADMINLOGON_ERR_EXCPT_DB;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_AdminLogonStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_AdminLogonStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_AdminLogonStatus>() {
            public Pb_AdminLogonStatus findValueByNumber(int number) {
              return Pb_AdminLogonStatus.forNumber(number);
            }
          };

    private final int value;

    private Pb_AdminLogonStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_AdminLogonStatus)
  }

  /**
   * <pre>
   *终端控制
   *oper
   * </pre>
   *
   * Protobuf enum {@code Pb_DeviceControlFlag}
   */
  public enum Pb_DeviceControlFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_DEVICECONTORL_ZERO = 0;</code>
     */
    Pb_DEVICECONTORL_ZERO(0),
    /**
     * <pre>
     *关机
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_SHUTDOWN = 1;</code>
     */
    Pb_DEVICECONTORL_SHUTDOWN(1),
    /**
     * <pre>
     *重启
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_REBOOT = 2;</code>
     */
    Pb_DEVICECONTORL_REBOOT(2),
    /**
     * <pre>
     *重启软件
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_PROGRAMRESTART = 3;</code>
     */
    Pb_DEVICECONTORL_PROGRAMRESTART(3),
    /**
     * <pre>
     *升 operval1有效 Pb_LiftFlag
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_LIFTUP = 4;</code>
     */
    Pb_DEVICECONTORL_LIFTUP(4),
    /**
     * <pre>
     *降 operval1有效 Pb_LiftFlag
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_LIFTDOWN = 5;</code>
     */
    Pb_DEVICECONTORL_LIFTDOWN(5),
    /**
     * <pre>
     *停止升（降）operval1有效 Pb_LiftFlag
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_LIFTSTOP = 6;</code>
     */
    Pb_DEVICECONTORL_LIFTSTOP(6),
    /**
     * <pre>
     *更换LOGO operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYLOGO = 7;</code>
     */
    Pb_DEVICECONTORL_MODIFYLOGO(7),
    /**
     * <pre>
     *更换主界面 operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYMAINBG = 8;</code>
     */
    Pb_DEVICECONTORL_MODIFYMAINBG(8),
    /**
     * <pre>
     *更换投影界面 operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYPROJECTBG = 9;</code>
     */
    Pb_DEVICECONTORL_MODIFYPROJECTBG(9),
    /**
     * <pre>
     *更换子界面 operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYSUBBG = 10;</code>
     */
    Pb_DEVICECONTORL_MODIFYSUBBG(10),
    /**
     * <pre>
     *更换字体颜色 operval1有效 指颜色标号 参见fontcolor index
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYFONTCOLOR = 11;</code>
     */
    Pb_DEVICECONTORL_MODIFYFONTCOLOR(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_DEVICECONTORL_ZERO = 0;</code>
     */
    public static final int Pb_DEVICECONTORL_ZERO_VALUE = 0;
    /**
     * <pre>
     *关机
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_SHUTDOWN = 1;</code>
     */
    public static final int Pb_DEVICECONTORL_SHUTDOWN_VALUE = 1;
    /**
     * <pre>
     *重启
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_REBOOT = 2;</code>
     */
    public static final int Pb_DEVICECONTORL_REBOOT_VALUE = 2;
    /**
     * <pre>
     *重启软件
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_PROGRAMRESTART = 3;</code>
     */
    public static final int Pb_DEVICECONTORL_PROGRAMRESTART_VALUE = 3;
    /**
     * <pre>
     *升 operval1有效 Pb_LiftFlag
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_LIFTUP = 4;</code>
     */
    public static final int Pb_DEVICECONTORL_LIFTUP_VALUE = 4;
    /**
     * <pre>
     *降 operval1有效 Pb_LiftFlag
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_LIFTDOWN = 5;</code>
     */
    public static final int Pb_DEVICECONTORL_LIFTDOWN_VALUE = 5;
    /**
     * <pre>
     *停止升（降）operval1有效 Pb_LiftFlag
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_LIFTSTOP = 6;</code>
     */
    public static final int Pb_DEVICECONTORL_LIFTSTOP_VALUE = 6;
    /**
     * <pre>
     *更换LOGO operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYLOGO = 7;</code>
     */
    public static final int Pb_DEVICECONTORL_MODIFYLOGO_VALUE = 7;
    /**
     * <pre>
     *更换主界面 operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYMAINBG = 8;</code>
     */
    public static final int Pb_DEVICECONTORL_MODIFYMAINBG_VALUE = 8;
    /**
     * <pre>
     *更换投影界面 operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYPROJECTBG = 9;</code>
     */
    public static final int Pb_DEVICECONTORL_MODIFYPROJECTBG_VALUE = 9;
    /**
     * <pre>
     *更换子界面 operval1有效 指媒体ID
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYSUBBG = 10;</code>
     */
    public static final int Pb_DEVICECONTORL_MODIFYSUBBG_VALUE = 10;
    /**
     * <pre>
     *更换字体颜色 operval1有效 指颜色标号 参见fontcolor index
     * </pre>
     *
     * <code>Pb_DEVICECONTORL_MODIFYFONTCOLOR = 11;</code>
     */
    public static final int Pb_DEVICECONTORL_MODIFYFONTCOLOR_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_DeviceControlFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_DeviceControlFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_DEVICECONTORL_ZERO;
        case 1: return Pb_DEVICECONTORL_SHUTDOWN;
        case 2: return Pb_DEVICECONTORL_REBOOT;
        case 3: return Pb_DEVICECONTORL_PROGRAMRESTART;
        case 4: return Pb_DEVICECONTORL_LIFTUP;
        case 5: return Pb_DEVICECONTORL_LIFTDOWN;
        case 6: return Pb_DEVICECONTORL_LIFTSTOP;
        case 7: return Pb_DEVICECONTORL_MODIFYLOGO;
        case 8: return Pb_DEVICECONTORL_MODIFYMAINBG;
        case 9: return Pb_DEVICECONTORL_MODIFYPROJECTBG;
        case 10: return Pb_DEVICECONTORL_MODIFYSUBBG;
        case 11: return Pb_DEVICECONTORL_MODIFYFONTCOLOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceControlFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_DeviceControlFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceControlFlag>() {
            public Pb_DeviceControlFlag findValueByNumber(int number) {
              return Pb_DeviceControlFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_DeviceControlFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_DeviceControlFlag)
  }

  /**
   * <pre>
   *operval1 升降控制类别标志
   * </pre>
   *
   * Protobuf enum {@code Pb_LiftFlag}
   */
  public enum Pb_LiftFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_LIFT_FLAG_ZERO = 0;</code>
     */
    Pb_LIFT_FLAG_ZERO(0),
    /**
     * <pre>
     *选择升降机类别
     * </pre>
     *
     * <code>Pb_LIFT_FLAG_MACHICE = 1;</code>
     */
    Pb_LIFT_FLAG_MACHICE(1),
    /**
     * <pre>
     *选择升降话筒类别
     * </pre>
     *
     * <code>Pb_LIFT_FLAG_MIC = 2;</code>
     */
    Pb_LIFT_FLAG_MIC(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_LIFT_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_LIFT_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *选择升降机类别
     * </pre>
     *
     * <code>Pb_LIFT_FLAG_MACHICE = 1;</code>
     */
    public static final int Pb_LIFT_FLAG_MACHICE_VALUE = 1;
    /**
     * <pre>
     *选择升降话筒类别
     * </pre>
     *
     * <code>Pb_LIFT_FLAG_MIC = 2;</code>
     */
    public static final int Pb_LIFT_FLAG_MIC_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_LiftFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_LiftFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_LIFT_FLAG_ZERO;
        case 1: return Pb_LIFT_FLAG_MACHICE;
        case 2: return Pb_LIFT_FLAG_MIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_LiftFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_LiftFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_LiftFlag>() {
            public Pb_LiftFlag findValueByNumber(int number) {
              return Pb_LiftFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_LiftFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_LiftFlag)
  }

  /**
   * <pre>
   *下载状态
   *state flag
   * </pre>
   *
   * Protobuf enum {@code Pb_Download_State}
   */
  public enum Pb_Download_State
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *空闲
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_IDLE = 0;</code>
     */
    Pb_STATE_MEDIA_DOWNLOAD_IDLE(0),
    /**
     * <pre>
     *下载中
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_WORKING = 1;</code>
     */
    Pb_STATE_MEDIA_DOWNLOAD_WORKING(1),
    /**
     * <pre>
     *下载结束
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_FINISH = 2;</code>
     */
    Pb_STATE_MEDIA_DOWNLOAD_FINISH(2),
    /**
     * <pre>
     *下载错误
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_ERROR = 3;</code>
     */
    Pb_STATE_MEDIA_DOWNLOAD_ERROR(3),
    /**
     * <pre>
     *下载退出 ---不管成功与否,下载结束最后一次的状态都是这个
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_EXIT = 4;</code>
     */
    Pb_STATE_MEDIA_DOWNLOAD_EXIT(4),
    /**
     * <pre>
     *下载释放资料
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_DESTROY = 5;</code>
     */
    Pb_STATE_MEDIA_DOWNLOAD_DESTROY(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *空闲
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_IDLE = 0;</code>
     */
    public static final int Pb_STATE_MEDIA_DOWNLOAD_IDLE_VALUE = 0;
    /**
     * <pre>
     *下载中
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_WORKING = 1;</code>
     */
    public static final int Pb_STATE_MEDIA_DOWNLOAD_WORKING_VALUE = 1;
    /**
     * <pre>
     *下载结束
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_FINISH = 2;</code>
     */
    public static final int Pb_STATE_MEDIA_DOWNLOAD_FINISH_VALUE = 2;
    /**
     * <pre>
     *下载错误
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_ERROR = 3;</code>
     */
    public static final int Pb_STATE_MEDIA_DOWNLOAD_ERROR_VALUE = 3;
    /**
     * <pre>
     *下载退出 ---不管成功与否,下载结束最后一次的状态都是这个
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_EXIT = 4;</code>
     */
    public static final int Pb_STATE_MEDIA_DOWNLOAD_EXIT_VALUE = 4;
    /**
     * <pre>
     *下载释放资料
     * </pre>
     *
     * <code>Pb_STATE_MEDIA_DOWNLOAD_DESTROY = 5;</code>
     */
    public static final int Pb_STATE_MEDIA_DOWNLOAD_DESTROY_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Download_State valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Download_State forNumber(int value) {
      switch (value) {
        case 0: return Pb_STATE_MEDIA_DOWNLOAD_IDLE;
        case 1: return Pb_STATE_MEDIA_DOWNLOAD_WORKING;
        case 2: return Pb_STATE_MEDIA_DOWNLOAD_FINISH;
        case 3: return Pb_STATE_MEDIA_DOWNLOAD_ERROR;
        case 4: return Pb_STATE_MEDIA_DOWNLOAD_EXIT;
        case 5: return Pb_STATE_MEDIA_DOWNLOAD_DESTROY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Download_State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Download_State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Download_State>() {
            public Pb_Download_State findValueByNumber(int number) {
              return Pb_Download_State.forNumber(number);
            }
          };

    private final int value;

    private Pb_Download_State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Download_State)
  }

  /**
   * <pre>
   *执行事件时指定的触发器标志
   *triggerusedef
   * </pre>
   *
   * Protobuf enum {@code Pb_TriggerUsedef}
   */
  public enum Pb_TriggerUsedef
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_EXCEC_USERDEF_FLAG_ZERO = 0;</code>
     */
    Pb_EXCEC_USERDEF_FLAG_ZERO(0),
    /**
     * <pre>
     *主持人操作标志
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_COMPEREOPER = 1;</code>
     */
    Pb_EXCEC_USERDEF_FLAG_COMPEREOPER(1),
    /**
     * <pre>
     *其他参会人员操作标志
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_OTHEROPER = 2;</code>
     */
    Pb_EXCEC_USERDEF_FLAG_OTHEROPER(2),
    /**
     * <pre>
     *不创建新窗口操作标志 强制播放不允许接收端主动关闭
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_NOCREATEWINOPER = 4;</code>
     */
    Pb_EXCEC_USERDEF_FLAG_NOCREATEWINOPER(4),
    /**
     * <pre>
     *不保存流录音操作标志
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_NOSTREAMRECORD = 8;</code>
     */
    Pb_EXCEC_USERDEF_FLAG_NOSTREAMRECORD(8),
    /**
     * <pre>
     *同屏开启
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_SCREENSHARE = 16;</code>
     */
    Pb_EXCEC_USERDEF_FLAG_SCREENSHARE(16),
    /**
     * <pre>
     *播放位置调整 0百分比 为1表示按时间调整（秒）
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_SETPOSMODE = 32;</code>
     */
    Pb_EXCEC_USERDEF_FLAG_SETPOSMODE(32),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_EXCEC_USERDEF_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_EXCEC_USERDEF_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *主持人操作标志
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_COMPEREOPER = 1;</code>
     */
    public static final int Pb_EXCEC_USERDEF_FLAG_COMPEREOPER_VALUE = 1;
    /**
     * <pre>
     *其他参会人员操作标志
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_OTHEROPER = 2;</code>
     */
    public static final int Pb_EXCEC_USERDEF_FLAG_OTHEROPER_VALUE = 2;
    /**
     * <pre>
     *不创建新窗口操作标志 强制播放不允许接收端主动关闭
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_NOCREATEWINOPER = 4;</code>
     */
    public static final int Pb_EXCEC_USERDEF_FLAG_NOCREATEWINOPER_VALUE = 4;
    /**
     * <pre>
     *不保存流录音操作标志
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_NOSTREAMRECORD = 8;</code>
     */
    public static final int Pb_EXCEC_USERDEF_FLAG_NOSTREAMRECORD_VALUE = 8;
    /**
     * <pre>
     *同屏开启
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_SCREENSHARE = 16;</code>
     */
    public static final int Pb_EXCEC_USERDEF_FLAG_SCREENSHARE_VALUE = 16;
    /**
     * <pre>
     *播放位置调整 0百分比 为1表示按时间调整（秒）
     * </pre>
     *
     * <code>Pb_EXCEC_USERDEF_FLAG_SETPOSMODE = 32;</code>
     */
    public static final int Pb_EXCEC_USERDEF_FLAG_SETPOSMODE_VALUE = 32;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_TriggerUsedef valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_TriggerUsedef forNumber(int value) {
      switch (value) {
        case 0: return Pb_EXCEC_USERDEF_FLAG_ZERO;
        case 1: return Pb_EXCEC_USERDEF_FLAG_COMPEREOPER;
        case 2: return Pb_EXCEC_USERDEF_FLAG_OTHEROPER;
        case 4: return Pb_EXCEC_USERDEF_FLAG_NOCREATEWINOPER;
        case 8: return Pb_EXCEC_USERDEF_FLAG_NOSTREAMRECORD;
        case 16: return Pb_EXCEC_USERDEF_FLAG_SCREENSHARE;
        case 32: return Pb_EXCEC_USERDEF_FLAG_SETPOSMODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_TriggerUsedef>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_TriggerUsedef> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_TriggerUsedef>() {
            public Pb_TriggerUsedef findValueByNumber(int number) {
              return Pb_TriggerUsedef.forNumber(number);
            }
          };

    private final int value;

    private Pb_TriggerUsedef(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_TriggerUsedef)
  }

  /**
   * <pre>
   *下载错误码
   *ERROR 
   * </pre>
   *
   * Protobuf enum {@code Pb_Download_Erro}
   */
  public enum Pb_Download_Erro
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *正常
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_OK = 0;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_OK(0),
    /**
     * <pre>
     *参数不对
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_PARAMETER = 1;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_PARAMETER(1),
    /**
     * <pre>
     *线程创建失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_INITTHREAD = 2;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_INITTHREAD(2),
    /**
     * <pre>
     *主动停止
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_USERSTOP = 3;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_USERSTOP(3),
    /**
     * <pre>
     *不存在的媒体 
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_NOMEDIA = 4;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_NOMEDIA(4),
    /**
     * <pre>
     *打开文件失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_OPEN = 5;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_OPEN(5),
    /**
     * <pre>
     *文件完整,不需要下载
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_FILEOK = 6;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_FILEOK(6),
    /**
     * <pre>
     *创建 文件失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_CREATE = 7;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_CREATE(7),
    /**
     * <pre>
     *内存分配失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_MEMORY = 8;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_MEMORY(8),
    /**
     * <pre>
     *平台库初始化下载失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_EXECINIT = 9;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_EXECINIT(9),
    /**
     * <pre>
     *设置下载位置失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_SETPOS = 10;</code>
     */
    Pb_ERROR_MEDIA_DOWNLOAD_SETPOS(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *正常
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_OK = 0;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_OK_VALUE = 0;
    /**
     * <pre>
     *参数不对
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_PARAMETER = 1;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_PARAMETER_VALUE = 1;
    /**
     * <pre>
     *线程创建失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_INITTHREAD = 2;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_INITTHREAD_VALUE = 2;
    /**
     * <pre>
     *主动停止
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_USERSTOP = 3;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_USERSTOP_VALUE = 3;
    /**
     * <pre>
     *不存在的媒体 
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_NOMEDIA = 4;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_NOMEDIA_VALUE = 4;
    /**
     * <pre>
     *打开文件失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_OPEN = 5;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_OPEN_VALUE = 5;
    /**
     * <pre>
     *文件完整,不需要下载
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_FILEOK = 6;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_FILEOK_VALUE = 6;
    /**
     * <pre>
     *创建 文件失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_CREATE = 7;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_CREATE_VALUE = 7;
    /**
     * <pre>
     *内存分配失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_MEMORY = 8;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_MEMORY_VALUE = 8;
    /**
     * <pre>
     *平台库初始化下载失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_EXECINIT = 9;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_EXECINIT_VALUE = 9;
    /**
     * <pre>
     *设置下载位置失败
     * </pre>
     *
     * <code>Pb_ERROR_MEDIA_DOWNLOAD_SETPOS = 10;</code>
     */
    public static final int Pb_ERROR_MEDIA_DOWNLOAD_SETPOS_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Download_Erro valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Download_Erro forNumber(int value) {
      switch (value) {
        case 0: return Pb_ERROR_MEDIA_DOWNLOAD_OK;
        case 1: return Pb_ERROR_MEDIA_DOWNLOAD_PARAMETER;
        case 2: return Pb_ERROR_MEDIA_DOWNLOAD_INITTHREAD;
        case 3: return Pb_ERROR_MEDIA_DOWNLOAD_USERSTOP;
        case 4: return Pb_ERROR_MEDIA_DOWNLOAD_NOMEDIA;
        case 5: return Pb_ERROR_MEDIA_DOWNLOAD_OPEN;
        case 6: return Pb_ERROR_MEDIA_DOWNLOAD_FILEOK;
        case 7: return Pb_ERROR_MEDIA_DOWNLOAD_CREATE;
        case 8: return Pb_ERROR_MEDIA_DOWNLOAD_MEMORY;
        case 9: return Pb_ERROR_MEDIA_DOWNLOAD_EXECINIT;
        case 10: return Pb_ERROR_MEDIA_DOWNLOAD_SETPOS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Download_Erro>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Download_Erro> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Download_Erro>() {
            public Pb_Download_Erro findValueByNumber(int number) {
              return Pb_Download_Erro.forNumber(number);
            }
          };

    private final int value;

    private Pb_Download_Erro(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Download_Erro)
  }

  /**
   * <pre>
   *上传文件状态
   *status
   * </pre>
   *
   * Protobuf enum {@code Pb_Upload_State}
   */
  public enum Pb_Upload_State
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *等待上传
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_IDLE = 0;</code>
     */
    Pb_UPLOADMEDIA_FLAG_IDLE(0),
    /**
     * <pre>
     *上传中
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_UPLOADING = 1;</code>
     */
    Pb_UPLOADMEDIA_FLAG_UPLOADING(1),
    /**
     * <pre>
     *停止
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_STOP = 2;</code>
     */
    Pb_UPLOADMEDIA_FLAG_STOP(2),
    /**
     * <pre>
     *结束上传
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_HADEND = 3;</code>
     */
    Pb_UPLOADMEDIA_FLAG_HADEND(3),
    /**
     * <pre>
     *没找到可用的服务器
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_NOSERVER = 4;</code>
     */
    Pb_UPLOADMEDIA_FLAG_NOSERVER(4),
    /**
     * <pre>
     *已经存在
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_ISBEING = 5;</code>
     */
    Pb_UPLOADMEDIA_FLAG_ISBEING(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *等待上传
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_IDLE = 0;</code>
     */
    public static final int Pb_UPLOADMEDIA_FLAG_IDLE_VALUE = 0;
    /**
     * <pre>
     *上传中
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_UPLOADING = 1;</code>
     */
    public static final int Pb_UPLOADMEDIA_FLAG_UPLOADING_VALUE = 1;
    /**
     * <pre>
     *停止
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_STOP = 2;</code>
     */
    public static final int Pb_UPLOADMEDIA_FLAG_STOP_VALUE = 2;
    /**
     * <pre>
     *结束上传
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_HADEND = 3;</code>
     */
    public static final int Pb_UPLOADMEDIA_FLAG_HADEND_VALUE = 3;
    /**
     * <pre>
     *没找到可用的服务器
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_NOSERVER = 4;</code>
     */
    public static final int Pb_UPLOADMEDIA_FLAG_NOSERVER_VALUE = 4;
    /**
     * <pre>
     *已经存在
     * </pre>
     *
     * <code>Pb_UPLOADMEDIA_FLAG_ISBEING = 5;</code>
     */
    public static final int Pb_UPLOADMEDIA_FLAG_ISBEING_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Upload_State valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Upload_State forNumber(int value) {
      switch (value) {
        case 0: return Pb_UPLOADMEDIA_FLAG_IDLE;
        case 1: return Pb_UPLOADMEDIA_FLAG_UPLOADING;
        case 2: return Pb_UPLOADMEDIA_FLAG_STOP;
        case 3: return Pb_UPLOADMEDIA_FLAG_HADEND;
        case 4: return Pb_UPLOADMEDIA_FLAG_NOSERVER;
        case 5: return Pb_UPLOADMEDIA_FLAG_ISBEING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Upload_State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Upload_State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Upload_State>() {
            public Pb_Upload_State findValueByNumber(int number) {
              return Pb_Upload_State.forNumber(number);
            }
          };

    private final int value;

    private Pb_Upload_State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Upload_State)
  }

  /**
   * <pre>
   *上传文件标志
   *uploadflag
   * </pre>
   *
   * Protobuf enum {@code Pb_Upload_Flag}
   */
  public enum Pb_Upload_Flag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_UPLOADFLAG_ZERO = 0;</code>
     */
    Pb_MEET_UPLOADFLAG_ZERO(0),
    /**
     * <pre>
     *只能当上传结束才回调进度
     * </pre>
     *
     * <code>Pb_MEET_UPLOADFLAG_ONLYENDCALLBACK = 1;</code>
     */
    Pb_MEET_UPLOADFLAG_ONLYENDCALLBACK(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_UPLOADFLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_UPLOADFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *只能当上传结束才回调进度
     * </pre>
     *
     * <code>Pb_MEET_UPLOADFLAG_ONLYENDCALLBACK = 1;</code>
     */
    public static final int Pb_MEET_UPLOADFLAG_ONLYENDCALLBACK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Upload_Flag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Upload_Flag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_UPLOADFLAG_ZERO;
        case 1: return Pb_MEET_UPLOADFLAG_ONLYENDCALLBACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Upload_Flag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Upload_Flag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Upload_Flag>() {
            public Pb_Upload_Flag findValueByNumber(int number) {
              return Pb_Upload_Flag.forNumber(number);
            }
          };

    private final int value;

    private Pb_Upload_Flag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Upload_Flag)
  }

  /**
   * <pre>
   *查询指定参会人员的某项属性
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MemberPropertyID}
   */
  public enum Pb_MemberPropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETMEMBER_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETMEMBER_PROPERTY_ZERO(0),
    /**
     * <pre>
     *名称 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_NAME = 1;</code>
     */
    Pb_MEETMEMBER_PROPERTY_NAME(1),
    /**
     * <pre>
     *公司 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_COMPANY = 2;</code>
     */
    Pb_MEETMEMBER_PROPERTY_COMPANY(2),
    /**
     * <pre>
     *身份 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_JOB = 3;</code>
     */
    Pb_MEETMEMBER_PROPERTY_JOB(3),
    /**
     * <pre>
     *备注 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_COMMENT = 4;</code>
     */
    Pb_MEETMEMBER_PROPERTY_COMMENT(4),
    /**
     * <pre>
     *电话 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_PHONE = 5;</code>
     */
    Pb_MEETMEMBER_PROPERTY_PHONE(5),
    /**
     * <pre>
     *邮箱 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_EMAIL = 6;</code>
     */
    Pb_MEETMEMBER_PROPERTY_EMAIL(6),
    /**
     * <pre>
     *密码 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_PASSWORD = 7;</code>
     */
    Pb_MEETMEMBER_PROPERTY_PASSWORD(7),
    /**
     * <pre>
     *排序序号 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_POS = 8;</code>
     */
    Pb_MEETMEMBER_PROPERTY_POS(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETMEMBER_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *名称 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_NAME = 1;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_NAME_VALUE = 1;
    /**
     * <pre>
     *公司 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_COMPANY = 2;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_COMPANY_VALUE = 2;
    /**
     * <pre>
     *身份 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_JOB = 3;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_JOB_VALUE = 3;
    /**
     * <pre>
     *备注 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_COMMENT = 4;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_COMMENT_VALUE = 4;
    /**
     * <pre>
     *电话 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_PHONE = 5;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_PHONE_VALUE = 5;
    /**
     * <pre>
     *邮箱 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_EMAIL = 6;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_EMAIL_VALUE = 6;
    /**
     * <pre>
     *密码 query(text)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_PASSWORD = 7;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_PASSWORD_VALUE = 7;
    /**
     * <pre>
     *排序序号 query(int32u)
     * </pre>
     *
     * <code>Pb_MEETMEMBER_PROPERTY_POS = 8;</code>
     */
    public static final int Pb_MEETMEMBER_PROPERTY_POS_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MemberPropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MemberPropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETMEMBER_PROPERTY_ZERO;
        case 1: return Pb_MEETMEMBER_PROPERTY_NAME;
        case 2: return Pb_MEETMEMBER_PROPERTY_COMPANY;
        case 3: return Pb_MEETMEMBER_PROPERTY_JOB;
        case 4: return Pb_MEETMEMBER_PROPERTY_COMMENT;
        case 5: return Pb_MEETMEMBER_PROPERTY_PHONE;
        case 6: return Pb_MEETMEMBER_PROPERTY_EMAIL;
        case 7: return Pb_MEETMEMBER_PROPERTY_PASSWORD;
        case 8: return Pb_MEETMEMBER_PROPERTY_POS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MemberPropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MemberPropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MemberPropertyID>() {
            public Pb_MemberPropertyID findValueByNumber(int number) {
              return Pb_MemberPropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MemberPropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MemberPropertyID)
  }

  /**
   * <pre>
   *参会人权限
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MemberPermissionPropertyID}
   */
  public enum Pb_MemberPermissionPropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_memperm_zero = 0;</code>
     */
    Pb_memperm_zero(0),
    /**
     * <pre>
     *同屏权限
     * </pre>
     *
     * <code>Pb_memperm_sscreen = 1;</code>
     */
    Pb_memperm_sscreen(1),
    /**
     * <pre>
     *投影权限
     * </pre>
     *
     * <code>Pb_memperm_projective = 2;</code>
     */
    Pb_memperm_projective(2),
    /**
     * <pre>
     *上传权限
     * </pre>
     *
     * <code>Pb_memperm_upload = 4;</code>
     */
    Pb_memperm_upload(4),
    /**
     * <pre>
     *下载权限
     * </pre>
     *
     * <code>Pb_memperm_download = 8;</code>
     */
    Pb_memperm_download(8),
    /**
     * <pre>
     *投票权限
     * </pre>
     *
     * <code>Pb_memperm_vote = 16;</code>
     */
    Pb_memperm_vote(16),
    /**
     * <pre>
     *批注查看权限 -- 不保存到数据库
     * </pre>
     *
     * <code>Pb_memperm_postilview = 32;</code>
     */
    Pb_memperm_postilview(32),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_memperm_zero = 0;</code>
     */
    public static final int Pb_memperm_zero_VALUE = 0;
    /**
     * <pre>
     *同屏权限
     * </pre>
     *
     * <code>Pb_memperm_sscreen = 1;</code>
     */
    public static final int Pb_memperm_sscreen_VALUE = 1;
    /**
     * <pre>
     *投影权限
     * </pre>
     *
     * <code>Pb_memperm_projective = 2;</code>
     */
    public static final int Pb_memperm_projective_VALUE = 2;
    /**
     * <pre>
     *上传权限
     * </pre>
     *
     * <code>Pb_memperm_upload = 4;</code>
     */
    public static final int Pb_memperm_upload_VALUE = 4;
    /**
     * <pre>
     *下载权限
     * </pre>
     *
     * <code>Pb_memperm_download = 8;</code>
     */
    public static final int Pb_memperm_download_VALUE = 8;
    /**
     * <pre>
     *投票权限
     * </pre>
     *
     * <code>Pb_memperm_vote = 16;</code>
     */
    public static final int Pb_memperm_vote_VALUE = 16;
    /**
     * <pre>
     *批注查看权限 -- 不保存到数据库
     * </pre>
     *
     * <code>Pb_memperm_postilview = 32;</code>
     */
    public static final int Pb_memperm_postilview_VALUE = 32;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MemberPermissionPropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MemberPermissionPropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_memperm_zero;
        case 1: return Pb_memperm_sscreen;
        case 2: return Pb_memperm_projective;
        case 4: return Pb_memperm_upload;
        case 8: return Pb_memperm_download;
        case 16: return Pb_memperm_vote;
        case 32: return Pb_memperm_postilview;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MemberPermissionPropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MemberPermissionPropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MemberPermissionPropertyID>() {
            public Pb_MemberPermissionPropertyID findValueByNumber(int number) {
              return Pb_MemberPermissionPropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MemberPermissionPropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MemberPermissionPropertyID)
  }

  /**
   * <pre>
   *----------会议签到类型----------
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetSignType}
   */
  public enum Pb_MeetSignType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *类型--直接签到
     * </pre>
     *
     * <code>Pb_signin_direct = 0;</code>
     */
    Pb_signin_direct(0),
    /**
     * <pre>
     *类型--个人密码签到
     * </pre>
     *
     * <code>Pb_signin_psw = 1;</code>
     */
    Pb_signin_psw(1),
    /**
     * <pre>
     *类型--拍照(手写)签到
     * </pre>
     *
     * <code>Pb_signin_photo = 2;</code>
     */
    Pb_signin_photo(2),
    /**
     * <pre>
     *类型--会议密码签到
     * </pre>
     *
     * <code>Pb_signin_onepsw = 3;</code>
     */
    Pb_signin_onepsw(3),
    /**
     * <pre>
     *类型--会议密码+拍照(手写)签到
     * </pre>
     *
     * <code>Pb_signin_onepsw_photo = 4;</code>
     */
    Pb_signin_onepsw_photo(4),
    /**
     * <pre>
     *类型--个人密码+拍照(手写)签到
     * </pre>
     *
     * <code>Pb_signin_psw_photo = 5;</code>
     */
    Pb_signin_psw_photo(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *类型--直接签到
     * </pre>
     *
     * <code>Pb_signin_direct = 0;</code>
     */
    public static final int Pb_signin_direct_VALUE = 0;
    /**
     * <pre>
     *类型--个人密码签到
     * </pre>
     *
     * <code>Pb_signin_psw = 1;</code>
     */
    public static final int Pb_signin_psw_VALUE = 1;
    /**
     * <pre>
     *类型--拍照(手写)签到
     * </pre>
     *
     * <code>Pb_signin_photo = 2;</code>
     */
    public static final int Pb_signin_photo_VALUE = 2;
    /**
     * <pre>
     *类型--会议密码签到
     * </pre>
     *
     * <code>Pb_signin_onepsw = 3;</code>
     */
    public static final int Pb_signin_onepsw_VALUE = 3;
    /**
     * <pre>
     *类型--会议密码+拍照(手写)签到
     * </pre>
     *
     * <code>Pb_signin_onepsw_photo = 4;</code>
     */
    public static final int Pb_signin_onepsw_photo_VALUE = 4;
    /**
     * <pre>
     *类型--个人密码+拍照(手写)签到
     * </pre>
     *
     * <code>Pb_signin_psw_photo = 5;</code>
     */
    public static final int Pb_signin_psw_photo_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetSignType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetSignType forNumber(int value) {
      switch (value) {
        case 0: return Pb_signin_direct;
        case 1: return Pb_signin_psw;
        case 2: return Pb_signin_photo;
        case 3: return Pb_signin_onepsw;
        case 4: return Pb_signin_onepsw_photo;
        case 5: return Pb_signin_psw_photo;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetSignType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetSignType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetSignType>() {
            public Pb_MeetSignType findValueByNumber(int number) {
              return Pb_MeetSignType.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetSignType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetSignType)
  }

  /**
   * <pre>
   *查询会场属性信息
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetRoomPropertyID}
   */
  public enum Pb_MeetRoomPropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETROOM_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETROOM_PROPERTY_ZERO(0),
    /**
     * <pre>
     *按会场ID返回会场底图ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETROOM_PROPERTY_BGPHOTOID = 1;</code>
     */
    Pb_MEETROOM_PROPERTY_BGPHOTOID(1),
    /**
     * <pre>
     *按会场ID返回会场管理员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_MANAGERID = 2;</code>
     */
    Pb_MEETSEAT_PROPERTY_MANAGERID(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETROOM_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETROOM_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *按会场ID返回会场底图ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETROOM_PROPERTY_BGPHOTOID = 1;</code>
     */
    public static final int Pb_MEETROOM_PROPERTY_BGPHOTOID_VALUE = 1;
    /**
     * <pre>
     *按会场ID返回会场管理员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_MANAGERID = 2;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_MANAGERID_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetRoomPropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetRoomPropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETROOM_PROPERTY_ZERO;
        case 1: return Pb_MEETROOM_PROPERTY_BGPHOTOID;
        case 2: return Pb_MEETSEAT_PROPERTY_MANAGERID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetRoomPropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetRoomPropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetRoomPropertyID>() {
            public Pb_MeetRoomPropertyID findValueByNumber(int number) {
              return Pb_MeetRoomPropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetRoomPropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetRoomPropertyID)
  }

  /**
   * <pre>
   *direction 会场设备朝向
   * </pre>
   *
   * Protobuf enum {@code Pb_DeviceDirection}
   */
  public enum Pb_DeviceDirection
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *朝上
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_UP = 0;</code>
     */
    Pb_SEATDIRECTION_UP(0),
    /**
     * <pre>
     *朝上
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_DOWN = 1;</code>
     */
    Pb_SEATDIRECTION_DOWN(1),
    /**
     * <pre>
     *朝左
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_LEFT = 2;</code>
     */
    Pb_SEATDIRECTION_LEFT(2),
    /**
     * <pre>
     *朝右
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_RIGHT = 3;</code>
     */
    Pb_SEATDIRECTION_RIGHT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *朝上
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_UP = 0;</code>
     */
    public static final int Pb_SEATDIRECTION_UP_VALUE = 0;
    /**
     * <pre>
     *朝上
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_DOWN = 1;</code>
     */
    public static final int Pb_SEATDIRECTION_DOWN_VALUE = 1;
    /**
     * <pre>
     *朝左
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_LEFT = 2;</code>
     */
    public static final int Pb_SEATDIRECTION_LEFT_VALUE = 2;
    /**
     * <pre>
     *朝右
     * </pre>
     *
     * <code>Pb_SEATDIRECTION_RIGHT = 3;</code>
     */
    public static final int Pb_SEATDIRECTION_RIGHT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_DeviceDirection valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_DeviceDirection forNumber(int value) {
      switch (value) {
        case 0: return Pb_SEATDIRECTION_UP;
        case 1: return Pb_SEATDIRECTION_DOWN;
        case 2: return Pb_SEATDIRECTION_LEFT;
        case 3: return Pb_SEATDIRECTION_RIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_DeviceDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceDirection>() {
            public Pb_DeviceDirection findValueByNumber(int number) {
              return Pb_DeviceDirection.forNumber(number);
            }
          };

    private final int value;

    private Pb_DeviceDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_DeviceDirection)
  }

  /**
   * <pre>
   *查询符合要求的设备ID  过滤标志
   *filterflag
   * </pre>
   *
   * Protobuf enum {@code Pb_RoomDeviceFilterFlag}
   */
  public enum Pb_RoomDeviceFilterFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_ROOMDEVICE_FLAG_ZERO = 0;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_ZERO(0),
    /**
     * <pre>
     *在线
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_ONLINE = 1;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_ONLINE(1),
    /**
     * <pre>
     *匹配会议界面状态
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_FACESTATUS = 2;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_FACESTATUS(2),
    /**
     * <pre>
     *参会人员绑定
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_BINDMEMBER = 4;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_BINDMEMBER(4),
    /**
     * <pre>
     *投影机
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_PROJECTIVE = 8;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_PROJECTIVE(8),
    /**
     * <pre>
     *已经签到
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_HADSIGNIN = 16;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_HADSIGNIN(16),
    /**
     * <pre>
     *排除本机ID
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_NOSELFID = 32;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_NOSELFID(32),
    /**
     * <pre>
     *排除指定ID
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_NODEVID = 64;</code>
     */
    Pb_MEET_ROOMDEVICE_FLAG_NODEVID(64),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_ROOMDEVICE_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *在线
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_ONLINE = 1;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_ONLINE_VALUE = 1;
    /**
     * <pre>
     *匹配会议界面状态
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_FACESTATUS = 2;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_FACESTATUS_VALUE = 2;
    /**
     * <pre>
     *参会人员绑定
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_BINDMEMBER = 4;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_BINDMEMBER_VALUE = 4;
    /**
     * <pre>
     *投影机
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_PROJECTIVE = 8;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_PROJECTIVE_VALUE = 8;
    /**
     * <pre>
     *已经签到
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_HADSIGNIN = 16;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_HADSIGNIN_VALUE = 16;
    /**
     * <pre>
     *排除本机ID
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_NOSELFID = 32;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_NOSELFID_VALUE = 32;
    /**
     * <pre>
     *排除指定ID
     * </pre>
     *
     * <code>Pb_MEET_ROOMDEVICE_FLAG_NODEVID = 64;</code>
     */
    public static final int Pb_MEET_ROOMDEVICE_FLAG_NODEVID_VALUE = 64;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_RoomDeviceFilterFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_RoomDeviceFilterFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_ROOMDEVICE_FLAG_ZERO;
        case 1: return Pb_MEET_ROOMDEVICE_FLAG_ONLINE;
        case 2: return Pb_MEET_ROOMDEVICE_FLAG_FACESTATUS;
        case 4: return Pb_MEET_ROOMDEVICE_FLAG_BINDMEMBER;
        case 8: return Pb_MEET_ROOMDEVICE_FLAG_PROJECTIVE;
        case 16: return Pb_MEET_ROOMDEVICE_FLAG_HADSIGNIN;
        case 32: return Pb_MEET_ROOMDEVICE_FLAG_NOSELFID;
        case 64: return Pb_MEET_ROOMDEVICE_FLAG_NODEVID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_RoomDeviceFilterFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_RoomDeviceFilterFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_RoomDeviceFilterFlag>() {
            public Pb_RoomDeviceFilterFlag findValueByNumber(int number) {
              return Pb_RoomDeviceFilterFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_RoomDeviceFilterFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_RoomDeviceFilterFlag)
  }

  /**
   * <pre>
   *会议状态
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetStatus}
   */
  public enum Pb_MeetStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *会议创建中，等待开始
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_Ready = 0;</code>
     */
    Pb_MEETING_STATUS_Ready(0),
    /**
     * <pre>
     *会议开始进行中
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_Start = 1;</code>
     */
    Pb_MEETING_STATUS_Start(1),
    /**
     * <pre>
     *会议结束
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_End = 2;</code>
     */
    Pb_MEETING_STATUS_End(2),
    /**
     * <pre>
     *会议暂停
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_PAUSE = 3;</code>
     */
    Pb_MEETING_STATUS_PAUSE(3),
    /**
     * <pre>
     *模板会议
     * </pre>
     *
     * <code>Pb_MEETING_MODEL = 4;</code>
     */
    Pb_MEETING_MODEL(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *会议创建中，等待开始
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_Ready = 0;</code>
     */
    public static final int Pb_MEETING_STATUS_Ready_VALUE = 0;
    /**
     * <pre>
     *会议开始进行中
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_Start = 1;</code>
     */
    public static final int Pb_MEETING_STATUS_Start_VALUE = 1;
    /**
     * <pre>
     *会议结束
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_End = 2;</code>
     */
    public static final int Pb_MEETING_STATUS_End_VALUE = 2;
    /**
     * <pre>
     *会议暂停
     * </pre>
     *
     * <code>Pb_MEETING_STATUS_PAUSE = 3;</code>
     */
    public static final int Pb_MEETING_STATUS_PAUSE_VALUE = 3;
    /**
     * <pre>
     *模板会议
     * </pre>
     *
     * <code>Pb_MEETING_MODEL = 4;</code>
     */
    public static final int Pb_MEETING_MODEL_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetStatus valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetStatus forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETING_STATUS_Ready;
        case 1: return Pb_MEETING_STATUS_Start;
        case 2: return Pb_MEETING_STATUS_End;
        case 3: return Pb_MEETING_STATUS_PAUSE;
        case 4: return Pb_MEETING_MODEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetStatus>() {
            public Pb_MeetStatus findValueByNumber(int number) {
              return Pb_MeetStatus.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetStatus)
  }

  /**
   * <pre>
   *查询会议属性信息
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetPropertyID}
   */
  public enum Pb_MeetPropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEET_PROPERTY_ZERO(0),
    /**
     * <pre>
     *按会议ID返回会议是否为保密会议 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_SECRECY = 1;</code>
     */
    Pb_MEET_PROPERTY_SECRECY(1),
    /**
     * <pre>
     *按会议ID返回会议会场ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_ROOMID = 2;</code>
     */
    Pb_MEET_PROPERTY_ROOMID(2),
    /**
     * <pre>
     *按会议ID返回会议签到方式 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_SIGNINTYPE = 3;</code>
     */
    Pb_MEET_PROPERTY_SIGNINTYPE(3),
    /**
     * <pre>
     *按会议ID返回会议管理员iD query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_MANAGERID = 4;</code>
     */
    Pb_MEET_PROPERTY_MANAGERID(4),
    /**
     * <pre>
     *按会议ID返回会议状态  query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_STATUS = 5;</code>
     */
    Pb_MEET_PROPERTY_STATUS(5),
    /**
     * <pre>
     *按会议ID返回会议开始时间 query(fixed64)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_STARTTIME = 6;</code>
     */
    Pb_MEET_PROPERTY_STARTTIME(6),
    /**
     * <pre>
     *按会议ID返回会议结束时间 query(fixed64)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_ENDTIME = 7;</code>
     */
    Pb_MEET_PROPERTY_ENDTIME(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEET_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *按会议ID返回会议是否为保密会议 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_SECRECY = 1;</code>
     */
    public static final int Pb_MEET_PROPERTY_SECRECY_VALUE = 1;
    /**
     * <pre>
     *按会议ID返回会议会场ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_ROOMID = 2;</code>
     */
    public static final int Pb_MEET_PROPERTY_ROOMID_VALUE = 2;
    /**
     * <pre>
     *按会议ID返回会议签到方式 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_SIGNINTYPE = 3;</code>
     */
    public static final int Pb_MEET_PROPERTY_SIGNINTYPE_VALUE = 3;
    /**
     * <pre>
     *按会议ID返回会议管理员iD query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_MANAGERID = 4;</code>
     */
    public static final int Pb_MEET_PROPERTY_MANAGERID_VALUE = 4;
    /**
     * <pre>
     *按会议ID返回会议状态  query(fixed32)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_STATUS = 5;</code>
     */
    public static final int Pb_MEET_PROPERTY_STATUS_VALUE = 5;
    /**
     * <pre>
     *按会议ID返回会议开始时间 query(fixed64)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_STARTTIME = 6;</code>
     */
    public static final int Pb_MEET_PROPERTY_STARTTIME_VALUE = 6;
    /**
     * <pre>
     *按会议ID返回会议结束时间 query(fixed64)
     * </pre>
     *
     * <code>Pb_MEET_PROPERTY_ENDTIME = 7;</code>
     */
    public static final int Pb_MEET_PROPERTY_ENDTIME_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetPropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetPropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_PROPERTY_ZERO;
        case 1: return Pb_MEET_PROPERTY_SECRECY;
        case 2: return Pb_MEET_PROPERTY_ROOMID;
        case 3: return Pb_MEET_PROPERTY_SIGNINTYPE;
        case 4: return Pb_MEET_PROPERTY_MANAGERID;
        case 5: return Pb_MEET_PROPERTY_STATUS;
        case 6: return Pb_MEET_PROPERTY_STARTTIME;
        case 7: return Pb_MEET_PROPERTY_ENDTIME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetPropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPropertyID>() {
            public Pb_MeetPropertyID findValueByNumber(int number) {
              return Pb_MeetPropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetPropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetPropertyID)
  }

  /**
   * <pre>
   *----------参会人员角色----------
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetMemberRole}
   */
  public enum Pb_MeetMemberRole
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *未使用
     * </pre>
     *
     * <code>Pb_role_member_nouser = 0;</code>
     */
    Pb_role_member_nouser(0),
    /**
     * <pre>
     *一般参会人员
     * </pre>
     *
     * <code>Pb_role_member_normal = 1;</code>
     */
    Pb_role_member_normal(1),
    /**
     * <pre>
     *主持人
     * </pre>
     *
     * <code>Pb_role_member_compere = 3;</code>
     */
    Pb_role_member_compere(3),
    /**
     * <pre>
     *秘书
     * </pre>
     *
     * <code>Pb_role_member_secretary = 4;</code>
     */
    Pb_role_member_secretary(4),
    /**
     * <pre>
     *投影仪
     * </pre>
     *
     * <code>Pb_role_device_projector = 8;</code>
     */
    Pb_role_device_projector(8),
    /**
     * <pre>
     *管理员
     * </pre>
     *
     * <code>Pb_role_admin = 9;</code>
     */
    Pb_role_admin(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *未使用
     * </pre>
     *
     * <code>Pb_role_member_nouser = 0;</code>
     */
    public static final int Pb_role_member_nouser_VALUE = 0;
    /**
     * <pre>
     *一般参会人员
     * </pre>
     *
     * <code>Pb_role_member_normal = 1;</code>
     */
    public static final int Pb_role_member_normal_VALUE = 1;
    /**
     * <pre>
     *主持人
     * </pre>
     *
     * <code>Pb_role_member_compere = 3;</code>
     */
    public static final int Pb_role_member_compere_VALUE = 3;
    /**
     * <pre>
     *秘书
     * </pre>
     *
     * <code>Pb_role_member_secretary = 4;</code>
     */
    public static final int Pb_role_member_secretary_VALUE = 4;
    /**
     * <pre>
     *投影仪
     * </pre>
     *
     * <code>Pb_role_device_projector = 8;</code>
     */
    public static final int Pb_role_device_projector_VALUE = 8;
    /**
     * <pre>
     *管理员
     * </pre>
     *
     * <code>Pb_role_admin = 9;</code>
     */
    public static final int Pb_role_admin_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetMemberRole valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetMemberRole forNumber(int value) {
      switch (value) {
        case 0: return Pb_role_member_nouser;
        case 1: return Pb_role_member_normal;
        case 3: return Pb_role_member_compere;
        case 4: return Pb_role_member_secretary;
        case 8: return Pb_role_device_projector;
        case 9: return Pb_role_admin;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetMemberRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetMemberRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetMemberRole>() {
            public Pb_MeetMemberRole findValueByNumber(int number) {
              return Pb_MeetMemberRole.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetMemberRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetMemberRole)
  }

  /**
   * <pre>
   *查询指定会议目录的某项属性
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetDirectoryAttrib}
   */
  public enum Pb_MeetDirectoryAttrib
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETDIRECTORY_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETDIRECTORY_PROPERTY_ZERO(0),
    /**
     * <pre>
     *目录名称   query(text)
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_NAME = 1;</code>
     */
    Pb_MEETDIRECTORY_PROPERTY_NAME(1),
    /**
     * <pre>
     *文件个数   query(fixed32) 
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_SIZE = 2;</code>
     */
    Pb_MEETDIRECTORY_PROPERTY_SIZE(2),
    /**
     * <pre>
     *父目录ID   query(fixed32) 
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_PARENT = 3;</code>
     */
    Pb_MEETDIRECTORY_PROPERTY_PARENT(3),
    /**
     * <pre>
     *目录的序号 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_POS = 4;</code>
     */
    Pb_MEETDIRECTORY_PROPERTY_POS(4),
    /**
     * <pre>
     *当前会议最大的目录ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_MAXDIRID = 5;</code>
     */
    Pb_MEETDIRECTORY_PROPERTY_MAXDIRID(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETDIRECTORY_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETDIRECTORY_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *目录名称   query(text)
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_NAME = 1;</code>
     */
    public static final int Pb_MEETDIRECTORY_PROPERTY_NAME_VALUE = 1;
    /**
     * <pre>
     *文件个数   query(fixed32) 
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_SIZE = 2;</code>
     */
    public static final int Pb_MEETDIRECTORY_PROPERTY_SIZE_VALUE = 2;
    /**
     * <pre>
     *父目录ID   query(fixed32) 
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_PARENT = 3;</code>
     */
    public static final int Pb_MEETDIRECTORY_PROPERTY_PARENT_VALUE = 3;
    /**
     * <pre>
     *目录的序号 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_POS = 4;</code>
     */
    public static final int Pb_MEETDIRECTORY_PROPERTY_POS_VALUE = 4;
    /**
     * <pre>
     *当前会议最大的目录ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETDIRECTORY_PROPERTY_MAXDIRID = 5;</code>
     */
    public static final int Pb_MEETDIRECTORY_PROPERTY_MAXDIRID_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetDirectoryAttrib valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetDirectoryAttrib forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETDIRECTORY_PROPERTY_ZERO;
        case 1: return Pb_MEETDIRECTORY_PROPERTY_NAME;
        case 2: return Pb_MEETDIRECTORY_PROPERTY_SIZE;
        case 3: return Pb_MEETDIRECTORY_PROPERTY_PARENT;
        case 4: return Pb_MEETDIRECTORY_PROPERTY_POS;
        case 5: return Pb_MEETDIRECTORY_PROPERTY_MAXDIRID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetDirectoryAttrib>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetDirectoryAttrib> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetDirectoryAttrib>() {
            public Pb_MeetDirectoryAttrib findValueByNumber(int number) {
              return Pb_MeetDirectoryAttrib.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetDirectoryAttrib(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetDirectoryAttrib)
  }

  /**
   * <pre>
   *文件attrib 会议系统上传文件属性
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFileAttrib}
   */
  public enum Pb_MeetFileAttrib
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETFILE_ATTRIB_ZERO = 0;</code>
     */
    Pb_MEETFILE_ATTRIB_ZERO(0),
    /**
     * <pre>
     *紧急文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_IMPORTANTFILE = 1;</code>
     */
    Pb_MEETFILE_ATTRIB_IMPORTANTFILE(1),
    /**
     * <pre>
     *背景文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_BACKGROUND = 65536;</code>
     */
    Pb_MEETFILE_ATTRIB_BACKGROUND(65536),
    /**
     * <pre>
     *桌牌背景文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_TABLECARD = 131072;</code>
     */
    Pb_MEETFILE_ATTRIB_TABLECARD(131072),
    /**
     * <pre>
     *设备升级用的文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_DEVICEUPDATE = 262144;</code>
     */
    Pb_MEETFILE_ATTRIB_DEVICEUPDATE(262144),
    /**
     * <pre>
     *会议发布
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_PUBLISH = 524288;</code>
     */
    Pb_MEETFILE_ATTRIB_PUBLISH(524288),
    /**
     * <pre>
     *会议欢迎界面
     * </pre>
     *
     * <code>Pb_MEET_FILEATTRIB_WELCOMEPAGE = 1048576;</code>
     */
    Pb_MEET_FILEATTRIB_WELCOMEPAGE(1048576),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETFILE_ATTRIB_ZERO = 0;</code>
     */
    public static final int Pb_MEETFILE_ATTRIB_ZERO_VALUE = 0;
    /**
     * <pre>
     *紧急文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_IMPORTANTFILE = 1;</code>
     */
    public static final int Pb_MEETFILE_ATTRIB_IMPORTANTFILE_VALUE = 1;
    /**
     * <pre>
     *背景文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_BACKGROUND = 65536;</code>
     */
    public static final int Pb_MEETFILE_ATTRIB_BACKGROUND_VALUE = 65536;
    /**
     * <pre>
     *桌牌背景文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_TABLECARD = 131072;</code>
     */
    public static final int Pb_MEETFILE_ATTRIB_TABLECARD_VALUE = 131072;
    /**
     * <pre>
     *设备升级用的文件
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_DEVICEUPDATE = 262144;</code>
     */
    public static final int Pb_MEETFILE_ATTRIB_DEVICEUPDATE_VALUE = 262144;
    /**
     * <pre>
     *会议发布
     * </pre>
     *
     * <code>Pb_MEETFILE_ATTRIB_PUBLISH = 524288;</code>
     */
    public static final int Pb_MEETFILE_ATTRIB_PUBLISH_VALUE = 524288;
    /**
     * <pre>
     *会议欢迎界面
     * </pre>
     *
     * <code>Pb_MEET_FILEATTRIB_WELCOMEPAGE = 1048576;</code>
     */
    public static final int Pb_MEET_FILEATTRIB_WELCOMEPAGE_VALUE = 1048576;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFileAttrib valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFileAttrib forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETFILE_ATTRIB_ZERO;
        case 1: return Pb_MEETFILE_ATTRIB_IMPORTANTFILE;
        case 65536: return Pb_MEETFILE_ATTRIB_BACKGROUND;
        case 131072: return Pb_MEETFILE_ATTRIB_TABLECARD;
        case 262144: return Pb_MEETFILE_ATTRIB_DEVICEUPDATE;
        case 524288: return Pb_MEETFILE_ATTRIB_PUBLISH;
        case 1048576: return Pb_MEET_FILEATTRIB_WELCOMEPAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFileAttrib>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFileAttrib> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFileAttrib>() {
            public Pb_MeetFileAttrib findValueByNumber(int number) {
              return Pb_MeetFileAttrib.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFileAttrib(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFileAttrib)
  }

  /**
   * <pre>
   *查询指定文件的某项属性
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFilePropertyID}
   */
  public enum Pb_MeetFilePropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETFILE_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETFILE_PROPERTY_ZERO(0),
    /**
     * <pre>
     *名称 query(text)
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_NAME = 1;</code>
     */
    Pb_MEETFILE_PROPERTY_NAME(1),
    /**
     * <pre>
     *大小 query(fixed64) 字节
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_SIZE = 2;</code>
     */
    Pb_MEETFILE_PROPERTY_SIZE(2),
    /**
     * <pre>
     *时长 query(fixed32) 毫秒
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_TIME = 3;</code>
     */
    Pb_MEETFILE_PROPERTY_TIME(3),
    /**
     * <pre>
     *文件attrib query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_ATTRIB = 4;</code>
     */
    Pb_MEETFILE_PROPERTY_ATTRIB(4),
    /**
     * <pre>
     *文件是否可用 query(fixed32) 0:不存在 1:存在
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_AVAILABLE = 5;</code>
     */
    Pb_MEETFILE_PROPERTY_AVAILABLE(5),
    /**
     * <pre>
     *文件对应的md5值 query(text：32个字节)
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_FILEMD5 = 6;</code>
     */
    Pb_MEETFILE_PROPERTY_FILEMD5(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETFILE_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETFILE_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *名称 query(text)
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_NAME = 1;</code>
     */
    public static final int Pb_MEETFILE_PROPERTY_NAME_VALUE = 1;
    /**
     * <pre>
     *大小 query(fixed64) 字节
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_SIZE = 2;</code>
     */
    public static final int Pb_MEETFILE_PROPERTY_SIZE_VALUE = 2;
    /**
     * <pre>
     *时长 query(fixed32) 毫秒
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_TIME = 3;</code>
     */
    public static final int Pb_MEETFILE_PROPERTY_TIME_VALUE = 3;
    /**
     * <pre>
     *文件attrib query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_ATTRIB = 4;</code>
     */
    public static final int Pb_MEETFILE_PROPERTY_ATTRIB_VALUE = 4;
    /**
     * <pre>
     *文件是否可用 query(fixed32) 0:不存在 1:存在
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_AVAILABLE = 5;</code>
     */
    public static final int Pb_MEETFILE_PROPERTY_AVAILABLE_VALUE = 5;
    /**
     * <pre>
     *文件对应的md5值 query(text：32个字节)
     * </pre>
     *
     * <code>Pb_MEETFILE_PROPERTY_FILEMD5 = 6;</code>
     */
    public static final int Pb_MEETFILE_PROPERTY_FILEMD5_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFilePropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFilePropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETFILE_PROPERTY_ZERO;
        case 1: return Pb_MEETFILE_PROPERTY_NAME;
        case 2: return Pb_MEETFILE_PROPERTY_SIZE;
        case 3: return Pb_MEETFILE_PROPERTY_TIME;
        case 4: return Pb_MEETFILE_PROPERTY_ATTRIB;
        case 5: return Pb_MEETFILE_PROPERTY_AVAILABLE;
        case 6: return Pb_MEETFILE_PROPERTY_FILEMD5;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFilePropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFilePropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFilePropertyID>() {
            public Pb_MeetFilePropertyID findValueByNumber(int number) {
              return Pb_MeetFilePropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFilePropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFilePropertyID)
  }

  /**
   * <pre>
   *目录文件的查询标志
   *queryflag
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFileQueryFlag}
   */
  public enum Pb_MeetFileQueryFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_ZERO = 0;</code>
     */
    Pb_MEET_FILETYPE_QUERYFLAG_ZERO(0),
    /**
     * <pre>
     *上传者有效
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_UPLOADID = 1;</code>
     */
    Pb_MEET_FILETYPE_QUERYFLAG_UPLOADID(1),
    /**
     * <pre>
     *文件类型有效
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_FILETYPE = 2;</code>
     */
    Pb_MEET_FILETYPE_QUERYFLAG_FILETYPE(2),
    /**
     * <pre>
     *文件属性有效
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_ATTRIB = 4;</code>
     */
    Pb_MEET_FILETYPE_QUERYFLAG_ATTRIB(4),
    /**
     * <pre>
     *attrib为MEETFILE_ATTRIB_IMPORTANTFILE的文件会被放在前面返回
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_IMPORTANTFRONT = 8;</code>
     */
    Pb_MEET_FILETYPE_QUERYFLAG_IMPORTANTFRONT(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_FILETYPE_QUERYFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *上传者有效
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_UPLOADID = 1;</code>
     */
    public static final int Pb_MEET_FILETYPE_QUERYFLAG_UPLOADID_VALUE = 1;
    /**
     * <pre>
     *文件类型有效
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_FILETYPE = 2;</code>
     */
    public static final int Pb_MEET_FILETYPE_QUERYFLAG_FILETYPE_VALUE = 2;
    /**
     * <pre>
     *文件属性有效
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_ATTRIB = 4;</code>
     */
    public static final int Pb_MEET_FILETYPE_QUERYFLAG_ATTRIB_VALUE = 4;
    /**
     * <pre>
     *attrib为MEETFILE_ATTRIB_IMPORTANTFILE的文件会被放在前面返回
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_QUERYFLAG_IMPORTANTFRONT = 8;</code>
     */
    public static final int Pb_MEET_FILETYPE_QUERYFLAG_IMPORTANTFRONT_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFileQueryFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFileQueryFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_FILETYPE_QUERYFLAG_ZERO;
        case 1: return Pb_MEET_FILETYPE_QUERYFLAG_UPLOADID;
        case 2: return Pb_MEET_FILETYPE_QUERYFLAG_FILETYPE;
        case 4: return Pb_MEET_FILETYPE_QUERYFLAG_ATTRIB;
        case 8: return Pb_MEET_FILETYPE_QUERYFLAG_IMPORTANTFRONT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFileQueryFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFileQueryFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFileQueryFlag>() {
            public Pb_MeetFileQueryFlag findValueByNumber(int number) {
              return Pb_MeetFileQueryFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFileQueryFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFileQueryFlag)
  }

  /**
   * <pre>
   *文件类型
   *filetype
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFileType}
   */
  public enum Pb_MeetFileType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_FILETYPE_ZERO = 0;</code>
     */
    Pb_MEET_FILETYPE_ZERO(0),
    /**
     * <pre>
     *音频
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_AUDIO = 1;</code>
     */
    Pb_MEET_FILETYPE_AUDIO(1),
    /**
     * <pre>
     *视频
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_VIDEO = 2;</code>
     */
    Pb_MEET_FILETYPE_VIDEO(2),
    /**
     * <pre>
     *图片
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_PICTURE = 4;</code>
     */
    Pb_MEET_FILETYPE_PICTURE(4),
    /**
     * <pre>
     *文档
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_DOCUMENT = 8;</code>
     */
    Pb_MEET_FILETYPE_DOCUMENT(8),
    /**
     * <pre>
     *其它
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_OTHER = 16;</code>
     */
    Pb_MEET_FILETYPE_OTHER(16),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_FILETYPE_ZERO = 0;</code>
     */
    public static final int Pb_MEET_FILETYPE_ZERO_VALUE = 0;
    /**
     * <pre>
     *音频
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_AUDIO = 1;</code>
     */
    public static final int Pb_MEET_FILETYPE_AUDIO_VALUE = 1;
    /**
     * <pre>
     *视频
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_VIDEO = 2;</code>
     */
    public static final int Pb_MEET_FILETYPE_VIDEO_VALUE = 2;
    /**
     * <pre>
     *图片
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_PICTURE = 4;</code>
     */
    public static final int Pb_MEET_FILETYPE_PICTURE_VALUE = 4;
    /**
     * <pre>
     *文档
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_DOCUMENT = 8;</code>
     */
    public static final int Pb_MEET_FILETYPE_DOCUMENT_VALUE = 8;
    /**
     * <pre>
     *其它
     * </pre>
     *
     * <code>Pb_MEET_FILETYPE_OTHER = 16;</code>
     */
    public static final int Pb_MEET_FILETYPE_OTHER_VALUE = 16;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFileType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFileType forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_FILETYPE_ZERO;
        case 1: return Pb_MEET_FILETYPE_AUDIO;
        case 2: return Pb_MEET_FILETYPE_VIDEO;
        case 4: return Pb_MEET_FILETYPE_PICTURE;
        case 8: return Pb_MEET_FILETYPE_DOCUMENT;
        case 16: return Pb_MEET_FILETYPE_OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFileType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFileType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFileType>() {
            public Pb_MeetFileType findValueByNumber(int number) {
              return Pb_MeetFileType.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFileType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFileType)
  }

  /**
   * <pre>
   *双屏显示类别
   *type
   * </pre>
   *
   * Protobuf enum {@code Pb_TableCardType}
   */
  public enum Pb_TableCardType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_conf_zero = 0;</code>
     */
    Pb_conf_zero(0),
    /**
     * <pre>
     *会议名称
     * </pre>
     *
     * <code>Pb_conf_mtgname = 1;</code>
     */
    Pb_conf_mtgname(1),
    /**
     * <pre>
     *参会人员名称
     * </pre>
     *
     * <code>Pb_conf_memname = 2;</code>
     */
    Pb_conf_memname(2),
    /**
     * <pre>
     *参会人员职业
     * </pre>
     *
     * <code>Pb_conf_job = 3;</code>
     */
    Pb_conf_job(3),
    /**
     * <pre>
     *参会人员单位
     * </pre>
     *
     * <code>Pb_conf_company = 4;</code>
     */
    Pb_conf_company(4),
    /**
     * <pre>
     *座位名称
     * </pre>
     *
     * <code>Pb_conf_position = 5;</code>
     */
    Pb_conf_position(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_conf_zero = 0;</code>
     */
    public static final int Pb_conf_zero_VALUE = 0;
    /**
     * <pre>
     *会议名称
     * </pre>
     *
     * <code>Pb_conf_mtgname = 1;</code>
     */
    public static final int Pb_conf_mtgname_VALUE = 1;
    /**
     * <pre>
     *参会人员名称
     * </pre>
     *
     * <code>Pb_conf_memname = 2;</code>
     */
    public static final int Pb_conf_memname_VALUE = 2;
    /**
     * <pre>
     *参会人员职业
     * </pre>
     *
     * <code>Pb_conf_job = 3;</code>
     */
    public static final int Pb_conf_job_VALUE = 3;
    /**
     * <pre>
     *参会人员单位
     * </pre>
     *
     * <code>Pb_conf_company = 4;</code>
     */
    public static final int Pb_conf_company_VALUE = 4;
    /**
     * <pre>
     *座位名称
     * </pre>
     *
     * <code>Pb_conf_position = 5;</code>
     */
    public static final int Pb_conf_position_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_TableCardType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_TableCardType forNumber(int value) {
      switch (value) {
        case 0: return Pb_conf_zero;
        case 1: return Pb_conf_mtgname;
        case 2: return Pb_conf_memname;
        case 3: return Pb_conf_job;
        case 4: return Pb_conf_company;
        case 5: return Pb_conf_position;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_TableCardType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_TableCardType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_TableCardType>() {
            public Pb_TableCardType findValueByNumber(int number) {
              return Pb_TableCardType.forNumber(number);
            }
          };

    private final int value;

    private Pb_TableCardType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_TableCardType)
  }

  /**
   * <pre>
   *双屏显示标志
   *flag
   * </pre>
   *
   * Protobuf enum {@code Pb_TableCardFlag}
   */
  public enum Pb_TableCardFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_TABLECARDFLAG_ZERO = 0;</code>
     */
    Pb_MEET_TABLECARDFLAG_ZERO(0),
    /**
     * <pre>
     *该位用于表示该项是否可见
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_SHOW = 1;</code>
     */
    Pb_MEET_TABLECARDFLAG_SHOW(1),
    /**
     * <pre>
     *加粗
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_BOLD = 2;</code>
     */
    Pb_MEET_TABLECARDFLAG_BOLD(2),
    /**
     * <pre>
     *倾斜
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_LEAN = 4;</code>
     */
    Pb_MEET_TABLECARDFLAG_LEAN(4),
    /**
     * <pre>
     *下划线
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_UNDERLINE = 8;</code>
     */
    Pb_MEET_TABLECARDFLAG_UNDERLINE(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_TABLECARDFLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_TABLECARDFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *该位用于表示该项是否可见
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_SHOW = 1;</code>
     */
    public static final int Pb_MEET_TABLECARDFLAG_SHOW_VALUE = 1;
    /**
     * <pre>
     *加粗
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_BOLD = 2;</code>
     */
    public static final int Pb_MEET_TABLECARDFLAG_BOLD_VALUE = 2;
    /**
     * <pre>
     *倾斜
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_LEAN = 4;</code>
     */
    public static final int Pb_MEET_TABLECARDFLAG_LEAN_VALUE = 4;
    /**
     * <pre>
     *下划线
     * </pre>
     *
     * <code>Pb_MEET_TABLECARDFLAG_UNDERLINE = 8;</code>
     */
    public static final int Pb_MEET_TABLECARDFLAG_UNDERLINE_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_TableCardFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_TableCardFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_TABLECARDFLAG_ZERO;
        case 1: return Pb_MEET_TABLECARDFLAG_SHOW;
        case 2: return Pb_MEET_TABLECARDFLAG_BOLD;
        case 4: return Pb_MEET_TABLECARDFLAG_LEAN;
        case 8: return Pb_MEET_TABLECARDFLAG_UNDERLINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_TableCardFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_TableCardFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_TableCardFlag>() {
            public Pb_TableCardFlag findValueByNumber(int number) {
              return Pb_TableCardFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_TableCardFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_TableCardFlag)
  }

  /**
   * <pre>
   *查询会议排位属性信息
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetSeatPropertyID}
   */
  public enum Pb_MeetSeatPropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETSEAT_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETSEAT_PROPERTY_ZERO(0),
    /**
     * <pre>
     *按人员ID返回设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_SEATID = 1;</code>
     */
    Pb_MEETSEAT_PROPERTY_SEATID(1),
    /**
     * <pre>
     *按设备ID返回人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_MEMBERID = 2;</code>
     */
    Pb_MEETSEAT_PROPERTY_MEMBERID(2),
    /**
     * <pre>
     *按人员ID返回人员role query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ROLEBYMEMBERID = 3;</code>
     */
    Pb_MEETSEAT_PROPERTY_ROLEBYMEMBERID(3),
    /**
     * <pre>
     *按人员ID返回人员role query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ROLEBYDEVICEID = 4;</code>
     */
    Pb_MEETSEAT_PROPERTY_ROLEBYDEVICEID(4),
    /**
     * <pre>
     *按人员ID判断当前人员是不是主持人 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYMEMBERID = 5;</code>
     */
    Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYMEMBERID(5),
    /**
     * <pre>
     *按设备ID判断当前人员是不是主持人 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYDEVICEID = 6;</code>
     */
    Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYDEVICEID(6),
    /**
     * <pre>
     *返回等于role的人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_MEMBERIDBYROLE = 7;</code>
     */
    Pb_MEETSEAT_PROPERTY_MEMBERIDBYROLE(7),
    /**
     * <pre>
     *返回等于role的设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_DEVICEIDBYROLE = 8;</code>
     */
    Pb_MEETSEAT_PROPERTY_DEVICEIDBYROLE(8),
    /**
     * <pre>
     *返回当前会议主持人的人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_COMPEEMEMID = 9;</code>
     */
    Pb_MEETSEAT_PROPERTY_COMPEEMEMID(9),
    /**
     * <pre>
     *返回当前会议主持人的设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_COMPEEDEVID = 10;</code>
     */
    Pb_MEETSEAT_PROPERTY_COMPEEDEVID(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETSEAT_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *按人员ID返回设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_SEATID = 1;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_SEATID_VALUE = 1;
    /**
     * <pre>
     *按设备ID返回人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_MEMBERID = 2;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_MEMBERID_VALUE = 2;
    /**
     * <pre>
     *按人员ID返回人员role query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ROLEBYMEMBERID = 3;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_ROLEBYMEMBERID_VALUE = 3;
    /**
     * <pre>
     *按人员ID返回人员role query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ROLEBYDEVICEID = 4;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_ROLEBYDEVICEID_VALUE = 4;
    /**
     * <pre>
     *按人员ID判断当前人员是不是主持人 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYMEMBERID = 5;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYMEMBERID_VALUE = 5;
    /**
     * <pre>
     *按设备ID判断当前人员是不是主持人 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYDEVICEID = 6;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYDEVICEID_VALUE = 6;
    /**
     * <pre>
     *返回等于role的人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_MEMBERIDBYROLE = 7;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_MEMBERIDBYROLE_VALUE = 7;
    /**
     * <pre>
     *返回等于role的设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_DEVICEIDBYROLE = 8;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_DEVICEIDBYROLE_VALUE = 8;
    /**
     * <pre>
     *返回当前会议主持人的人员ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_COMPEEMEMID = 9;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_COMPEEMEMID_VALUE = 9;
    /**
     * <pre>
     *返回当前会议主持人的设备ID query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETSEAT_PROPERTY_COMPEEDEVID = 10;</code>
     */
    public static final int Pb_MEETSEAT_PROPERTY_COMPEEDEVID_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetSeatPropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetSeatPropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETSEAT_PROPERTY_ZERO;
        case 1: return Pb_MEETSEAT_PROPERTY_SEATID;
        case 2: return Pb_MEETSEAT_PROPERTY_MEMBERID;
        case 3: return Pb_MEETSEAT_PROPERTY_ROLEBYMEMBERID;
        case 4: return Pb_MEETSEAT_PROPERTY_ROLEBYDEVICEID;
        case 5: return Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYMEMBERID;
        case 6: return Pb_MEETSEAT_PROPERTY_ISCOMPEREEBYDEVICEID;
        case 7: return Pb_MEETSEAT_PROPERTY_MEMBERIDBYROLE;
        case 8: return Pb_MEETSEAT_PROPERTY_DEVICEIDBYROLE;
        case 9: return Pb_MEETSEAT_PROPERTY_COMPEEMEMID;
        case 10: return Pb_MEETSEAT_PROPERTY_COMPEEDEVID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetSeatPropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetSeatPropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetSeatPropertyID>() {
            public Pb_MeetSeatPropertyID findValueByNumber(int number) {
              return Pb_MeetSeatPropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetSeatPropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetSeatPropertyID)
  }

  /**
   * <pre>
   *会议交流信息
   *type
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetIMMSG_TYPE}
   */
  public enum Pb_MeetIMMSG_TYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *文本消息
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Message = 0;</code>
     */
    Pb_MEETIM_CHAT_Message(0),
    /**
     * <pre>
     *多媒体链接
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Link = 1;</code>
     */
    Pb_MEETIM_CHAT_Link(1),
    /**
     * <pre>
     *水
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Water = 2;</code>
     */
    Pb_MEETIM_CHAT_Water(2),
    /**
     * <pre>
     *茶
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Tea = 3;</code>
     */
    Pb_MEETIM_CHAT_Tea(3),
    /**
     * <pre>
     *咖啡
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Coffee = 4;</code>
     */
    Pb_MEETIM_CHAT_Coffee(4),
    /**
     * <pre>
     *笔
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Pen = 5;</code>
     */
    Pb_MEETIM_CHAT_Pen(5),
    /**
     * <pre>
     *纸
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Paper = 6;</code>
     */
    Pb_MEETIM_CHAT_Paper(6),
    /**
     * <pre>
     *技术员
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Technical = 7;</code>
     */
    Pb_MEETIM_CHAT_Technical(7),
    /**
     * <pre>
     *服务员
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Waiter = 8;</code>
     */
    Pb_MEETIM_CHAT_Waiter(8),
    /**
     * <pre>
     *其他服务
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Other = 9;</code>
     */
    Pb_MEETIM_CHAT_Other(9),
    /**
     * <pre>
     *申请主持
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Emecc = 10;</code>
     */
    Pb_MEETIM_CHAT_Emecc(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *文本消息
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Message = 0;</code>
     */
    public static final int Pb_MEETIM_CHAT_Message_VALUE = 0;
    /**
     * <pre>
     *多媒体链接
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Link = 1;</code>
     */
    public static final int Pb_MEETIM_CHAT_Link_VALUE = 1;
    /**
     * <pre>
     *水
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Water = 2;</code>
     */
    public static final int Pb_MEETIM_CHAT_Water_VALUE = 2;
    /**
     * <pre>
     *茶
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Tea = 3;</code>
     */
    public static final int Pb_MEETIM_CHAT_Tea_VALUE = 3;
    /**
     * <pre>
     *咖啡
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Coffee = 4;</code>
     */
    public static final int Pb_MEETIM_CHAT_Coffee_VALUE = 4;
    /**
     * <pre>
     *笔
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Pen = 5;</code>
     */
    public static final int Pb_MEETIM_CHAT_Pen_VALUE = 5;
    /**
     * <pre>
     *纸
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Paper = 6;</code>
     */
    public static final int Pb_MEETIM_CHAT_Paper_VALUE = 6;
    /**
     * <pre>
     *技术员
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Technical = 7;</code>
     */
    public static final int Pb_MEETIM_CHAT_Technical_VALUE = 7;
    /**
     * <pre>
     *服务员
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Waiter = 8;</code>
     */
    public static final int Pb_MEETIM_CHAT_Waiter_VALUE = 8;
    /**
     * <pre>
     *其他服务
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Other = 9;</code>
     */
    public static final int Pb_MEETIM_CHAT_Other_VALUE = 9;
    /**
     * <pre>
     *申请主持
     * </pre>
     *
     * <code>Pb_MEETIM_CHAT_Emecc = 10;</code>
     */
    public static final int Pb_MEETIM_CHAT_Emecc_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetIMMSG_TYPE valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetIMMSG_TYPE forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETIM_CHAT_Message;
        case 1: return Pb_MEETIM_CHAT_Link;
        case 2: return Pb_MEETIM_CHAT_Water;
        case 3: return Pb_MEETIM_CHAT_Tea;
        case 4: return Pb_MEETIM_CHAT_Coffee;
        case 5: return Pb_MEETIM_CHAT_Pen;
        case 6: return Pb_MEETIM_CHAT_Paper;
        case 7: return Pb_MEETIM_CHAT_Technical;
        case 8: return Pb_MEETIM_CHAT_Waiter;
        case 9: return Pb_MEETIM_CHAT_Other;
        case 10: return Pb_MEETIM_CHAT_Emecc;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetIMMSG_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetIMMSG_TYPE> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetIMMSG_TYPE>() {
            public Pb_MeetIMMSG_TYPE findValueByNumber(int number) {
              return Pb_MeetIMMSG_TYPE.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetIMMSG_TYPE(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetIMMSG_TYPE)
  }

  /**
   * <pre>
   *queryflag 需要按那个查询那位置为1
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetIMMSG_QueryFlag}
   */
  public enum Pb_MeetIMMSG_QueryFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_COMPLEXQUERY_ZERO = 0;</code>
     */
    Pb_COMPLEXQUERY_ZERO(0),
    /**
     * <code>Pb_COMPLEXQUERY_MSGTYPE = 1;</code>
     */
    Pb_COMPLEXQUERY_MSGTYPE(1),
    /**
     * <code>Pb_COMPLEXQUERY_ROLE = 2;</code>
     */
    Pb_COMPLEXQUERY_ROLE(2),
    /**
     * <code>Pb_COMPLEXQUERY_MEMBERID = 4;</code>
     */
    Pb_COMPLEXQUERY_MEMBERID(4),
    /**
     * <code>Pb_COMPLEXQUERY_UTCTIME = 8;</code>
     */
    Pb_COMPLEXQUERY_UTCTIME(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_COMPLEXQUERY_ZERO = 0;</code>
     */
    public static final int Pb_COMPLEXQUERY_ZERO_VALUE = 0;
    /**
     * <code>Pb_COMPLEXQUERY_MSGTYPE = 1;</code>
     */
    public static final int Pb_COMPLEXQUERY_MSGTYPE_VALUE = 1;
    /**
     * <code>Pb_COMPLEXQUERY_ROLE = 2;</code>
     */
    public static final int Pb_COMPLEXQUERY_ROLE_VALUE = 2;
    /**
     * <code>Pb_COMPLEXQUERY_MEMBERID = 4;</code>
     */
    public static final int Pb_COMPLEXQUERY_MEMBERID_VALUE = 4;
    /**
     * <code>Pb_COMPLEXQUERY_UTCTIME = 8;</code>
     */
    public static final int Pb_COMPLEXQUERY_UTCTIME_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetIMMSG_QueryFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetIMMSG_QueryFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_COMPLEXQUERY_ZERO;
        case 1: return Pb_COMPLEXQUERY_MSGTYPE;
        case 2: return Pb_COMPLEXQUERY_ROLE;
        case 4: return Pb_COMPLEXQUERY_MEMBERID;
        case 8: return Pb_COMPLEXQUERY_UTCTIME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetIMMSG_QueryFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetIMMSG_QueryFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetIMMSG_QueryFlag>() {
            public Pb_MeetIMMSG_QueryFlag findValueByNumber(int number) {
              return Pb_MeetIMMSG_QueryFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetIMMSG_QueryFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetIMMSG_QueryFlag)
  }

  /**
   * <pre>
   *会议发起投票信息
   *voteflag
   * </pre>
   *
   * Protobuf enum {@code Pb_VoteStartFlag}
   */
  public enum Pb_VoteStartFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *未使用
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_ZERO = 0;</code>
     */
    Pb_MEET_VOTING_FLAG_ZERO(0),
    /**
     * <pre>
     *不在投影机上显示投票结果
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_NOPOST = 1;</code>
     */
    Pb_MEET_VOTING_FLAG_NOPOST(1),
    /**
     * <pre>
     *投票选项保密投票模式
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_SECRETARY = 2;</code>
     */
    Pb_MEET_VOTING_FLAG_SECRETARY(2),
    /**
     * <pre>
     *自动超时结束 --由发起方计时发送结束
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_AUTOEXIT = 4;</code>
     */
    Pb_MEET_VOTING_FLAG_AUTOEXIT(4),
    /**
     * <pre>
     *重投 清空之前的记录
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_REVOTE = 8;</code>
     */
    Pb_MEET_VOTING_FLAG_REVOTE(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *未使用
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_VOTING_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *不在投影机上显示投票结果
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_NOPOST = 1;</code>
     */
    public static final int Pb_MEET_VOTING_FLAG_NOPOST_VALUE = 1;
    /**
     * <pre>
     *投票选项保密投票模式
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_SECRETARY = 2;</code>
     */
    public static final int Pb_MEET_VOTING_FLAG_SECRETARY_VALUE = 2;
    /**
     * <pre>
     *自动超时结束 --由发起方计时发送结束
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_AUTOEXIT = 4;</code>
     */
    public static final int Pb_MEET_VOTING_FLAG_AUTOEXIT_VALUE = 4;
    /**
     * <pre>
     *重投 清空之前的记录
     * </pre>
     *
     * <code>Pb_MEET_VOTING_FLAG_REVOTE = 8;</code>
     */
    public static final int Pb_MEET_VOTING_FLAG_REVOTE_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_VoteStartFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_VoteStartFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_VOTING_FLAG_ZERO;
        case 1: return Pb_MEET_VOTING_FLAG_NOPOST;
        case 2: return Pb_MEET_VOTING_FLAG_SECRETARY;
        case 4: return Pb_MEET_VOTING_FLAG_AUTOEXIT;
        case 8: return Pb_MEET_VOTING_FLAG_REVOTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_VoteStartFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_VoteStartFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_VoteStartFlag>() {
            public Pb_VoteStartFlag findValueByNumber(int number) {
              return Pb_VoteStartFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_VoteStartFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_VoteStartFlag)
  }

  /**
   * <pre>
   *投票状态 votestate 
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetVoteStatus}
   */
  public enum Pb_MeetVoteStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *未发起的投票
     * </pre>
     *
     * <code>Pb_vote_notvote = 0;</code>
     */
    Pb_vote_notvote(0),
    /**
     * <pre>
     *正在进行的投票
     * </pre>
     *
     * <code>Pb_vote_voteing = 1;</code>
     */
    Pb_vote_voteing(1),
    /**
     * <pre>
     *已经结束的投票
     * </pre>
     *
     * <code>Pb_vote_endvote = 2;</code>
     */
    Pb_vote_endvote(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *未发起的投票
     * </pre>
     *
     * <code>Pb_vote_notvote = 0;</code>
     */
    public static final int Pb_vote_notvote_VALUE = 0;
    /**
     * <pre>
     *正在进行的投票
     * </pre>
     *
     * <code>Pb_vote_voteing = 1;</code>
     */
    public static final int Pb_vote_voteing_VALUE = 1;
    /**
     * <pre>
     *已经结束的投票
     * </pre>
     *
     * <code>Pb_vote_endvote = 2;</code>
     */
    public static final int Pb_vote_endvote_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetVoteStatus valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetVoteStatus forNumber(int value) {
      switch (value) {
        case 0: return Pb_vote_notvote;
        case 1: return Pb_vote_voteing;
        case 2: return Pb_vote_endvote;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVoteStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetVoteStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVoteStatus>() {
            public Pb_MeetVoteStatus findValueByNumber(int number) {
              return Pb_MeetVoteStatus.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetVoteStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetVoteStatus)
  }

  /**
   * <pre>
   *maintype //投票 选举 调查问卷
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetVoteType}
   */
  public enum Pb_MeetVoteType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *投票
     * </pre>
     *
     * <code>Pb_VOTE_MAINTYPE_vote = 0;</code>
     */
    Pb_VOTE_MAINTYPE_vote(0),
    /**
     * <pre>
     *选举
     * </pre>
     *
     * <code>Pb_VOTE_MAINTYPE_election = 1;</code>
     */
    Pb_VOTE_MAINTYPE_election(1),
    /**
     * <pre>
     *问卷调查
     * </pre>
     *
     * <code>Pb_VOTE_MAINTYPE_questionnaire = 2;</code>
     */
    Pb_VOTE_MAINTYPE_questionnaire(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *投票
     * </pre>
     *
     * <code>Pb_VOTE_MAINTYPE_vote = 0;</code>
     */
    public static final int Pb_VOTE_MAINTYPE_vote_VALUE = 0;
    /**
     * <pre>
     *选举
     * </pre>
     *
     * <code>Pb_VOTE_MAINTYPE_election = 1;</code>
     */
    public static final int Pb_VOTE_MAINTYPE_election_VALUE = 1;
    /**
     * <pre>
     *问卷调查
     * </pre>
     *
     * <code>Pb_VOTE_MAINTYPE_questionnaire = 2;</code>
     */
    public static final int Pb_VOTE_MAINTYPE_questionnaire_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetVoteType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetVoteType forNumber(int value) {
      switch (value) {
        case 0: return Pb_VOTE_MAINTYPE_vote;
        case 1: return Pb_VOTE_MAINTYPE_election;
        case 2: return Pb_VOTE_MAINTYPE_questionnaire;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVoteType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetVoteType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVoteType>() {
            public Pb_MeetVoteType findValueByNumber(int number) {
              return Pb_MeetVoteType.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetVoteType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetVoteType)
  }

  /**
   * <pre>
   *mode
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetVoteMode}
   */
  public enum Pb_MeetVoteMode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *匿名投票
     * </pre>
     *
     * <code>Pb_VOTEMODE_agonymous = 0;</code>
     */
    Pb_VOTEMODE_agonymous(0),
    /**
     * <pre>
     *记名投票
     * </pre>
     *
     * <code>Pb_VOTEMODE_signed = 1;</code>
     */
    Pb_VOTEMODE_signed(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *匿名投票
     * </pre>
     *
     * <code>Pb_VOTEMODE_agonymous = 0;</code>
     */
    public static final int Pb_VOTEMODE_agonymous_VALUE = 0;
    /**
     * <pre>
     *记名投票
     * </pre>
     *
     * <code>Pb_VOTEMODE_signed = 1;</code>
     */
    public static final int Pb_VOTEMODE_signed_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetVoteMode valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetVoteMode forNumber(int value) {
      switch (value) {
        case 0: return Pb_VOTEMODE_agonymous;
        case 1: return Pb_VOTEMODE_signed;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVoteMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetVoteMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVoteMode>() {
            public Pb_MeetVoteMode findValueByNumber(int number) {
              return Pb_MeetVoteMode.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetVoteMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetVoteMode)
  }

  /**
   * <pre>
   *type
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetVote_SelType}
   */
  public enum Pb_MeetVote_SelType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *多选
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_MANY = 0;</code>
     */
    Pb_VOTE_TYPE_MANY(0),
    /**
     * <pre>
     *多选
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_SINGLE = 1;</code>
     */
    Pb_VOTE_TYPE_SINGLE(1),
    /**
     * <pre>
     *5选4
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_4_5 = 2;</code>
     */
    Pb_VOTE_TYPE_4_5(2),
    /**
     * <pre>
     *5选2
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_3_5 = 3;</code>
     */
    Pb_VOTE_TYPE_3_5(3),
    /**
     * <pre>
     *5选2
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_2_5 = 4;</code>
     */
    Pb_VOTE_TYPE_2_5(4),
    /**
     * <pre>
     *3选2
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_2_3 = 5;</code>
     */
    Pb_VOTE_TYPE_2_3(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *多选
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_MANY = 0;</code>
     */
    public static final int Pb_VOTE_TYPE_MANY_VALUE = 0;
    /**
     * <pre>
     *多选
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_SINGLE = 1;</code>
     */
    public static final int Pb_VOTE_TYPE_SINGLE_VALUE = 1;
    /**
     * <pre>
     *5选4
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_4_5 = 2;</code>
     */
    public static final int Pb_VOTE_TYPE_4_5_VALUE = 2;
    /**
     * <pre>
     *5选2
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_3_5 = 3;</code>
     */
    public static final int Pb_VOTE_TYPE_3_5_VALUE = 3;
    /**
     * <pre>
     *5选2
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_2_5 = 4;</code>
     */
    public static final int Pb_VOTE_TYPE_2_5_VALUE = 4;
    /**
     * <pre>
     *3选2
     * </pre>
     *
     * <code>Pb_VOTE_TYPE_2_3 = 5;</code>
     */
    public static final int Pb_VOTE_TYPE_2_3_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetVote_SelType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetVote_SelType forNumber(int value) {
      switch (value) {
        case 0: return Pb_VOTE_TYPE_MANY;
        case 1: return Pb_VOTE_TYPE_SINGLE;
        case 2: return Pb_VOTE_TYPE_4_5;
        case 3: return Pb_VOTE_TYPE_3_5;
        case 4: return Pb_VOTE_TYPE_2_5;
        case 5: return Pb_VOTE_TYPE_2_3;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVote_SelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetVote_SelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVote_SelType>() {
            public Pb_MeetVote_SelType findValueByNumber(int number) {
              return Pb_MeetVote_SelType.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetVote_SelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetVote_SelType)
  }

  /**
   * <pre>
   *查询会议投票人属性信息
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetVotePropertyID}
   */
  public enum Pb_MeetVotePropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETVOTE_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETVOTE_PROPERTY_ZERO(0),
    /**
     * <pre>
     *按投票ID&#92;人员ID返回是否已经投票 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_HADSIGNIN = 1;</code>
     */
    Pb_MEETVOTE_PROPERTY_HADSIGNIN(1),
    /**
     * <pre>
     *按投票ID&#92;人员ID返回投票项记录 //0x0001选择了选项一,0x0010选择了选项二 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_SIGNINITEM = 2;</code>
     */
    Pb_MEETVOTE_PROPERTY_SIGNINITEM(2),
    /**
     * <pre>
     *按投票ID&#92;人员ID返回是否已经投票签到 query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_HADCHECKINNUM = 3;</code>
     */
    Pb_MEETVOTE_PROPERTY_HADCHECKINNUM(3),
    /**
     * <pre>
     *按投票ID&#92;返回投票实际签到总人数  query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_CHECKINNUM = 4;</code>
     */
    Pb_MEETVOTE_PROPERTY_CHECKINNUM(4),
    /**
     * <pre>
     *按投票ID&#92;返回投票应到总人数  query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_ATTENDNUM = 5;</code>
     */
    Pb_MEETVOTE_PROPERTY_ATTENDNUM(5),
    /**
     * <pre>
     *按投票ID&#92;返回投票已经投票总人数  query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_VOTEDNUM = 6;</code>
     */
    Pb_MEETVOTE_PROPERTY_VOTEDNUM(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETVOTE_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETVOTE_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *按投票ID&#92;人员ID返回是否已经投票 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_HADSIGNIN = 1;</code>
     */
    public static final int Pb_MEETVOTE_PROPERTY_HADSIGNIN_VALUE = 1;
    /**
     * <pre>
     *按投票ID&#92;人员ID返回投票项记录 //0x0001选择了选项一,0x0010选择了选项二 query(fixed32)
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_SIGNINITEM = 2;</code>
     */
    public static final int Pb_MEETVOTE_PROPERTY_SIGNINITEM_VALUE = 2;
    /**
     * <pre>
     *按投票ID&#92;人员ID返回是否已经投票签到 query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_HADCHECKINNUM = 3;</code>
     */
    public static final int Pb_MEETVOTE_PROPERTY_HADCHECKINNUM_VALUE = 3;
    /**
     * <pre>
     *按投票ID&#92;返回投票实际签到总人数  query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_CHECKINNUM = 4;</code>
     */
    public static final int Pb_MEETVOTE_PROPERTY_CHECKINNUM_VALUE = 4;
    /**
     * <pre>
     *按投票ID&#92;返回投票应到总人数  query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_ATTENDNUM = 5;</code>
     */
    public static final int Pb_MEETVOTE_PROPERTY_ATTENDNUM_VALUE = 5;
    /**
     * <pre>
     *按投票ID&#92;返回投票已经投票总人数  query
     * </pre>
     *
     * <code>Pb_MEETVOTE_PROPERTY_VOTEDNUM = 6;</code>
     */
    public static final int Pb_MEETVOTE_PROPERTY_VOTEDNUM_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetVotePropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetVotePropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETVOTE_PROPERTY_ZERO;
        case 1: return Pb_MEETVOTE_PROPERTY_HADSIGNIN;
        case 2: return Pb_MEETVOTE_PROPERTY_SIGNINITEM;
        case 3: return Pb_MEETVOTE_PROPERTY_HADCHECKINNUM;
        case 4: return Pb_MEETVOTE_PROPERTY_CHECKINNUM;
        case 5: return Pb_MEETVOTE_PROPERTY_ATTENDNUM;
        case 6: return Pb_MEETVOTE_PROPERTY_VOTEDNUM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVotePropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetVotePropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetVotePropertyID>() {
            public Pb_MeetVotePropertyID findValueByNumber(int number) {
              return Pb_MeetVotePropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetVotePropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetVotePropertyID)
  }

  /**
   * <pre>
   *查询会议签到属性信息
   *property id
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetSignPropertyID}
   */
  public enum Pb_MeetSignPropertyID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETTSIGN_PROPERTY_ZERO = 0;</code>
     */
    Pb_MEETTSIGN_PROPERTY_ZERO(0),
    /**
     * <pre>
     *按人员ID返回是否已经签到 query
     * </pre>
     *
     * <code>Pb_MEETTSIGN_PROPERTY_HADSIGNIN = 1;</code>
     */
    Pb_MEETTSIGN_PROPERTY_HADSIGNIN(1),
    /**
     * <pre>
     *按人员ID返回签到类型 query
     * </pre>
     *
     * <code>Pb_MEETTSIGN_PROPERTY_SIGNINTYPE = 2;</code>
     */
    Pb_MEETTSIGN_PROPERTY_SIGNINTYPE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETTSIGN_PROPERTY_ZERO = 0;</code>
     */
    public static final int Pb_MEETTSIGN_PROPERTY_ZERO_VALUE = 0;
    /**
     * <pre>
     *按人员ID返回是否已经签到 query
     * </pre>
     *
     * <code>Pb_MEETTSIGN_PROPERTY_HADSIGNIN = 1;</code>
     */
    public static final int Pb_MEETTSIGN_PROPERTY_HADSIGNIN_VALUE = 1;
    /**
     * <pre>
     *按人员ID返回签到类型 query
     * </pre>
     *
     * <code>Pb_MEETTSIGN_PROPERTY_SIGNINTYPE = 2;</code>
     */
    public static final int Pb_MEETTSIGN_PROPERTY_SIGNINTYPE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetSignPropertyID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetSignPropertyID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETTSIGN_PROPERTY_ZERO;
        case 1: return Pb_MEETTSIGN_PROPERTY_HADSIGNIN;
        case 2: return Pb_MEETTSIGN_PROPERTY_SIGNINTYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetSignPropertyID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetSignPropertyID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetSignPropertyID>() {
            public Pb_MeetSignPropertyID findValueByNumber(int number) {
              return Pb_MeetSignPropertyID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetSignPropertyID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetSignPropertyID)
  }

  /**
   * <pre>
   *operflag
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetPostilOperType}
   */
  public enum Pb_MeetPostilOperType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEETPOTIL_FLAG_ZERO = 0;</code>
     */
    Pb_MEETPOTIL_FLAG_ZERO(0),
    /**
     * <pre>
     *该标志表示需要强制执行批注白板强行打开
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_FORCEOPEN = 1;</code>
     */
    Pb_MEETPOTIL_FLAG_FORCEOPEN(1),
    /**
     * <pre>
     *该标志表示需要强制执行批注白板强行关闭
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_FORCECLOSE = 2;</code>
     */
    Pb_MEETPOTIL_FLAG_FORCECLOSE(2),
    /**
     * <pre>
     *该标志表示有人发起白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_REQUESTOPEN = 3;</code>
     */
    Pb_MEETPOTIL_FLAG_REQUESTOPEN(3),
    /**
     * <pre>
     *该标志表示对方拒绝打开白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_REJECTOPEN = 4;</code>
     */
    Pb_MEETPOTIL_FLAG_REJECTOPEN(4),
    /**
     * <pre>
     *该标志表示有人离开白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_EXIT = 5;</code>
     */
    Pb_MEETPOTIL_FLAG_EXIT(5),
    /**
     * <pre>
     *该标志表示有人进入白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_ENTER = 6;</code>
     */
    Pb_MEETPOTIL_FLAG_ENTER(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEETPOTIL_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEETPOTIL_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *该标志表示需要强制执行批注白板强行打开
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_FORCEOPEN = 1;</code>
     */
    public static final int Pb_MEETPOTIL_FLAG_FORCEOPEN_VALUE = 1;
    /**
     * <pre>
     *该标志表示需要强制执行批注白板强行关闭
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_FORCECLOSE = 2;</code>
     */
    public static final int Pb_MEETPOTIL_FLAG_FORCECLOSE_VALUE = 2;
    /**
     * <pre>
     *该标志表示有人发起白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_REQUESTOPEN = 3;</code>
     */
    public static final int Pb_MEETPOTIL_FLAG_REQUESTOPEN_VALUE = 3;
    /**
     * <pre>
     *该标志表示对方拒绝打开白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_REJECTOPEN = 4;</code>
     */
    public static final int Pb_MEETPOTIL_FLAG_REJECTOPEN_VALUE = 4;
    /**
     * <pre>
     *该标志表示有人离开白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_EXIT = 5;</code>
     */
    public static final int Pb_MEETPOTIL_FLAG_EXIT_VALUE = 5;
    /**
     * <pre>
     *该标志表示有人进入白板
     * </pre>
     *
     * <code>Pb_MEETPOTIL_FLAG_ENTER = 6;</code>
     */
    public static final int Pb_MEETPOTIL_FLAG_ENTER_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetPostilOperType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetPostilOperType forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEETPOTIL_FLAG_ZERO;
        case 1: return Pb_MEETPOTIL_FLAG_FORCEOPEN;
        case 2: return Pb_MEETPOTIL_FLAG_FORCECLOSE;
        case 3: return Pb_MEETPOTIL_FLAG_REQUESTOPEN;
        case 4: return Pb_MEETPOTIL_FLAG_REJECTOPEN;
        case 5: return Pb_MEETPOTIL_FLAG_EXIT;
        case 6: return Pb_MEETPOTIL_FLAG_ENTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPostilOperType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetPostilOperType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPostilOperType>() {
            public Pb_MeetPostilOperType findValueByNumber(int number) {
              return Pb_MeetPostilOperType.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetPostilOperType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetPostilOperType)
  }

  /**
   * <pre>
   *白板操作类型
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetPostilFigureType}
   */
  public enum Pb_MeetPostilFigureType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_WB_FIGURETYPE_ZERO = 0;</code>
     */
    Pb_WB_FIGURETYPE_ZERO(0),
    /**
     * <pre>
     *线条
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_INK = 1;</code>
     */
    Pb_WB_FIGURETYPE_INK(1),
    /**
     * <pre>
     *直线
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_LINE = 2;</code>
     */
    Pb_WB_FIGURETYPE_LINE(2),
    /**
     * <pre>
     *椭圆
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_ELLIPSE = 3;</code>
     */
    Pb_WB_FIGURETYPE_ELLIPSE(3),
    /**
     * <pre>
     *矩形
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_RECTANGLE = 4;</code>
     */
    Pb_WB_FIGURETYPE_RECTANGLE(4),
    /**
     * <pre>
     *文字
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_FREETEXT = 5;</code>
     */
    Pb_WB_FIGURETYPE_FREETEXT(5),
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_PICTURE = 6;</code>
     */
    Pb_WB_FIGURETYPE_PICTURE(6),
    /**
     * <pre>
     *箭头
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_ARROW = 7;</code>
     */
    Pb_WB_FIGURETYPE_ARROW(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_WB_FIGURETYPE_ZERO = 0;</code>
     */
    public static final int Pb_WB_FIGURETYPE_ZERO_VALUE = 0;
    /**
     * <pre>
     *线条
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_INK = 1;</code>
     */
    public static final int Pb_WB_FIGURETYPE_INK_VALUE = 1;
    /**
     * <pre>
     *直线
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_LINE = 2;</code>
     */
    public static final int Pb_WB_FIGURETYPE_LINE_VALUE = 2;
    /**
     * <pre>
     *椭圆
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_ELLIPSE = 3;</code>
     */
    public static final int Pb_WB_FIGURETYPE_ELLIPSE_VALUE = 3;
    /**
     * <pre>
     *矩形
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_RECTANGLE = 4;</code>
     */
    public static final int Pb_WB_FIGURETYPE_RECTANGLE_VALUE = 4;
    /**
     * <pre>
     *文字
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_FREETEXT = 5;</code>
     */
    public static final int Pb_WB_FIGURETYPE_FREETEXT_VALUE = 5;
    /**
     * <pre>
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_PICTURE = 6;</code>
     */
    public static final int Pb_WB_FIGURETYPE_PICTURE_VALUE = 6;
    /**
     * <pre>
     *箭头
     * </pre>
     *
     * <code>Pb_WB_FIGURETYPE_ARROW = 7;</code>
     */
    public static final int Pb_WB_FIGURETYPE_ARROW_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetPostilFigureType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetPostilFigureType forNumber(int value) {
      switch (value) {
        case 0: return Pb_WB_FIGURETYPE_ZERO;
        case 1: return Pb_WB_FIGURETYPE_INK;
        case 2: return Pb_WB_FIGURETYPE_LINE;
        case 3: return Pb_WB_FIGURETYPE_ELLIPSE;
        case 4: return Pb_WB_FIGURETYPE_RECTANGLE;
        case 5: return Pb_WB_FIGURETYPE_FREETEXT;
        case 6: return Pb_WB_FIGURETYPE_PICTURE;
        case 7: return Pb_WB_FIGURETYPE_ARROW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPostilFigureType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetPostilFigureType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPostilFigureType>() {
            public Pb_MeetPostilFigureType findValueByNumber(int number) {
              return Pb_MeetPostilFigureType.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetPostilFigureType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetPostilFigureType)
  }

  /**
   * <pre>
   *font flag
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFontFlag}
   */
  public enum Pb_MeetFontFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_WHITEBOARD_FONT_ZERO = 0;</code>
     */
    Pb_WHITEBOARD_FONT_ZERO(0),
    /**
     * <pre>
     *删除线
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_STRIKEOUT = 1;</code>
     */
    Pb_WHITEBOARD_FONT_STRIKEOUT(1),
    /**
     * <pre>
     *加粗
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_BOLD = 2;</code>
     */
    Pb_WHITEBOARD_FONT_BOLD(2),
    /**
     * <pre>
     *倾斜
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_ITALIC = 4;</code>
     */
    Pb_WHITEBOARD_FONT_ITALIC(4),
    /**
     * <pre>
     *下划线
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_UNDERLINE = 8;</code>
     */
    Pb_WHITEBOARD_FONT_UNDERLINE(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_WHITEBOARD_FONT_ZERO = 0;</code>
     */
    public static final int Pb_WHITEBOARD_FONT_ZERO_VALUE = 0;
    /**
     * <pre>
     *删除线
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_STRIKEOUT = 1;</code>
     */
    public static final int Pb_WHITEBOARD_FONT_STRIKEOUT_VALUE = 1;
    /**
     * <pre>
     *加粗
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_BOLD = 2;</code>
     */
    public static final int Pb_WHITEBOARD_FONT_BOLD_VALUE = 2;
    /**
     * <pre>
     *倾斜
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_ITALIC = 4;</code>
     */
    public static final int Pb_WHITEBOARD_FONT_ITALIC_VALUE = 4;
    /**
     * <pre>
     *下划线
     * </pre>
     *
     * <code>Pb_WHITEBOARD_FONT_UNDERLINE = 8;</code>
     */
    public static final int Pb_WHITEBOARD_FONT_UNDERLINE_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFontFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFontFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_WHITEBOARD_FONT_ZERO;
        case 1: return Pb_WHITEBOARD_FONT_STRIKEOUT;
        case 2: return Pb_WHITEBOARD_FONT_BOLD;
        case 4: return Pb_WHITEBOARD_FONT_ITALIC;
        case 8: return Pb_WHITEBOARD_FONT_UNDERLINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFontFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFontFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFontFlag>() {
            public Pb_MeetFontFlag findValueByNumber(int number) {
              return Pb_MeetFontFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFontFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFontFlag)
  }

  /**
   * <pre>
   *功能标识码
   * </pre>
   *
   * Protobuf enum {@code Pb_Meet_FunctionCode}
   */
  public enum Pb_Meet_FunctionCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *会议议程
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_AGENDA_BULLETIN = 0;</code>
     */
    Pb_MEET_FUNCODE_AGENDA_BULLETIN(0),
    /**
     * <pre>
     *会议资料
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_MATERIAL = 1;</code>
     */
    Pb_MEET_FUNCODE_MATERIAL(1),
    /**
     * <pre>
     *	共享文件
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_SHAREDFILE = 2;</code>
     */
    Pb_MEET_FUNCODE_SHAREDFILE(2),
    /**
     * <pre>
     *批注文件
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_POSTIL = 3;</code>
     */
    Pb_MEET_FUNCODE_POSTIL(3),
    /**
     * <pre>
     *会议交流
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_MESSAGE = 4;</code>
     */
    Pb_MEET_FUNCODE_MESSAGE(4),
    /**
     * <pre>
     *视频直播
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_VIDEOSTREAM = 5;</code>
     */
    Pb_MEET_FUNCODE_VIDEOSTREAM(5),
    /**
     * <pre>
     *白板
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_WHITEBOARD = 6;</code>
     */
    Pb_MEET_FUNCODE_WHITEBOARD(6),
    /**
     * <pre>
     *网页
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_WEBBROWSER = 7;</code>
     */
    Pb_MEET_FUNCODE_WEBBROWSER(7),
    /**
     * <pre>
     *投票
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_VOTERESULT = 8;</code>
     */
    Pb_MEET_FUNCODE_VOTERESULT(8),
    /**
     * <pre>
     *签到
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_SIGNINRESULT = 9;</code>
     */
    Pb_MEET_FUNCODE_SIGNINRESULT(9),
    /**
     * <pre>
     *外部文档
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_DOCUMENT = 10;</code>
     */
    Pb_MEET_FUNCODE_DOCUMENT(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *会议议程
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_AGENDA_BULLETIN = 0;</code>
     */
    public static final int Pb_MEET_FUNCODE_AGENDA_BULLETIN_VALUE = 0;
    /**
     * <pre>
     *会议资料
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_MATERIAL = 1;</code>
     */
    public static final int Pb_MEET_FUNCODE_MATERIAL_VALUE = 1;
    /**
     * <pre>
     *	共享文件
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_SHAREDFILE = 2;</code>
     */
    public static final int Pb_MEET_FUNCODE_SHAREDFILE_VALUE = 2;
    /**
     * <pre>
     *批注文件
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_POSTIL = 3;</code>
     */
    public static final int Pb_MEET_FUNCODE_POSTIL_VALUE = 3;
    /**
     * <pre>
     *会议交流
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_MESSAGE = 4;</code>
     */
    public static final int Pb_MEET_FUNCODE_MESSAGE_VALUE = 4;
    /**
     * <pre>
     *视频直播
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_VIDEOSTREAM = 5;</code>
     */
    public static final int Pb_MEET_FUNCODE_VIDEOSTREAM_VALUE = 5;
    /**
     * <pre>
     *白板
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_WHITEBOARD = 6;</code>
     */
    public static final int Pb_MEET_FUNCODE_WHITEBOARD_VALUE = 6;
    /**
     * <pre>
     *网页
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_WEBBROWSER = 7;</code>
     */
    public static final int Pb_MEET_FUNCODE_WEBBROWSER_VALUE = 7;
    /**
     * <pre>
     *投票
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_VOTERESULT = 8;</code>
     */
    public static final int Pb_MEET_FUNCODE_VOTERESULT_VALUE = 8;
    /**
     * <pre>
     *签到
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_SIGNINRESULT = 9;</code>
     */
    public static final int Pb_MEET_FUNCODE_SIGNINRESULT_VALUE = 9;
    /**
     * <pre>
     *外部文档
     * </pre>
     *
     * <code>Pb_MEET_FUNCODE_DOCUMENT = 10;</code>
     */
    public static final int Pb_MEET_FUNCODE_DOCUMENT_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_Meet_FunctionCode valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_Meet_FunctionCode forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_FUNCODE_AGENDA_BULLETIN;
        case 1: return Pb_MEET_FUNCODE_MATERIAL;
        case 2: return Pb_MEET_FUNCODE_SHAREDFILE;
        case 3: return Pb_MEET_FUNCODE_POSTIL;
        case 4: return Pb_MEET_FUNCODE_MESSAGE;
        case 5: return Pb_MEET_FUNCODE_VIDEOSTREAM;
        case 6: return Pb_MEET_FUNCODE_WHITEBOARD;
        case 7: return Pb_MEET_FUNCODE_WEBBROWSER;
        case 8: return Pb_MEET_FUNCODE_VOTERESULT;
        case 9: return Pb_MEET_FUNCODE_SIGNINRESULT;
        case 10: return Pb_MEET_FUNCODE_DOCUMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_Meet_FunctionCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_Meet_FunctionCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_Meet_FunctionCode>() {
            public Pb_Meet_FunctionCode findValueByNumber(int number) {
              return Pb_Meet_FunctionCode.forNumber(number);
            }
          };

    private final int value;

    private Pb_Meet_FunctionCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_Meet_FunctionCode)
  }

  /**
   * <pre>
   *媒体播放
   *playflag
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetPlayFlag}
   */
  public enum Pb_MeetPlayFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEDIA_PLAYFLAG_ZERO = 0;</code>
     */
    Pb_MEDIA_PLAYFLAG_ZERO(0),
    /**
     * <pre>
     *循环播放标志
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_LOOP = 1;</code>
     */
    Pb_MEDIA_PLAYFLAG_LOOP(1),
    /**
     * <pre>
     *终端设备 在devnum=0时会判断
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_CLIENT = 2;</code>
     */
    Pb_MEDIA_PLAYFLAG_CLIENT(2),
    /**
     * <pre>
     *投影设备 在devnum=0时会判断
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_PROJECTIVE = 4;</code>
     */
    Pb_MEDIA_PLAYFLAG_PROJECTIVE(4),
    /**
     * <pre>
     *排除自己的设备ID 在devnum=0时会判断
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_NOSELFID = 8;</code>
     */
    Pb_MEDIA_PLAYFLAG_NOSELFID(8),
    /**
     * <pre>
     *播放位置调整 0百分比 为1表示按时间调整（秒）
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_SETPOSMODE = 16;</code>
     */
    Pb_MEDIA_PLAYFLAG_SETPOSMODE(16),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEDIA_PLAYFLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEDIA_PLAYFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *循环播放标志
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_LOOP = 1;</code>
     */
    public static final int Pb_MEDIA_PLAYFLAG_LOOP_VALUE = 1;
    /**
     * <pre>
     *终端设备 在devnum=0时会判断
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_CLIENT = 2;</code>
     */
    public static final int Pb_MEDIA_PLAYFLAG_CLIENT_VALUE = 2;
    /**
     * <pre>
     *投影设备 在devnum=0时会判断
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_PROJECTIVE = 4;</code>
     */
    public static final int Pb_MEDIA_PLAYFLAG_PROJECTIVE_VALUE = 4;
    /**
     * <pre>
     *排除自己的设备ID 在devnum=0时会判断
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_NOSELFID = 8;</code>
     */
    public static final int Pb_MEDIA_PLAYFLAG_NOSELFID_VALUE = 8;
    /**
     * <pre>
     *播放位置调整 0百分比 为1表示按时间调整（秒）
     * </pre>
     *
     * <code>Pb_MEDIA_PLAYFLAG_SETPOSMODE = 16;</code>
     */
    public static final int Pb_MEDIA_PLAYFLAG_SETPOSMODE_VALUE = 16;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetPlayFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetPlayFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEDIA_PLAYFLAG_ZERO;
        case 1: return Pb_MEDIA_PLAYFLAG_LOOP;
        case 2: return Pb_MEDIA_PLAYFLAG_CLIENT;
        case 4: return Pb_MEDIA_PLAYFLAG_PROJECTIVE;
        case 8: return Pb_MEDIA_PLAYFLAG_NOSELFID;
        case 16: return Pb_MEDIA_PLAYFLAG_SETPOSMODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPlayFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetPlayFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetPlayFlag>() {
            public Pb_MeetPlayFlag findValueByNumber(int number) {
              return Pb_MeetPlayFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetPlayFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetPlayFlag)
  }

  /**
   * <pre>
   *会议界面设置
   *faceid
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFaceID}
   */
  public enum Pb_MeetFaceID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_FACEID_ZERO = 0;</code>
     */
    Pb_MEET_FACEID_ZERO(0),
    /**
     * <pre>
     *主界面 png  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MAINBG = 1;</code>
     */
    Pb_MEET_FACEID_MAINBG(1),
    /**
     * <pre>
     *子界面 png  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_SUBBG = 2;</code>
     */
    Pb_MEET_FACEID_SUBBG(2),
    /**
     * <pre>
     *logo png    //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_LOGO = 3;</code>
     */
    Pb_MEET_FACEID_LOGO(3),
    /**
     * <pre>
     *会议名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEETNAME = 4;</code>
     */
    Pb_MEET_FACEID_MEETNAME(4),
    /**
     * <pre>
     *参会人名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEMBERNAME = 5;</code>
     */
    Pb_MEET_FACEID_MEMBERNAME(5),
    /**
     * <pre>
     *参会人单位 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEMBERCOMPANY = 6;</code>
     */
    Pb_MEET_FACEID_MEMBERCOMPANY(6),
    /**
     * <pre>
     *参会人职业 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEMBERJOB = 7;</code>
     */
    Pb_MEET_FACEID_MEMBERJOB(7),
    /**
     * <pre>
     *座席名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_SEATNAME = 8;</code>
     */
    Pb_MEET_FACEID_SEATNAME(8),
    /**
     * <pre>
     *日期时间 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_TIMER = 9;</code>
     */
    Pb_MEET_FACEID_TIMER(9),
    /**
     * <pre>
     *单位名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_COMPANY = 10;</code>
     */
    Pb_MEET_FACEID_COMPANY(10),
    /**
     * <pre>
     *开会预读文件、视频等  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_SHOWFILE = 11;</code>
     */
    Pb_MEET_FACEID_SHOWFILE(11),
    /**
     * <pre>
     *公司名称 onytext
     * </pre>
     *
     * <code>Pb_MEET_FACEID_COLTDTEXT = 12;</code>
     */
    Pb_MEET_FACEID_COLTDTEXT(12),
    /**
     * <pre>
     *text
     * </pre>
     *
     * <code>Pb_MEET_FACE_LOGO_GEO = 13;</code>
     */
    Pb_MEET_FACE_LOGO_GEO(13),
    /**
     * <pre>
     *会议状态 text 
     * </pre>
     *
     * <code>Pb_MEET_FACE_topstatus_GEO = 14;</code>
     */
    Pb_MEET_FACE_topstatus_GEO(14),
    /**
     * <pre>
     *进入会议按钮 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_checkin_GEO = 15;</code>
     */
    Pb_MEET_FACE_checkin_GEO(15),
    /**
     * <pre>
     *进入后台 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_manage_GEO = 16;</code>
     */
    Pb_MEET_FACE_manage_GEO(16),
    /**
     * <pre>
     *备注 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_remark_GEO = 17;</code>
     */
    Pb_MEET_FACE_remark_GEO(17),
    /**
     * <pre>
     *角色 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_role_GEO = 18;</code>
     */
    Pb_MEET_FACE_role_GEO(18),
    /**
     * <pre>
     *版本 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_ver_GEO = 19;</code>
     */
    Pb_MEET_FACE_ver_GEO(19),
    /**
     * <pre>
     *排位图标是否显示 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatIcoShow_GEO = 20;</code>
     */
    Pb_MEET_FACE_SeatIcoShow_GEO(20),
    /**
     * <pre>
     *桌牌显示上  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatLayoutShow_top = 21;</code>
     */
    Pb_MEET_FACE_SeatLayoutShow_top(21),
    /**
     * <pre>
     *桌牌显示中  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatLayoutShow_main = 22;</code>
     */
    Pb_MEET_FACE_SeatLayoutShow_main(22),
    /**
     * <pre>
     *桌牌显示下  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatLayoutShow_bottom = 23;</code>
     */
    Pb_MEET_FACE_SeatLayoutShow_bottom(23),
    /**
     * <code>Pb_MEET_FACE_MEETAGENDAFont = 24;</code>
     */
    Pb_MEET_FACE_MEETAGENDAFont(24),
    /**
     * <pre>
     * 会议公告背景  png （仅ID）
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinBK = 25;</code>
     */
    Pb_MEET_FACE_BulletinBK(25),
    /**
     * <pre>
     * 会议公告LOGO  png （仅ID）
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinLogo = 26;</code>
     */
    Pb_MEET_FACE_BulletinLogo(26),
    /**
     * <pre>
     * 会议公告标题  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinTitle = 27;</code>
     */
    Pb_MEET_FACE_BulletinTitle(27),
    /**
     * <pre>
     * 会议公告内容  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinContent = 28;</code>
     */
    Pb_MEET_FACE_BulletinContent(28),
    /**
     * <pre>
     * 公告关闭按钮  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinBtn = 29;</code>
     */
    Pb_MEET_FACE_BulletinBtn(29),
    /**
     * <pre>
     *投影界面 png
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_MIANBG = 101;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_MIANBG(101),
    /**
     * <pre>
     *logo png
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_LOGO = 102;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_LOGO(102),
    /**
     * <pre>
     *会议名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_MEETNAME = 103;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_MEETNAME(103),
    /**
     * <pre>
     *座席名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SEATNAME = 104;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_SEATNAME(104),
    /**
     * <pre>
     *日期时间 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_TIMER = 105;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_TIMER(105),
    /**
     * <pre>
     *单位名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_COMPANY = 106;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_COMPANY(106),
    /**
     * <pre>
     *开会预读文件、视频等  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGNINFO = 107;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_SIGNINFO(107),
    /**
     * <pre>
     *公司名称 onytext
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_MEETTIME = 108;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_MEETTIME(108),
    /**
     * <pre>
     *公司名称位置 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_COMPANYNAME = 109;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_COMPANYNAME(109),
    /**
     * <pre>
     *会议状态 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_STATUS = 110;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_STATUS(110),
    /**
     * <pre>
     *开会预读文件、视频等  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SHOWFILE = 111;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_SHOWFILE(111),
    /**
     * <pre>
     *公司名称 onytext
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_COLTDTEXT = 112;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_COLTDTEXT(112),
    /**
     * <pre>
     * 签到：应到
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGN_ALL = 113;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_SIGN_ALL(113),
    /**
     * <pre>
     * 签到：已到
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGN_IN = 114;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_SIGN_IN(114),
    /**
     * <pre>
     * 签到：未到
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGN_OUT = 115;</code>
     */
    Pb_MEET_FACEID_PROJECTIVE_SIGN_OUT(115),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_FACEID_ZERO = 0;</code>
     */
    public static final int Pb_MEET_FACEID_ZERO_VALUE = 0;
    /**
     * <pre>
     *主界面 png  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MAINBG = 1;</code>
     */
    public static final int Pb_MEET_FACEID_MAINBG_VALUE = 1;
    /**
     * <pre>
     *子界面 png  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_SUBBG = 2;</code>
     */
    public static final int Pb_MEET_FACEID_SUBBG_VALUE = 2;
    /**
     * <pre>
     *logo png    //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_LOGO = 3;</code>
     */
    public static final int Pb_MEET_FACEID_LOGO_VALUE = 3;
    /**
     * <pre>
     *会议名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEETNAME = 4;</code>
     */
    public static final int Pb_MEET_FACEID_MEETNAME_VALUE = 4;
    /**
     * <pre>
     *参会人名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEMBERNAME = 5;</code>
     */
    public static final int Pb_MEET_FACEID_MEMBERNAME_VALUE = 5;
    /**
     * <pre>
     *参会人单位 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEMBERCOMPANY = 6;</code>
     */
    public static final int Pb_MEET_FACEID_MEMBERCOMPANY_VALUE = 6;
    /**
     * <pre>
     *参会人职业 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_MEMBERJOB = 7;</code>
     */
    public static final int Pb_MEET_FACEID_MEMBERJOB_VALUE = 7;
    /**
     * <pre>
     *座席名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_SEATNAME = 8;</code>
     */
    public static final int Pb_MEET_FACEID_SEATNAME_VALUE = 8;
    /**
     * <pre>
     *日期时间 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_TIMER = 9;</code>
     */
    public static final int Pb_MEET_FACEID_TIMER_VALUE = 9;
    /**
     * <pre>
     *单位名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_COMPANY = 10;</code>
     */
    public static final int Pb_MEET_FACEID_COMPANY_VALUE = 10;
    /**
     * <pre>
     *开会预读文件、视频等  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_SHOWFILE = 11;</code>
     */
    public static final int Pb_MEET_FACEID_SHOWFILE_VALUE = 11;
    /**
     * <pre>
     *公司名称 onytext
     * </pre>
     *
     * <code>Pb_MEET_FACEID_COLTDTEXT = 12;</code>
     */
    public static final int Pb_MEET_FACEID_COLTDTEXT_VALUE = 12;
    /**
     * <pre>
     *text
     * </pre>
     *
     * <code>Pb_MEET_FACE_LOGO_GEO = 13;</code>
     */
    public static final int Pb_MEET_FACE_LOGO_GEO_VALUE = 13;
    /**
     * <pre>
     *会议状态 text 
     * </pre>
     *
     * <code>Pb_MEET_FACE_topstatus_GEO = 14;</code>
     */
    public static final int Pb_MEET_FACE_topstatus_GEO_VALUE = 14;
    /**
     * <pre>
     *进入会议按钮 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_checkin_GEO = 15;</code>
     */
    public static final int Pb_MEET_FACE_checkin_GEO_VALUE = 15;
    /**
     * <pre>
     *进入后台 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_manage_GEO = 16;</code>
     */
    public static final int Pb_MEET_FACE_manage_GEO_VALUE = 16;
    /**
     * <pre>
     *备注 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_remark_GEO = 17;</code>
     */
    public static final int Pb_MEET_FACE_remark_GEO_VALUE = 17;
    /**
     * <pre>
     *角色 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_role_GEO = 18;</code>
     */
    public static final int Pb_MEET_FACE_role_GEO_VALUE = 18;
    /**
     * <pre>
     *版本 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_ver_GEO = 19;</code>
     */
    public static final int Pb_MEET_FACE_ver_GEO_VALUE = 19;
    /**
     * <pre>
     *排位图标是否显示 text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatIcoShow_GEO = 20;</code>
     */
    public static final int Pb_MEET_FACE_SeatIcoShow_GEO_VALUE = 20;
    /**
     * <pre>
     *桌牌显示上  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatLayoutShow_top = 21;</code>
     */
    public static final int Pb_MEET_FACE_SeatLayoutShow_top_VALUE = 21;
    /**
     * <pre>
     *桌牌显示中  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatLayoutShow_main = 22;</code>
     */
    public static final int Pb_MEET_FACE_SeatLayoutShow_main_VALUE = 22;
    /**
     * <pre>
     *桌牌显示下  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_SeatLayoutShow_bottom = 23;</code>
     */
    public static final int Pb_MEET_FACE_SeatLayoutShow_bottom_VALUE = 23;
    /**
     * <code>Pb_MEET_FACE_MEETAGENDAFont = 24;</code>
     */
    public static final int Pb_MEET_FACE_MEETAGENDAFont_VALUE = 24;
    /**
     * <pre>
     * 会议公告背景  png （仅ID）
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinBK = 25;</code>
     */
    public static final int Pb_MEET_FACE_BulletinBK_VALUE = 25;
    /**
     * <pre>
     * 会议公告LOGO  png （仅ID）
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinLogo = 26;</code>
     */
    public static final int Pb_MEET_FACE_BulletinLogo_VALUE = 26;
    /**
     * <pre>
     * 会议公告标题  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinTitle = 27;</code>
     */
    public static final int Pb_MEET_FACE_BulletinTitle_VALUE = 27;
    /**
     * <pre>
     * 会议公告内容  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinContent = 28;</code>
     */
    public static final int Pb_MEET_FACE_BulletinContent_VALUE = 28;
    /**
     * <pre>
     * 公告关闭按钮  text
     * </pre>
     *
     * <code>Pb_MEET_FACE_BulletinBtn = 29;</code>
     */
    public static final int Pb_MEET_FACE_BulletinBtn_VALUE = 29;
    /**
     * <pre>
     *投影界面 png
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_MIANBG = 101;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_MIANBG_VALUE = 101;
    /**
     * <pre>
     *logo png
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_LOGO = 102;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_LOGO_VALUE = 102;
    /**
     * <pre>
     *会议名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_MEETNAME = 103;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_MEETNAME_VALUE = 103;
    /**
     * <pre>
     *座席名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SEATNAME = 104;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_SEATNAME_VALUE = 104;
    /**
     * <pre>
     *日期时间 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_TIMER = 105;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_TIMER_VALUE = 105;
    /**
     * <pre>
     *单位名称 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_COMPANY = 106;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_COMPANY_VALUE = 106;
    /**
     * <pre>
     *开会预读文件、视频等  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGNINFO = 107;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_SIGNINFO_VALUE = 107;
    /**
     * <pre>
     *公司名称 onytext
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_MEETTIME = 108;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_MEETTIME_VALUE = 108;
    /**
     * <pre>
     *公司名称位置 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_COMPANYNAME = 109;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_COMPANYNAME_VALUE = 109;
    /**
     * <pre>
     *会议状态 text
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_STATUS = 110;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_STATUS_VALUE = 110;
    /**
     * <pre>
     *开会预读文件、视频等  //仅ID
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SHOWFILE = 111;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_SHOWFILE_VALUE = 111;
    /**
     * <pre>
     *公司名称 onytext
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_COLTDTEXT = 112;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_COLTDTEXT_VALUE = 112;
    /**
     * <pre>
     * 签到：应到
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGN_ALL = 113;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_SIGN_ALL_VALUE = 113;
    /**
     * <pre>
     * 签到：已到
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGN_IN = 114;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_SIGN_IN_VALUE = 114;
    /**
     * <pre>
     * 签到：未到
     * </pre>
     *
     * <code>Pb_MEET_FACEID_PROJECTIVE_SIGN_OUT = 115;</code>
     */
    public static final int Pb_MEET_FACEID_PROJECTIVE_SIGN_OUT_VALUE = 115;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFaceID valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFaceID forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_FACEID_ZERO;
        case 1: return Pb_MEET_FACEID_MAINBG;
        case 2: return Pb_MEET_FACEID_SUBBG;
        case 3: return Pb_MEET_FACEID_LOGO;
        case 4: return Pb_MEET_FACEID_MEETNAME;
        case 5: return Pb_MEET_FACEID_MEMBERNAME;
        case 6: return Pb_MEET_FACEID_MEMBERCOMPANY;
        case 7: return Pb_MEET_FACEID_MEMBERJOB;
        case 8: return Pb_MEET_FACEID_SEATNAME;
        case 9: return Pb_MEET_FACEID_TIMER;
        case 10: return Pb_MEET_FACEID_COMPANY;
        case 11: return Pb_MEET_FACEID_SHOWFILE;
        case 12: return Pb_MEET_FACEID_COLTDTEXT;
        case 13: return Pb_MEET_FACE_LOGO_GEO;
        case 14: return Pb_MEET_FACE_topstatus_GEO;
        case 15: return Pb_MEET_FACE_checkin_GEO;
        case 16: return Pb_MEET_FACE_manage_GEO;
        case 17: return Pb_MEET_FACE_remark_GEO;
        case 18: return Pb_MEET_FACE_role_GEO;
        case 19: return Pb_MEET_FACE_ver_GEO;
        case 20: return Pb_MEET_FACE_SeatIcoShow_GEO;
        case 21: return Pb_MEET_FACE_SeatLayoutShow_top;
        case 22: return Pb_MEET_FACE_SeatLayoutShow_main;
        case 23: return Pb_MEET_FACE_SeatLayoutShow_bottom;
        case 24: return Pb_MEET_FACE_MEETAGENDAFont;
        case 25: return Pb_MEET_FACE_BulletinBK;
        case 26: return Pb_MEET_FACE_BulletinLogo;
        case 27: return Pb_MEET_FACE_BulletinTitle;
        case 28: return Pb_MEET_FACE_BulletinContent;
        case 29: return Pb_MEET_FACE_BulletinBtn;
        case 101: return Pb_MEET_FACEID_PROJECTIVE_MIANBG;
        case 102: return Pb_MEET_FACEID_PROJECTIVE_LOGO;
        case 103: return Pb_MEET_FACEID_PROJECTIVE_MEETNAME;
        case 104: return Pb_MEET_FACEID_PROJECTIVE_SEATNAME;
        case 105: return Pb_MEET_FACEID_PROJECTIVE_TIMER;
        case 106: return Pb_MEET_FACEID_PROJECTIVE_COMPANY;
        case 107: return Pb_MEET_FACEID_PROJECTIVE_SIGNINFO;
        case 108: return Pb_MEET_FACEID_PROJECTIVE_MEETTIME;
        case 109: return Pb_MEET_FACEID_PROJECTIVE_COMPANYNAME;
        case 110: return Pb_MEET_FACEID_PROJECTIVE_STATUS;
        case 111: return Pb_MEET_FACEID_PROJECTIVE_SHOWFILE;
        case 112: return Pb_MEET_FACEID_PROJECTIVE_COLTDTEXT;
        case 113: return Pb_MEET_FACEID_PROJECTIVE_SIGN_ALL;
        case 114: return Pb_MEET_FACEID_PROJECTIVE_SIGN_IN;
        case 115: return Pb_MEET_FACEID_PROJECTIVE_SIGN_OUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFaceID> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceID>() {
            public Pb_MeetFaceID findValueByNumber(int number) {
              return Pb_MeetFaceID.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFaceID(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFaceID)
  }

  /**
   * <pre>
   *fontflag
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFaceFontFlag}
   */
  public enum Pb_MeetFaceFontFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_FONTFLAG_ZERO = 0;</code>
     */
    Pb_MEET_FONTFLAG_ZERO(0),
    /**
     * <pre>
     *加粗
     * </pre>
     *
     * <code>Pb_MEET_FONTFLAG_BOLD = 1;</code>
     */
    Pb_MEET_FONTFLAG_BOLD(1),
    /**
     * <pre>
     *倾斜
     * </pre>
     *
     * <code>Pb_MEET_FONTFLAG_LEAN = 2;</code>
     */
    Pb_MEET_FONTFLAG_LEAN(2),
    /**
     * <pre>
     *下划线
     * </pre>
     *
     * <code>Pb_MEET_FONTFLAG_UNDERLINE = 4;</code>
     */
    Pb_MEET_FONTFLAG_UNDERLINE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_FONTFLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_FONTFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *加粗
     * </pre>
     *
     * <code>Pb_MEET_FONTFLAG_BOLD = 1;</code>
     */
    public static final int Pb_MEET_FONTFLAG_BOLD_VALUE = 1;
    /**
     * <pre>
     *倾斜
     * </pre>
     *
     * <code>Pb_MEET_FONTFLAG_LEAN = 2;</code>
     */
    public static final int Pb_MEET_FONTFLAG_LEAN_VALUE = 2;
    /**
     * <pre>
     *下划线
     * </pre>
     *
     * <code>Pb_MEET_FONTFLAG_UNDERLINE = 4;</code>
     */
    public static final int Pb_MEET_FONTFLAG_UNDERLINE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFaceFontFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFaceFontFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_FONTFLAG_ZERO;
        case 1: return Pb_MEET_FONTFLAG_BOLD;
        case 2: return Pb_MEET_FONTFLAG_LEAN;
        case 4: return Pb_MEET_FONTFLAG_UNDERLINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceFontFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFaceFontFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceFontFlag>() {
            public Pb_MeetFaceFontFlag findValueByNumber(int number) {
              return Pb_MeetFaceFontFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFaceFontFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFaceFontFlag)
  }

  /**
   * <pre>
   *flag
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetFaceFlag}
   */
  public enum Pb_MeetFaceFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_FACEFLAG_ZERO = 0;</code>
     */
    Pb_MEET_FACEFLAG_ZERO(0),
    /**
     * <pre>
     *该位用于表示该项是否可见
     * </pre>
     *
     * <code>Pb_MEET_FACEFLAG_SHOW = 1;</code>
     */
    Pb_MEET_FACEFLAG_SHOW(1),
    /**
     * <pre>
     *该位用于表示数据是文本类型,否则为文件ID
     * </pre>
     *
     * <code>Pb_MEET_FACEFLAG_TEXT = 2;</code>
     */
    Pb_MEET_FACEFLAG_TEXT(2),
    /**
     * <pre>
     *该位用于表示数据是纯文本类型
     * </pre>
     *
     * <code>Pb_MEET_FACEFLAG_ONLYTEXT = 4;</code>
     */
    Pb_MEET_FACEFLAG_ONLYTEXT(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_FACEFLAG_ZERO = 0;</code>
     */
    public static final int Pb_MEET_FACEFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *该位用于表示该项是否可见
     * </pre>
     *
     * <code>Pb_MEET_FACEFLAG_SHOW = 1;</code>
     */
    public static final int Pb_MEET_FACEFLAG_SHOW_VALUE = 1;
    /**
     * <pre>
     *该位用于表示数据是文本类型,否则为文件ID
     * </pre>
     *
     * <code>Pb_MEET_FACEFLAG_TEXT = 2;</code>
     */
    public static final int Pb_MEET_FACEFLAG_TEXT_VALUE = 2;
    /**
     * <pre>
     *该位用于表示数据是纯文本类型
     * </pre>
     *
     * <code>Pb_MEET_FACEFLAG_ONLYTEXT = 4;</code>
     */
    public static final int Pb_MEET_FACEFLAG_ONLYTEXT_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetFaceFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetFaceFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_FACEFLAG_ZERO;
        case 1: return Pb_MEET_FACEFLAG_SHOW;
        case 2: return Pb_MEET_FACEFLAG_TEXT;
        case 4: return Pb_MEET_FACEFLAG_ONLYTEXT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetFaceFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetFaceFlag>() {
            public Pb_MeetFaceFlag findValueByNumber(int number) {
              return Pb_MeetFaceFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetFaceFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetFaceFlag)
  }

  /**
   * <pre>
   *时间段会议统计
   *quartertype
   * </pre>
   *
   * Protobuf enum {@code Pb_MeetStatisticFlag}
   */
  public enum Pb_MeetStatisticFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_MEET_QUERYSTATISTIC_ZERO = 0;</code>
     */
    Pb_MEET_QUERYSTATISTIC_ZERO(0),
    /**
     * <pre>
     *按月份查询,最多一次可查12个月
     * </pre>
     *
     * <code>Pb_MEET_QUERYSTATISTIC_BYMONTH = 1;</code>
     */
    Pb_MEET_QUERYSTATISTIC_BYMONTH(1),
    /**
     * <pre>
     *按季度查询,最多一次可查12个季度
     * </pre>
     *
     * <code>Pb_MEET_QUERYSTATISTIC_BYQUARTER = 2;</code>
     */
    Pb_MEET_QUERYSTATISTIC_BYQUARTER(2),
    /**
     * <pre>
     *按年查询,最多一次可查12个年
     * </pre>
     *
     * <code>Pb_MEET_QUERYSTATISTIC_BYYEAR = 3;</code>
     */
    Pb_MEET_QUERYSTATISTIC_BYYEAR(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_MEET_QUERYSTATISTIC_ZERO = 0;</code>
     */
    public static final int Pb_MEET_QUERYSTATISTIC_ZERO_VALUE = 0;
    /**
     * <pre>
     *按月份查询,最多一次可查12个月
     * </pre>
     *
     * <code>Pb_MEET_QUERYSTATISTIC_BYMONTH = 1;</code>
     */
    public static final int Pb_MEET_QUERYSTATISTIC_BYMONTH_VALUE = 1;
    /**
     * <pre>
     *按季度查询,最多一次可查12个季度
     * </pre>
     *
     * <code>Pb_MEET_QUERYSTATISTIC_BYQUARTER = 2;</code>
     */
    public static final int Pb_MEET_QUERYSTATISTIC_BYQUARTER_VALUE = 2;
    /**
     * <pre>
     *按年查询,最多一次可查12个年
     * </pre>
     *
     * <code>Pb_MEET_QUERYSTATISTIC_BYYEAR = 3;</code>
     */
    public static final int Pb_MEET_QUERYSTATISTIC_BYYEAR_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_MeetStatisticFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_MeetStatisticFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_MEET_QUERYSTATISTIC_ZERO;
        case 1: return Pb_MEET_QUERYSTATISTIC_BYMONTH;
        case 2: return Pb_MEET_QUERYSTATISTIC_BYQUARTER;
        case 3: return Pb_MEET_QUERYSTATISTIC_BYYEAR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_MeetStatisticFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_MeetStatisticFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_MeetStatisticFlag>() {
            public Pb_MeetStatisticFlag findValueByNumber(int number) {
              return Pb_MeetStatisticFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_MeetStatisticFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_MeetStatisticFlag)
  }

  /**
   * <pre>
   *时间段会议统计
   *evaluate flag
   * </pre>
   *
   * Protobuf enum {@code Pb_FileEvaluateFlag}
   */
  public enum Pb_FileEvaluateFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_FILEEVALUATE_FLAG_ZERO = 0;</code>
     */
    Pb_FILEEVALUATE_FLAG_ZERO(0),
    /**
     * <pre>
     *该标志为1表示评价对外不可见
     * </pre>
     *
     * <code>Pb_FILEEVALUATE_FLAG_SECRETARY = 1;</code>
     */
    Pb_FILEEVALUATE_FLAG_SECRETARY(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_FILEEVALUATE_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_FILEEVALUATE_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *该标志为1表示评价对外不可见
     * </pre>
     *
     * <code>Pb_FILEEVALUATE_FLAG_SECRETARY = 1;</code>
     */
    public static final int Pb_FILEEVALUATE_FLAG_SECRETARY_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_FileEvaluateFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_FileEvaluateFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_FILEEVALUATE_FLAG_ZERO;
        case 1: return Pb_FILEEVALUATE_FLAG_SECRETARY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_FileEvaluateFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_FileEvaluateFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_FileEvaluateFlag>() {
            public Pb_FileEvaluateFlag findValueByNumber(int number) {
              return Pb_FileEvaluateFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_FileEvaluateFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_FileEvaluateFlag)
  }

  /**
   * <pre>
   *&#47;/设备ID的类型
   * </pre>
   *
   * Protobuf enum {@code Pb_DeviceIDType}
   */
  public enum Pb_DeviceIDType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_DeviceIDType_zero = 0;</code>
     */
    Pb_DeviceIDType_zero(0),
    /**
     * <pre>
     *Pb_DeviceIDType_AreaServer=0xff000000;//区域服务器
     *Pb_DeviceIDType_MediaServer=0xfe000000;//媒体服务器
     *Pb_DeviceIDType_StreamServer=0xfd000000;//流服务器
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetDBServer = 16777216;</code>
     */
    Pb_DeviceIDType_MeetDBServer(16777216),
    /**
     * <pre>
     *会议茶水设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetService = 17039360;</code>
     */
    Pb_DeviceIDType_MeetService(17039360),
    /**
     * <pre>
     *投影设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetProjective = 17301504;</code>
     */
    Pb_DeviceIDType_MeetProjective(17301504),
    /**
     * <pre>
     *会议流采集设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetCapture = 17563648;</code>
     */
    Pb_DeviceIDType_MeetCapture(17563648),
    /**
     * <pre>
     *会议终端设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetClient = 17825792;</code>
     */
    Pb_DeviceIDType_MeetClient(17825792),
    /**
     * <pre>
     *会议视频对讲客户端
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetVideoClient = 17891328;</code>
     */
    Pb_DeviceIDType_MeetVideoClient(17891328),
    /**
     * <pre>
     *会议发布
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetPublish = 18087936;</code>
     */
    Pb_DeviceIDType_MeetPublish(18087936),
    /**
     * <pre>
     *PHP中转数据设备
     * </pre>
     *
     * <code>Pb_DEVICE_MEET_PHPCLIENT = 18350080;</code>
     */
    Pb_DEVICE_MEET_PHPCLIENT(18350080),
    /**
     * <pre>
     *会议一键同屏设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetShare = 18874368;</code>
     */
    Pb_DeviceIDType_MeetShare(18874368),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_DeviceIDType_zero = 0;</code>
     */
    public static final int Pb_DeviceIDType_zero_VALUE = 0;
    /**
     * <pre>
     *Pb_DeviceIDType_AreaServer=0xff000000;//区域服务器
     *Pb_DeviceIDType_MediaServer=0xfe000000;//媒体服务器
     *Pb_DeviceIDType_StreamServer=0xfd000000;//流服务器
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetDBServer = 16777216;</code>
     */
    public static final int Pb_DeviceIDType_MeetDBServer_VALUE = 16777216;
    /**
     * <pre>
     *会议茶水设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetService = 17039360;</code>
     */
    public static final int Pb_DeviceIDType_MeetService_VALUE = 17039360;
    /**
     * <pre>
     *投影设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetProjective = 17301504;</code>
     */
    public static final int Pb_DeviceIDType_MeetProjective_VALUE = 17301504;
    /**
     * <pre>
     *会议流采集设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetCapture = 17563648;</code>
     */
    public static final int Pb_DeviceIDType_MeetCapture_VALUE = 17563648;
    /**
     * <pre>
     *会议终端设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetClient = 17825792;</code>
     */
    public static final int Pb_DeviceIDType_MeetClient_VALUE = 17825792;
    /**
     * <pre>
     *会议视频对讲客户端
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetVideoClient = 17891328;</code>
     */
    public static final int Pb_DeviceIDType_MeetVideoClient_VALUE = 17891328;
    /**
     * <pre>
     *会议发布
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetPublish = 18087936;</code>
     */
    public static final int Pb_DeviceIDType_MeetPublish_VALUE = 18087936;
    /**
     * <pre>
     *PHP中转数据设备
     * </pre>
     *
     * <code>Pb_DEVICE_MEET_PHPCLIENT = 18350080;</code>
     */
    public static final int Pb_DEVICE_MEET_PHPCLIENT_VALUE = 18350080;
    /**
     * <pre>
     *会议一键同屏设备
     * </pre>
     *
     * <code>Pb_DeviceIDType_MeetShare = 18874368;</code>
     */
    public static final int Pb_DeviceIDType_MeetShare_VALUE = 18874368;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_DeviceIDType valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_DeviceIDType forNumber(int value) {
      switch (value) {
        case 0: return Pb_DeviceIDType_zero;
        case 16777216: return Pb_DeviceIDType_MeetDBServer;
        case 17039360: return Pb_DeviceIDType_MeetService;
        case 17301504: return Pb_DeviceIDType_MeetProjective;
        case 17563648: return Pb_DeviceIDType_MeetCapture;
        case 17825792: return Pb_DeviceIDType_MeetClient;
        case 17891328: return Pb_DeviceIDType_MeetVideoClient;
        case 18087936: return Pb_DeviceIDType_MeetPublish;
        case 18350080: return Pb_DEVICE_MEET_PHPCLIENT;
        case 18874368: return Pb_DeviceIDType_MeetShare;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceIDType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_DeviceIDType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_DeviceIDType>() {
            public Pb_DeviceIDType findValueByNumber(int number) {
              return Pb_DeviceIDType.forNumber(number);
            }
          };

    private final int value;

    private Pb_DeviceIDType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_DeviceIDType)
  }

  /**
   * <pre>
   *&#47;/设备的ID校验错误码
   * </pre>
   *
   * Protobuf enum {@code Pb_ValidateErrorCode}
   */
  public enum Pb_ValidateErrorCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *error code
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NONE = 0;</code>
     */
    Pb_PARSER_ERROR_NONE(0),
    /**
     * <pre>
     *过期了
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_EXPIRATION = 1;</code>
     */
    Pb_PARSER_ERROR_EXPIRATION(1),
    /**
     * <pre>
     *程序出错
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_OPER = 2;</code>
     */
    Pb_PARSER_ERROR_OPER(2),
    /**
     * <pre>
     *不允许接入的企业
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_ENTERPRISE = 3;</code>
     */
    Pb_PARSER_ERROR_ENTERPRISE(3),
    /**
     * <pre>
     *没有多余的设备ID了
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NODEVICEID = 4;</code>
     */
    Pb_PARSER_ERROR_NODEVICEID(4),
    /**
     * <pre>
     *文件数据错误
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_FILEERROR = 6;</code>
     */
    Pb_PARSER_ERROR_FILEERROR(6),
    /**
     * <pre>
     *不允许接入的设备
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NOALLOWIN = 5;</code>
     */
    Pb_PARSER_ERROR_NOALLOWIN(5),
    /**
     * <pre>
     *非法的设备
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_INVALID = 7;</code>
     */
    Pb_PARSER_ERROR_INVALID(7),
    /**
     * <pre>
     *设备ID已经被使用了
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_IDOCCUPY = 8;</code>
     */
    Pb_PARSER_ERROR_IDOCCUPY(8),
    /**
     * <pre>
     *不存在需要的资源
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NOTBEING = 9;</code>
     */
    Pb_PARSER_ERROR_NOTBEING(9),
    /**
     * <pre>
     *文件数据错误,但可以解析出原设备ID
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_ONLYDEVICEID = 10;</code>
     */
    Pb_PARSER_ERROR_ONLYDEVICEID(10),
    /**
     * <pre>
     *指定设备与设备类型不匹配
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_DEVICETYPENOMATCH = 11;</code>
     */
    Pb_PARSER_ERROR_DEVICETYPENOMATCH(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *error code
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NONE = 0;</code>
     */
    public static final int Pb_PARSER_ERROR_NONE_VALUE = 0;
    /**
     * <pre>
     *过期了
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_EXPIRATION = 1;</code>
     */
    public static final int Pb_PARSER_ERROR_EXPIRATION_VALUE = 1;
    /**
     * <pre>
     *程序出错
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_OPER = 2;</code>
     */
    public static final int Pb_PARSER_ERROR_OPER_VALUE = 2;
    /**
     * <pre>
     *不允许接入的企业
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_ENTERPRISE = 3;</code>
     */
    public static final int Pb_PARSER_ERROR_ENTERPRISE_VALUE = 3;
    /**
     * <pre>
     *没有多余的设备ID了
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NODEVICEID = 4;</code>
     */
    public static final int Pb_PARSER_ERROR_NODEVICEID_VALUE = 4;
    /**
     * <pre>
     *文件数据错误
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_FILEERROR = 6;</code>
     */
    public static final int Pb_PARSER_ERROR_FILEERROR_VALUE = 6;
    /**
     * <pre>
     *不允许接入的设备
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NOALLOWIN = 5;</code>
     */
    public static final int Pb_PARSER_ERROR_NOALLOWIN_VALUE = 5;
    /**
     * <pre>
     *非法的设备
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_INVALID = 7;</code>
     */
    public static final int Pb_PARSER_ERROR_INVALID_VALUE = 7;
    /**
     * <pre>
     *设备ID已经被使用了
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_IDOCCUPY = 8;</code>
     */
    public static final int Pb_PARSER_ERROR_IDOCCUPY_VALUE = 8;
    /**
     * <pre>
     *不存在需要的资源
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_NOTBEING = 9;</code>
     */
    public static final int Pb_PARSER_ERROR_NOTBEING_VALUE = 9;
    /**
     * <pre>
     *文件数据错误,但可以解析出原设备ID
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_ONLYDEVICEID = 10;</code>
     */
    public static final int Pb_PARSER_ERROR_ONLYDEVICEID_VALUE = 10;
    /**
     * <pre>
     *指定设备与设备类型不匹配
     * </pre>
     *
     * <code>Pb_PARSER_ERROR_DEVICETYPENOMATCH = 11;</code>
     */
    public static final int Pb_PARSER_ERROR_DEVICETYPENOMATCH_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_ValidateErrorCode valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_ValidateErrorCode forNumber(int value) {
      switch (value) {
        case 0: return Pb_PARSER_ERROR_NONE;
        case 1: return Pb_PARSER_ERROR_EXPIRATION;
        case 2: return Pb_PARSER_ERROR_OPER;
        case 3: return Pb_PARSER_ERROR_ENTERPRISE;
        case 4: return Pb_PARSER_ERROR_NODEVICEID;
        case 6: return Pb_PARSER_ERROR_FILEERROR;
        case 5: return Pb_PARSER_ERROR_NOALLOWIN;
        case 7: return Pb_PARSER_ERROR_INVALID;
        case 8: return Pb_PARSER_ERROR_IDOCCUPY;
        case 9: return Pb_PARSER_ERROR_NOTBEING;
        case 10: return Pb_PARSER_ERROR_ONLYDEVICEID;
        case 11: return Pb_PARSER_ERROR_DEVICETYPENOMATCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_ValidateErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_ValidateErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_ValidateErrorCode>() {
            public Pb_ValidateErrorCode findValueByNumber(int number) {
              return Pb_ValidateErrorCode.forNumber(number);
            }
          };

    private final int value;

    private Pb_ValidateErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_ValidateErrorCode)
  }

  /**
   * <pre>
   *&#47;/设备的ID校验错误码
   * </pre>
   *
   * Protobuf enum {@code Pb_ValidateFlagBit}
   */
  public enum Pb_ValidateFlagBit
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *validate status bit pos
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_ZERO = 0;</code>
     */
    Pb_VALIDATE_FLAG_ZERO(0),
    /**
     * <pre>
     *区域服务器ID
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_AREAID = 1;</code>
     */
    Pb_VALIDATE_FLAG_AREAID(1),
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_DEVICEID = 2;</code>
     */
    Pb_VALIDATE_FLAG_DEVICEID(2),
    /**
     * <pre>
     *状态码 参见Pb_ValidateErrorCode
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_STATUS = 4;</code>
     */
    Pb_VALIDATE_FLAG_STATUS(4),
    /**
     * <pre>
     *到期时间 eg:0x07e2 05 05(表示2018 05 05)
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_EXPIRATIONTIME = 8;</code>
     */
    Pb_VALIDATE_FLAG_EXPIRATIONTIME(8),
    /**
     * <pre>
     *企业ID
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_ENTERPISEID = 16;</code>
     */
    Pb_VALIDATE_FLAG_ENTERPISEID(16),
    /**
     * <pre>
     *协议版本
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_NETCOMMONVER = 32;</code>
     */
    Pb_VALIDATE_FLAG_NETCOMMONVER(32),
    /**
     * <pre>
     *注册时自定义的32位整数值
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_USERDEF32UBIT = 64;</code>
     */
    Pb_VALIDATE_FLAG_USERDEF32UBIT(64),
    /**
     * <pre>
     *当前在线设备数
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_CURNUM = 128;</code>
     */
    Pb_VALIDATE_FLAG_CURNUM(128),
    /**
     * <pre>
     *最大在线设备数
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_MAXNUM = 256;</code>
     */
    Pb_VALIDATE_FLAG_MAXNUM(256),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *validate status bit pos
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_ZERO = 0;</code>
     */
    public static final int Pb_VALIDATE_FLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *区域服务器ID
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_AREAID = 1;</code>
     */
    public static final int Pb_VALIDATE_FLAG_AREAID_VALUE = 1;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_DEVICEID = 2;</code>
     */
    public static final int Pb_VALIDATE_FLAG_DEVICEID_VALUE = 2;
    /**
     * <pre>
     *状态码 参见Pb_ValidateErrorCode
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_STATUS = 4;</code>
     */
    public static final int Pb_VALIDATE_FLAG_STATUS_VALUE = 4;
    /**
     * <pre>
     *到期时间 eg:0x07e2 05 05(表示2018 05 05)
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_EXPIRATIONTIME = 8;</code>
     */
    public static final int Pb_VALIDATE_FLAG_EXPIRATIONTIME_VALUE = 8;
    /**
     * <pre>
     *企业ID
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_ENTERPISEID = 16;</code>
     */
    public static final int Pb_VALIDATE_FLAG_ENTERPISEID_VALUE = 16;
    /**
     * <pre>
     *协议版本
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_NETCOMMONVER = 32;</code>
     */
    public static final int Pb_VALIDATE_FLAG_NETCOMMONVER_VALUE = 32;
    /**
     * <pre>
     *注册时自定义的32位整数值
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_USERDEF32UBIT = 64;</code>
     */
    public static final int Pb_VALIDATE_FLAG_USERDEF32UBIT_VALUE = 64;
    /**
     * <pre>
     *当前在线设备数
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_CURNUM = 128;</code>
     */
    public static final int Pb_VALIDATE_FLAG_CURNUM_VALUE = 128;
    /**
     * <pre>
     *最大在线设备数
     * </pre>
     *
     * <code>Pb_VALIDATE_FLAG_MAXNUM = 256;</code>
     */
    public static final int Pb_VALIDATE_FLAG_MAXNUM_VALUE = 256;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_ValidateFlagBit valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_ValidateFlagBit forNumber(int value) {
      switch (value) {
        case 0: return Pb_VALIDATE_FLAG_ZERO;
        case 1: return Pb_VALIDATE_FLAG_AREAID;
        case 2: return Pb_VALIDATE_FLAG_DEVICEID;
        case 4: return Pb_VALIDATE_FLAG_STATUS;
        case 8: return Pb_VALIDATE_FLAG_EXPIRATIONTIME;
        case 16: return Pb_VALIDATE_FLAG_ENTERPISEID;
        case 32: return Pb_VALIDATE_FLAG_NETCOMMONVER;
        case 64: return Pb_VALIDATE_FLAG_USERDEF32UBIT;
        case 128: return Pb_VALIDATE_FLAG_CURNUM;
        case 256: return Pb_VALIDATE_FLAG_MAXNUM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_ValidateFlagBit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_ValidateFlagBit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_ValidateFlagBit>() {
            public Pb_ValidateFlagBit findValueByNumber(int number) {
              return Pb_ValidateFlagBit.forNumber(number);
            }
          };

    private final int value;

    private Pb_ValidateFlagBit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_ValidateFlagBit)
  }

  /**
   * <pre>
   *系统限制功能属性ID
   * </pre>
   *
   * Protobuf enum {@code Pb_SystemFuncionPropertyId}
   */
  public enum Pb_SystemFuncionPropertyId
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *查询功能是否可用 query,parameter(传入的功能ID 参见systemfuncion.h的功能ID定义),propertyval(返回是否可用1=可用,0=不可用)
     * </pre>
     *
     * <code>Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_ISENABLE = 0;</code>
     */
    Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_ISENABLE(0),
    /**
     * <pre>
     *查询总数 query,parameter(0),returnval(返回总数)
     * </pre>
     *
     * <code>Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_TOTALNUM = 1;</code>
     */
    Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_TOTALNUM(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *查询功能是否可用 query,parameter(传入的功能ID 参见systemfuncion.h的功能ID定义),propertyval(返回是否可用1=可用,0=不可用)
     * </pre>
     *
     * <code>Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_ISENABLE = 0;</code>
     */
    public static final int Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_ISENABLE_VALUE = 0;
    /**
     * <pre>
     *查询总数 query,parameter(0),returnval(返回总数)
     * </pre>
     *
     * <code>Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_TOTALNUM = 1;</code>
     */
    public static final int Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_TOTALNUM_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_SystemFuncionPropertyId valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_SystemFuncionPropertyId forNumber(int value) {
      switch (value) {
        case 0: return Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_ISENABLE;
        case 1: return Pb_SYSTEMFUNCTIONLIMIT_PROPERTY_TOTALNUM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_SystemFuncionPropertyId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_SystemFuncionPropertyId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_SystemFuncionPropertyId>() {
            public Pb_SystemFuncionPropertyId findValueByNumber(int number) {
              return Pb_SystemFuncionPropertyId.forNumber(number);
            }
          };

    private final int value;

    private Pb_SystemFuncionPropertyId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_SystemFuncionPropertyId)
  }

  /**
   * <pre>
   *系统限制功能ID
   * </pre>
   *
   * Protobuf enum {@code Pb_SystemFuncionId}
   */
  public enum Pb_SystemFuncionId
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *系统功能定义 不设置功能数限制
     * </pre>
     *
     * <code>Pb_FUNCTION_ZERO = 0;</code>
     */
    Pb_FUNCTION_ZERO(0),
    /**
     * <pre>
     *屏屏采集
     * </pre>
     *
     * <code>Pb_FUNCTION_DESKTOP_CAPTURE = 1;</code>
     */
    Pb_FUNCTION_DESKTOP_CAPTURE(1),
    /**
     * <pre>
     *视频播放
     * </pre>
     *
     * <code>Pb_FUNCTION_VIDEO_PLAY = 2;</code>
     */
    Pb_FUNCTION_VIDEO_PLAY(2),
    /**
     * <pre>
     *播放音频
     * </pre>
     *
     * <code>Pb_FUNCTION_AUDIO_PLAY = 3;</code>
     */
    Pb_FUNCTION_AUDIO_PLAY(3),
    /**
     * <pre>
     *播放实时视频流
     * </pre>
     *
     * <code>Pb_FUNCTION_CAMARA_PLAY = 4;</code>
     */
    Pb_FUNCTION_CAMARA_PLAY(4),
    /**
     * <pre>
     *摄像头采集
     * </pre>
     *
     * <code>Pb_FUNCTION_CAMARA_CAPTURE = 5;</code>
     */
    Pb_FUNCTION_CAMARA_CAPTURE(5),
    /**
     * <pre>
     *音频输出回放采集
     * </pre>
     *
     * <code>Pb_FUNCTION_AUDIOOUTPUT_CAPTURE = 6;</code>
     */
    Pb_FUNCTION_AUDIOOUTPUT_CAPTURE(6),
    /**
     * <pre>
     *pdf文档查看
     * </pre>
     *
     * <code>Pb_FUNCTION_PDF_VIEW = 7;</code>
     */
    Pb_FUNCTION_PDF_VIEW(7),
    /**
     * <pre>
     *office文档查看
     * </pre>
     *
     * <code>Pb_FUNCTION_OFFICE_VIEW = 8;</code>
     */
    Pb_FUNCTION_OFFICE_VIEW(8),
    /**
     * <pre>
     *图片文档查看
     * </pre>
     *
     * <code>Pb_FUNCTION_PICTURE_VIEW = 9;</code>
     */
    Pb_FUNCTION_PICTURE_VIEW(9),
    /**
     * <pre>
     *文件下载
     * </pre>
     *
     * <code>Pb_FUNCTION_MEDIA_DOWNLOAD = 10;</code>
     */
    Pb_FUNCTION_MEDIA_DOWNLOAD(10),
    /**
     * <pre>
     *文件上传
     * </pre>
     *
     * <code>Pb_FUNCTION_MEDIA_UPLOAD = 11;</code>
     */
    Pb_FUNCTION_MEDIA_UPLOAD(11),
    /**
     * <pre>
     *屏幕共享
     * </pre>
     *
     * <code>Pb_FUNCTION_DESKTOP_SHARE = 12;</code>
     */
    Pb_FUNCTION_DESKTOP_SHARE(12),
    /**
     * <pre>
     *多人白板
     * </pre>
     *
     * <code>Pb_FUNCTION_WHITEBOARD = 13;</code>
     */
    Pb_FUNCTION_WHITEBOARD(13),
    /**
     * <pre>
     *视频录制
     * </pre>
     *
     * <code>Pb_FUNCTION_VIDEO_RECORD = 14;</code>
     */
    Pb_FUNCTION_VIDEO_RECORD(14),
    /**
     * <pre>
     *音频对讲
     * </pre>
     *
     * <code>Pb_FUNCTION_AUDIO_CHAT = 15;</code>
     */
    Pb_FUNCTION_AUDIO_CHAT(15),
    /**
     * <pre>
     *视频对讲
     * </pre>
     *
     * <code>Pb_FUNCTION_VIDEO_CHAT = 16;</code>
     */
    Pb_FUNCTION_VIDEO_CHAT(16),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *系统功能定义 不设置功能数限制
     * </pre>
     *
     * <code>Pb_FUNCTION_ZERO = 0;</code>
     */
    public static final int Pb_FUNCTION_ZERO_VALUE = 0;
    /**
     * <pre>
     *屏屏采集
     * </pre>
     *
     * <code>Pb_FUNCTION_DESKTOP_CAPTURE = 1;</code>
     */
    public static final int Pb_FUNCTION_DESKTOP_CAPTURE_VALUE = 1;
    /**
     * <pre>
     *视频播放
     * </pre>
     *
     * <code>Pb_FUNCTION_VIDEO_PLAY = 2;</code>
     */
    public static final int Pb_FUNCTION_VIDEO_PLAY_VALUE = 2;
    /**
     * <pre>
     *播放音频
     * </pre>
     *
     * <code>Pb_FUNCTION_AUDIO_PLAY = 3;</code>
     */
    public static final int Pb_FUNCTION_AUDIO_PLAY_VALUE = 3;
    /**
     * <pre>
     *播放实时视频流
     * </pre>
     *
     * <code>Pb_FUNCTION_CAMARA_PLAY = 4;</code>
     */
    public static final int Pb_FUNCTION_CAMARA_PLAY_VALUE = 4;
    /**
     * <pre>
     *摄像头采集
     * </pre>
     *
     * <code>Pb_FUNCTION_CAMARA_CAPTURE = 5;</code>
     */
    public static final int Pb_FUNCTION_CAMARA_CAPTURE_VALUE = 5;
    /**
     * <pre>
     *音频输出回放采集
     * </pre>
     *
     * <code>Pb_FUNCTION_AUDIOOUTPUT_CAPTURE = 6;</code>
     */
    public static final int Pb_FUNCTION_AUDIOOUTPUT_CAPTURE_VALUE = 6;
    /**
     * <pre>
     *pdf文档查看
     * </pre>
     *
     * <code>Pb_FUNCTION_PDF_VIEW = 7;</code>
     */
    public static final int Pb_FUNCTION_PDF_VIEW_VALUE = 7;
    /**
     * <pre>
     *office文档查看
     * </pre>
     *
     * <code>Pb_FUNCTION_OFFICE_VIEW = 8;</code>
     */
    public static final int Pb_FUNCTION_OFFICE_VIEW_VALUE = 8;
    /**
     * <pre>
     *图片文档查看
     * </pre>
     *
     * <code>Pb_FUNCTION_PICTURE_VIEW = 9;</code>
     */
    public static final int Pb_FUNCTION_PICTURE_VIEW_VALUE = 9;
    /**
     * <pre>
     *文件下载
     * </pre>
     *
     * <code>Pb_FUNCTION_MEDIA_DOWNLOAD = 10;</code>
     */
    public static final int Pb_FUNCTION_MEDIA_DOWNLOAD_VALUE = 10;
    /**
     * <pre>
     *文件上传
     * </pre>
     *
     * <code>Pb_FUNCTION_MEDIA_UPLOAD = 11;</code>
     */
    public static final int Pb_FUNCTION_MEDIA_UPLOAD_VALUE = 11;
    /**
     * <pre>
     *屏幕共享
     * </pre>
     *
     * <code>Pb_FUNCTION_DESKTOP_SHARE = 12;</code>
     */
    public static final int Pb_FUNCTION_DESKTOP_SHARE_VALUE = 12;
    /**
     * <pre>
     *多人白板
     * </pre>
     *
     * <code>Pb_FUNCTION_WHITEBOARD = 13;</code>
     */
    public static final int Pb_FUNCTION_WHITEBOARD_VALUE = 13;
    /**
     * <pre>
     *视频录制
     * </pre>
     *
     * <code>Pb_FUNCTION_VIDEO_RECORD = 14;</code>
     */
    public static final int Pb_FUNCTION_VIDEO_RECORD_VALUE = 14;
    /**
     * <pre>
     *音频对讲
     * </pre>
     *
     * <code>Pb_FUNCTION_AUDIO_CHAT = 15;</code>
     */
    public static final int Pb_FUNCTION_AUDIO_CHAT_VALUE = 15;
    /**
     * <pre>
     *视频对讲
     * </pre>
     *
     * <code>Pb_FUNCTION_VIDEO_CHAT = 16;</code>
     */
    public static final int Pb_FUNCTION_VIDEO_CHAT_VALUE = 16;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_SystemFuncionId valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_SystemFuncionId forNumber(int value) {
      switch (value) {
        case 0: return Pb_FUNCTION_ZERO;
        case 1: return Pb_FUNCTION_DESKTOP_CAPTURE;
        case 2: return Pb_FUNCTION_VIDEO_PLAY;
        case 3: return Pb_FUNCTION_AUDIO_PLAY;
        case 4: return Pb_FUNCTION_CAMARA_PLAY;
        case 5: return Pb_FUNCTION_CAMARA_CAPTURE;
        case 6: return Pb_FUNCTION_AUDIOOUTPUT_CAPTURE;
        case 7: return Pb_FUNCTION_PDF_VIEW;
        case 8: return Pb_FUNCTION_OFFICE_VIEW;
        case 9: return Pb_FUNCTION_PICTURE_VIEW;
        case 10: return Pb_FUNCTION_MEDIA_DOWNLOAD;
        case 11: return Pb_FUNCTION_MEDIA_UPLOAD;
        case 12: return Pb_FUNCTION_DESKTOP_SHARE;
        case 13: return Pb_FUNCTION_WHITEBOARD;
        case 14: return Pb_FUNCTION_VIDEO_RECORD;
        case 15: return Pb_FUNCTION_AUDIO_CHAT;
        case 16: return Pb_FUNCTION_VIDEO_CHAT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_SystemFuncionId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_SystemFuncionId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_SystemFuncionId>() {
            public Pb_SystemFuncionId findValueByNumber(int number) {
              return Pb_SystemFuncionId.forNumber(number);
            }
          };

    private final int value;

    private Pb_SystemFuncionId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_SystemFuncionId)
  }

  /**
   * <pre>
   *系统播放资源ID
   * </pre>
   *
   * Protobuf enum {@code Pb_SystemPlayResIndex}
   */
  public enum Pb_SystemPlayResIndex
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *主播放资源
     * </pre>
     *
     * <code>Pb_DEVICE_MAINRES = 0;</code>
     */
    Pb_DEVICE_MAINRES(0),
    /**
     * <pre>
     *对讲远端音频播放资源ID
     * </pre>
     *
     * <code>Pb_DEVICECHAT_AUDIO_B_RESINDEX = 9;</code>
     */
    Pb_DEVICECHAT_AUDIO_B_RESINDEX(9),
    /**
     * <pre>
     *对讲远端端视频播放资源ID
     * </pre>
     *
     * <code>Pb_DEVICECHAT_VIDEO_B_RESINDEX = 10;</code>
     */
    Pb_DEVICECHAT_VIDEO_B_RESINDEX(10),
    /**
     * <pre>
     *对讲本机视频播放资源ID
     * </pre>
     *
     * <code>Pb_DEVICECHAT_VIDEO_A_RESINDEX = 11;</code>
     */
    Pb_DEVICECHAT_VIDEO_A_RESINDEX(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *主播放资源
     * </pre>
     *
     * <code>Pb_DEVICE_MAINRES = 0;</code>
     */
    public static final int Pb_DEVICE_MAINRES_VALUE = 0;
    /**
     * <pre>
     *对讲远端音频播放资源ID
     * </pre>
     *
     * <code>Pb_DEVICECHAT_AUDIO_B_RESINDEX = 9;</code>
     */
    public static final int Pb_DEVICECHAT_AUDIO_B_RESINDEX_VALUE = 9;
    /**
     * <pre>
     *对讲远端端视频播放资源ID
     * </pre>
     *
     * <code>Pb_DEVICECHAT_VIDEO_B_RESINDEX = 10;</code>
     */
    public static final int Pb_DEVICECHAT_VIDEO_B_RESINDEX_VALUE = 10;
    /**
     * <pre>
     *对讲本机视频播放资源ID
     * </pre>
     *
     * <code>Pb_DEVICECHAT_VIDEO_A_RESINDEX = 11;</code>
     */
    public static final int Pb_DEVICECHAT_VIDEO_A_RESINDEX_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_SystemPlayResIndex valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_SystemPlayResIndex forNumber(int value) {
      switch (value) {
        case 0: return Pb_DEVICE_MAINRES;
        case 9: return Pb_DEVICECHAT_AUDIO_B_RESINDEX;
        case 10: return Pb_DEVICECHAT_VIDEO_B_RESINDEX;
        case 11: return Pb_DEVICECHAT_VIDEO_A_RESINDEX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_SystemPlayResIndex>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_SystemPlayResIndex> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_SystemPlayResIndex>() {
            public Pb_SystemPlayResIndex findValueByNumber(int number) {
              return Pb_SystemPlayResIndex.forNumber(number);
            }
          };

    private final int value;

    private Pb_SystemPlayResIndex(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_SystemPlayResIndex)
  }

  /**
   * <pre>
   *编码模式 encodemode
   * </pre>
   *
   * Protobuf enum {@code Pb_StreamEncodeMode}
   */
  public enum Pb_StreamEncodeMode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *高带宽 对网络带宽要求高
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_ENCODEMODE_HIGH = 0;</code>
     */
    Pb_DEVICE_INVITECHAT_ENCODEMODE_HIGH(0),
    /**
     * <pre>
     *高性能 对机器配置要求高
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_ENCODEMODE_MIDDLE = 1;</code>
     */
    Pb_DEVICE_INVITECHAT_ENCODEMODE_MIDDLE(1),
    /**
     * <pre>
     *低带宽 对机器配置要求高,但对带宽要求相对较低
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_ENCODEMODE_LOW = 2;</code>
     */
    Pb_DEVICE_INVITECHAT_ENCODEMODE_LOW(2),
    /**
     * <pre>
     *使用系统默认 即使用系统设置的编码 由采集端和播放端握手决定
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_SYSDEFAULT = 255;</code>
     */
    Pb_DEVICE_INVITECHAT_SYSDEFAULT(255),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *高带宽 对网络带宽要求高
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_ENCODEMODE_HIGH = 0;</code>
     */
    public static final int Pb_DEVICE_INVITECHAT_ENCODEMODE_HIGH_VALUE = 0;
    /**
     * <pre>
     *高性能 对机器配置要求高
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_ENCODEMODE_MIDDLE = 1;</code>
     */
    public static final int Pb_DEVICE_INVITECHAT_ENCODEMODE_MIDDLE_VALUE = 1;
    /**
     * <pre>
     *低带宽 对机器配置要求高,但对带宽要求相对较低
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_ENCODEMODE_LOW = 2;</code>
     */
    public static final int Pb_DEVICE_INVITECHAT_ENCODEMODE_LOW_VALUE = 2;
    /**
     * <pre>
     *使用系统默认 即使用系统设置的编码 由采集端和播放端握手决定
     * </pre>
     *
     * <code>Pb_DEVICE_INVITECHAT_SYSDEFAULT = 255;</code>
     */
    public static final int Pb_DEVICE_INVITECHAT_SYSDEFAULT_VALUE = 255;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_StreamEncodeMode valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_StreamEncodeMode forNumber(int value) {
      switch (value) {
        case 0: return Pb_DEVICE_INVITECHAT_ENCODEMODE_HIGH;
        case 1: return Pb_DEVICE_INVITECHAT_ENCODEMODE_MIDDLE;
        case 2: return Pb_DEVICE_INVITECHAT_ENCODEMODE_LOW;
        case 255: return Pb_DEVICE_INVITECHAT_SYSDEFAULT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_StreamEncodeMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_StreamEncodeMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_StreamEncodeMode>() {
            public Pb_StreamEncodeMode findValueByNumber(int number) {
              return Pb_StreamEncodeMode.forNumber(number);
            }
          };

    private final int value;

    private Pb_StreamEncodeMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_StreamEncodeMode)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
