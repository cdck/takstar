// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interface_statistic.proto

package com.mogujie.tt.protobuf;

public final class InterfaceStatistic {
  private InterfaceStatistic() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface pbui_Type_MeetDoReqStatisticOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoReqStatistic)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *会议ID 为0表示查询当前会议
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    int getMeetingid();
  }
  /**
   * <pre>
   *查询会议统计
   *call
   *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
   *method: query
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetDoReqStatistic}
   */
  public  static final class pbui_Type_MeetDoReqStatistic extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetDoReqStatistic, pbui_Type_MeetDoReqStatistic.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoReqStatistic)
      pbui_Type_MeetDoReqStatisticOrBuilder {
    private pbui_Type_MeetDoReqStatistic() {
    }
    public static final int MEETINGID_FIELD_NUMBER = 1;
    private int meetingid_;
    /**
     * <pre>
     *会议ID 为0表示查询当前会议
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    public int getMeetingid() {
      return meetingid_;
    }
    /**
     * <pre>
     *会议ID 为0表示查询当前会议
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    private void setMeetingid(int value) {
      
      meetingid_ = value;
    }
    /**
     * <pre>
     *会议ID 为0表示查询当前会议
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    private void clearMeetingid() {
      
      meetingid_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meetingid_ != 0) {
        output.writeFixed32(1, meetingid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (meetingid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, meetingid_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *查询会议统计
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoReqStatistic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoReqStatistic)
        com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatisticOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *会议ID 为0表示查询当前会议
       * </pre>
       *
       * <code>fixed32 meetingid = 1;</code>
       */
      public int getMeetingid() {
        return instance.getMeetingid();
      }
      /**
       * <pre>
       *会议ID 为0表示查询当前会议
       * </pre>
       *
       * <code>fixed32 meetingid = 1;</code>
       */
      public Builder setMeetingid(int value) {
        copyOnWrite();
        instance.setMeetingid(value);
        return this;
      }
      /**
       * <pre>
       *会议ID 为0表示查询当前会议
       * </pre>
       *
       * <code>fixed32 meetingid = 1;</code>
       */
      public Builder clearMeetingid() {
        copyOnWrite();
        instance.clearMeetingid();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoReqStatistic)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic other = (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic) arg1;
          meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
              other.meetingid_ != 0, other.meetingid_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  meetingid_ = input.readFixed32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoReqStatistic)
    private static final com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetDoReqStatistic();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetDoReqStatistic getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoReqStatistic> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetDoReqStatistic> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_MeetStatisticInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStatisticInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    int getMeetingid();

    /**
     * <pre>
     *会议名称
     * </pre>
     *
     * <code>bytes meetname = 2;</code>
     */
    com.google.protobuf.ByteString getMeetname();

    /**
     * <pre>
     *流请求数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 3;</code>
     */
    int getStreamgetcount();

    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 4;</code>
     */
    int getScreengetcount();

    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 5;</code>
     */
    int getFilegetcount();

    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 6;</code>
     */
    int getChatcount();

    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 7;</code>
     */
    int getServicegetcount();

    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 8;</code>
     */
    int getWhiteboardopencount();

    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 9;</code>
     */
    int getWhiteboardusecount();

    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 10;</code>
     */
    int getVotecount();

    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 11;</code>
     */
    int getElectioncount();

    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 12;</code>
     */
    int getQuestioncount();

    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 13;</code>
     */
    int getBulletcount();

    /**
     * <pre>
     *创建时间 秒
     * </pre>
     *
     * <code>fixed64 addtime = 14;</code>
     */
    long getAddtime();
  }
  /**
   * <pre>
   *返回查询会议统计通知
   *callback
   *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
   *method: notify
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetStatisticInfo}
   */
  public  static final class pbui_Type_MeetStatisticInfo extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetStatisticInfo, pbui_Type_MeetStatisticInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetStatisticInfo)
      pbui_Type_MeetStatisticInfoOrBuilder {
    private pbui_Type_MeetStatisticInfo() {
      meetname_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int MEETINGID_FIELD_NUMBER = 1;
    private int meetingid_;
    /**
     * <pre>
     *会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    public int getMeetingid() {
      return meetingid_;
    }
    /**
     * <pre>
     *会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    private void setMeetingid(int value) {
      
      meetingid_ = value;
    }
    /**
     * <pre>
     *会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 1;</code>
     */
    private void clearMeetingid() {
      
      meetingid_ = 0;
    }

    public static final int MEETNAME_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString meetname_;
    /**
     * <pre>
     *会议名称
     * </pre>
     *
     * <code>bytes meetname = 2;</code>
     */
    public com.google.protobuf.ByteString getMeetname() {
      return meetname_;
    }
    /**
     * <pre>
     *会议名称
     * </pre>
     *
     * <code>bytes meetname = 2;</code>
     */
    private void setMeetname(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      meetname_ = value;
    }
    /**
     * <pre>
     *会议名称
     * </pre>
     *
     * <code>bytes meetname = 2;</code>
     */
    private void clearMeetname() {
      
      meetname_ = getDefaultInstance().getMeetname();
    }

    public static final int STREAMGETCOUNT_FIELD_NUMBER = 3;
    private int streamgetcount_;
    /**
     * <pre>
     *流请求数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 3;</code>
     */
    public int getStreamgetcount() {
      return streamgetcount_;
    }
    /**
     * <pre>
     *流请求数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 3;</code>
     */
    private void setStreamgetcount(int value) {
      
      streamgetcount_ = value;
    }
    /**
     * <pre>
     *流请求数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 3;</code>
     */
    private void clearStreamgetcount() {
      
      streamgetcount_ = 0;
    }

    public static final int SCREENGETCOUNT_FIELD_NUMBER = 4;
    private int screengetcount_;
    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 4;</code>
     */
    public int getScreengetcount() {
      return screengetcount_;
    }
    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 4;</code>
     */
    private void setScreengetcount(int value) {
      
      screengetcount_ = value;
    }
    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 4;</code>
     */
    private void clearScreengetcount() {
      
      screengetcount_ = 0;
    }

    public static final int FILEGETCOUNT_FIELD_NUMBER = 5;
    private int filegetcount_;
    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 5;</code>
     */
    public int getFilegetcount() {
      return filegetcount_;
    }
    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 5;</code>
     */
    private void setFilegetcount(int value) {
      
      filegetcount_ = value;
    }
    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 5;</code>
     */
    private void clearFilegetcount() {
      
      filegetcount_ = 0;
    }

    public static final int CHATCOUNT_FIELD_NUMBER = 6;
    private int chatcount_;
    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 6;</code>
     */
    public int getChatcount() {
      return chatcount_;
    }
    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 6;</code>
     */
    private void setChatcount(int value) {
      
      chatcount_ = value;
    }
    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 6;</code>
     */
    private void clearChatcount() {
      
      chatcount_ = 0;
    }

    public static final int SERVICEGETCOUNT_FIELD_NUMBER = 7;
    private int servicegetcount_;
    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 7;</code>
     */
    public int getServicegetcount() {
      return servicegetcount_;
    }
    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 7;</code>
     */
    private void setServicegetcount(int value) {
      
      servicegetcount_ = value;
    }
    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 7;</code>
     */
    private void clearServicegetcount() {
      
      servicegetcount_ = 0;
    }

    public static final int WHITEBOARDOPENCOUNT_FIELD_NUMBER = 8;
    private int whiteboardopencount_;
    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 8;</code>
     */
    public int getWhiteboardopencount() {
      return whiteboardopencount_;
    }
    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 8;</code>
     */
    private void setWhiteboardopencount(int value) {
      
      whiteboardopencount_ = value;
    }
    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 8;</code>
     */
    private void clearWhiteboardopencount() {
      
      whiteboardopencount_ = 0;
    }

    public static final int WHITEBOARDUSECOUNT_FIELD_NUMBER = 9;
    private int whiteboardusecount_;
    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 9;</code>
     */
    public int getWhiteboardusecount() {
      return whiteboardusecount_;
    }
    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 9;</code>
     */
    private void setWhiteboardusecount(int value) {
      
      whiteboardusecount_ = value;
    }
    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 9;</code>
     */
    private void clearWhiteboardusecount() {
      
      whiteboardusecount_ = 0;
    }

    public static final int VOTECOUNT_FIELD_NUMBER = 10;
    private int votecount_;
    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 10;</code>
     */
    public int getVotecount() {
      return votecount_;
    }
    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 10;</code>
     */
    private void setVotecount(int value) {
      
      votecount_ = value;
    }
    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 10;</code>
     */
    private void clearVotecount() {
      
      votecount_ = 0;
    }

    public static final int ELECTIONCOUNT_FIELD_NUMBER = 11;
    private int electioncount_;
    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 11;</code>
     */
    public int getElectioncount() {
      return electioncount_;
    }
    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 11;</code>
     */
    private void setElectioncount(int value) {
      
      electioncount_ = value;
    }
    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 11;</code>
     */
    private void clearElectioncount() {
      
      electioncount_ = 0;
    }

    public static final int QUESTIONCOUNT_FIELD_NUMBER = 12;
    private int questioncount_;
    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 12;</code>
     */
    public int getQuestioncount() {
      return questioncount_;
    }
    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 12;</code>
     */
    private void setQuestioncount(int value) {
      
      questioncount_ = value;
    }
    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 12;</code>
     */
    private void clearQuestioncount() {
      
      questioncount_ = 0;
    }

    public static final int BULLETCOUNT_FIELD_NUMBER = 13;
    private int bulletcount_;
    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 13;</code>
     */
    public int getBulletcount() {
      return bulletcount_;
    }
    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 13;</code>
     */
    private void setBulletcount(int value) {
      
      bulletcount_ = value;
    }
    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 13;</code>
     */
    private void clearBulletcount() {
      
      bulletcount_ = 0;
    }

    public static final int ADDTIME_FIELD_NUMBER = 14;
    private long addtime_;
    /**
     * <pre>
     *创建时间 秒
     * </pre>
     *
     * <code>fixed64 addtime = 14;</code>
     */
    public long getAddtime() {
      return addtime_;
    }
    /**
     * <pre>
     *创建时间 秒
     * </pre>
     *
     * <code>fixed64 addtime = 14;</code>
     */
    private void setAddtime(long value) {
      
      addtime_ = value;
    }
    /**
     * <pre>
     *创建时间 秒
     * </pre>
     *
     * <code>fixed64 addtime = 14;</code>
     */
    private void clearAddtime() {
      
      addtime_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meetingid_ != 0) {
        output.writeFixed32(1, meetingid_);
      }
      if (!meetname_.isEmpty()) {
        output.writeBytes(2, meetname_);
      }
      if (streamgetcount_ != 0) {
        output.writeFixed32(3, streamgetcount_);
      }
      if (screengetcount_ != 0) {
        output.writeFixed32(4, screengetcount_);
      }
      if (filegetcount_ != 0) {
        output.writeFixed32(5, filegetcount_);
      }
      if (chatcount_ != 0) {
        output.writeFixed32(6, chatcount_);
      }
      if (servicegetcount_ != 0) {
        output.writeFixed32(7, servicegetcount_);
      }
      if (whiteboardopencount_ != 0) {
        output.writeFixed32(8, whiteboardopencount_);
      }
      if (whiteboardusecount_ != 0) {
        output.writeFixed32(9, whiteboardusecount_);
      }
      if (votecount_ != 0) {
        output.writeFixed32(10, votecount_);
      }
      if (electioncount_ != 0) {
        output.writeFixed32(11, electioncount_);
      }
      if (questioncount_ != 0) {
        output.writeFixed32(12, questioncount_);
      }
      if (bulletcount_ != 0) {
        output.writeFixed32(13, bulletcount_);
      }
      if (addtime_ != 0L) {
        output.writeFixed64(14, addtime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (meetingid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, meetingid_);
      }
      if (!meetname_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, meetname_);
      }
      if (streamgetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, streamgetcount_);
      }
      if (screengetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, screengetcount_);
      }
      if (filegetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, filegetcount_);
      }
      if (chatcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, chatcount_);
      }
      if (servicegetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, servicegetcount_);
      }
      if (whiteboardopencount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, whiteboardopencount_);
      }
      if (whiteboardusecount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, whiteboardusecount_);
      }
      if (votecount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(10, votecount_);
      }
      if (electioncount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(11, electioncount_);
      }
      if (questioncount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(12, questioncount_);
      }
      if (bulletcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(13, bulletcount_);
      }
      if (addtime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(14, addtime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *返回查询会议统计通知
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStatisticInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStatisticInfo)
        com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfoOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *会议ID
       * </pre>
       *
       * <code>fixed32 meetingid = 1;</code>
       */
      public int getMeetingid() {
        return instance.getMeetingid();
      }
      /**
       * <pre>
       *会议ID
       * </pre>
       *
       * <code>fixed32 meetingid = 1;</code>
       */
      public Builder setMeetingid(int value) {
        copyOnWrite();
        instance.setMeetingid(value);
        return this;
      }
      /**
       * <pre>
       *会议ID
       * </pre>
       *
       * <code>fixed32 meetingid = 1;</code>
       */
      public Builder clearMeetingid() {
        copyOnWrite();
        instance.clearMeetingid();
        return this;
      }

      /**
       * <pre>
       *会议名称
       * </pre>
       *
       * <code>bytes meetname = 2;</code>
       */
      public com.google.protobuf.ByteString getMeetname() {
        return instance.getMeetname();
      }
      /**
       * <pre>
       *会议名称
       * </pre>
       *
       * <code>bytes meetname = 2;</code>
       */
      public Builder setMeetname(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMeetname(value);
        return this;
      }
      /**
       * <pre>
       *会议名称
       * </pre>
       *
       * <code>bytes meetname = 2;</code>
       */
      public Builder clearMeetname() {
        copyOnWrite();
        instance.clearMeetname();
        return this;
      }

      /**
       * <pre>
       *流请求数
       * </pre>
       *
       * <code>fixed32 streamgetcount = 3;</code>
       */
      public int getStreamgetcount() {
        return instance.getStreamgetcount();
      }
      /**
       * <pre>
       *流请求数
       * </pre>
       *
       * <code>fixed32 streamgetcount = 3;</code>
       */
      public Builder setStreamgetcount(int value) {
        copyOnWrite();
        instance.setStreamgetcount(value);
        return this;
      }
      /**
       * <pre>
       *流请求数
       * </pre>
       *
       * <code>fixed32 streamgetcount = 3;</code>
       */
      public Builder clearStreamgetcount() {
        copyOnWrite();
        instance.clearStreamgetcount();
        return this;
      }

      /**
       * <pre>
       *同屏请求数
       * </pre>
       *
       * <code>fixed32 screengetcount = 4;</code>
       */
      public int getScreengetcount() {
        return instance.getScreengetcount();
      }
      /**
       * <pre>
       *同屏请求数
       * </pre>
       *
       * <code>fixed32 screengetcount = 4;</code>
       */
      public Builder setScreengetcount(int value) {
        copyOnWrite();
        instance.setScreengetcount(value);
        return this;
      }
      /**
       * <pre>
       *同屏请求数
       * </pre>
       *
       * <code>fixed32 screengetcount = 4;</code>
       */
      public Builder clearScreengetcount() {
        copyOnWrite();
        instance.clearScreengetcount();
        return this;
      }

      /**
       * <pre>
       *文件请求数
       * </pre>
       *
       * <code>fixed32 filegetcount = 5;</code>
       */
      public int getFilegetcount() {
        return instance.getFilegetcount();
      }
      /**
       * <pre>
       *文件请求数
       * </pre>
       *
       * <code>fixed32 filegetcount = 5;</code>
       */
      public Builder setFilegetcount(int value) {
        copyOnWrite();
        instance.setFilegetcount(value);
        return this;
      }
      /**
       * <pre>
       *文件请求数
       * </pre>
       *
       * <code>fixed32 filegetcount = 5;</code>
       */
      public Builder clearFilegetcount() {
        copyOnWrite();
        instance.clearFilegetcount();
        return this;
      }

      /**
       * <pre>
       *交流次数
       * </pre>
       *
       * <code>fixed32 chatcount = 6;</code>
       */
      public int getChatcount() {
        return instance.getChatcount();
      }
      /**
       * <pre>
       *交流次数
       * </pre>
       *
       * <code>fixed32 chatcount = 6;</code>
       */
      public Builder setChatcount(int value) {
        copyOnWrite();
        instance.setChatcount(value);
        return this;
      }
      /**
       * <pre>
       *交流次数
       * </pre>
       *
       * <code>fixed32 chatcount = 6;</code>
       */
      public Builder clearChatcount() {
        copyOnWrite();
        instance.clearChatcount();
        return this;
      }

      /**
       * <pre>
       *服务请求数
       * </pre>
       *
       * <code>fixed32 servicegetcount = 7;</code>
       */
      public int getServicegetcount() {
        return instance.getServicegetcount();
      }
      /**
       * <pre>
       *服务请求数
       * </pre>
       *
       * <code>fixed32 servicegetcount = 7;</code>
       */
      public Builder setServicegetcount(int value) {
        copyOnWrite();
        instance.setServicegetcount(value);
        return this;
      }
      /**
       * <pre>
       *服务请求数
       * </pre>
       *
       * <code>fixed32 servicegetcount = 7;</code>
       */
      public Builder clearServicegetcount() {
        copyOnWrite();
        instance.clearServicegetcount();
        return this;
      }

      /**
       * <pre>
       *白板发起次数
       * </pre>
       *
       * <code>fixed32 whiteboardopencount = 8;</code>
       */
      public int getWhiteboardopencount() {
        return instance.getWhiteboardopencount();
      }
      /**
       * <pre>
       *白板发起次数
       * </pre>
       *
       * <code>fixed32 whiteboardopencount = 8;</code>
       */
      public Builder setWhiteboardopencount(int value) {
        copyOnWrite();
        instance.setWhiteboardopencount(value);
        return this;
      }
      /**
       * <pre>
       *白板发起次数
       * </pre>
       *
       * <code>fixed32 whiteboardopencount = 8;</code>
       */
      public Builder clearWhiteboardopencount() {
        copyOnWrite();
        instance.clearWhiteboardopencount();
        return this;
      }

      /**
       * <pre>
       *白板交流次数
       * </pre>
       *
       * <code>fixed32 whiteboardusecount = 9;</code>
       */
      public int getWhiteboardusecount() {
        return instance.getWhiteboardusecount();
      }
      /**
       * <pre>
       *白板交流次数
       * </pre>
       *
       * <code>fixed32 whiteboardusecount = 9;</code>
       */
      public Builder setWhiteboardusecount(int value) {
        copyOnWrite();
        instance.setWhiteboardusecount(value);
        return this;
      }
      /**
       * <pre>
       *白板交流次数
       * </pre>
       *
       * <code>fixed32 whiteboardusecount = 9;</code>
       */
      public Builder clearWhiteboardusecount() {
        copyOnWrite();
        instance.clearWhiteboardusecount();
        return this;
      }

      /**
       * <pre>
       *投票发起次数
       * </pre>
       *
       * <code>fixed32 votecount = 10;</code>
       */
      public int getVotecount() {
        return instance.getVotecount();
      }
      /**
       * <pre>
       *投票发起次数
       * </pre>
       *
       * <code>fixed32 votecount = 10;</code>
       */
      public Builder setVotecount(int value) {
        copyOnWrite();
        instance.setVotecount(value);
        return this;
      }
      /**
       * <pre>
       *投票发起次数
       * </pre>
       *
       * <code>fixed32 votecount = 10;</code>
       */
      public Builder clearVotecount() {
        copyOnWrite();
        instance.clearVotecount();
        return this;
      }

      /**
       * <pre>
       *选举发起次数
       * </pre>
       *
       * <code>fixed32 electioncount = 11;</code>
       */
      public int getElectioncount() {
        return instance.getElectioncount();
      }
      /**
       * <pre>
       *选举发起次数
       * </pre>
       *
       * <code>fixed32 electioncount = 11;</code>
       */
      public Builder setElectioncount(int value) {
        copyOnWrite();
        instance.setElectioncount(value);
        return this;
      }
      /**
       * <pre>
       *选举发起次数
       * </pre>
       *
       * <code>fixed32 electioncount = 11;</code>
       */
      public Builder clearElectioncount() {
        copyOnWrite();
        instance.clearElectioncount();
        return this;
      }

      /**
       * <pre>
       *问卷调查发起次数
       * </pre>
       *
       * <code>fixed32 questioncount = 12;</code>
       */
      public int getQuestioncount() {
        return instance.getQuestioncount();
      }
      /**
       * <pre>
       *问卷调查发起次数
       * </pre>
       *
       * <code>fixed32 questioncount = 12;</code>
       */
      public Builder setQuestioncount(int value) {
        copyOnWrite();
        instance.setQuestioncount(value);
        return this;
      }
      /**
       * <pre>
       *问卷调查发起次数
       * </pre>
       *
       * <code>fixed32 questioncount = 12;</code>
       */
      public Builder clearQuestioncount() {
        copyOnWrite();
        instance.clearQuestioncount();
        return this;
      }

      /**
       * <pre>
       *公告发起次数
       * </pre>
       *
       * <code>fixed32 bulletcount = 13;</code>
       */
      public int getBulletcount() {
        return instance.getBulletcount();
      }
      /**
       * <pre>
       *公告发起次数
       * </pre>
       *
       * <code>fixed32 bulletcount = 13;</code>
       */
      public Builder setBulletcount(int value) {
        copyOnWrite();
        instance.setBulletcount(value);
        return this;
      }
      /**
       * <pre>
       *公告发起次数
       * </pre>
       *
       * <code>fixed32 bulletcount = 13;</code>
       */
      public Builder clearBulletcount() {
        copyOnWrite();
        instance.clearBulletcount();
        return this;
      }

      /**
       * <pre>
       *创建时间 秒
       * </pre>
       *
       * <code>fixed64 addtime = 14;</code>
       */
      public long getAddtime() {
        return instance.getAddtime();
      }
      /**
       * <pre>
       *创建时间 秒
       * </pre>
       *
       * <code>fixed64 addtime = 14;</code>
       */
      public Builder setAddtime(long value) {
        copyOnWrite();
        instance.setAddtime(value);
        return this;
      }
      /**
       * <pre>
       *创建时间 秒
       * </pre>
       *
       * <code>fixed64 addtime = 14;</code>
       */
      public Builder clearAddtime() {
        copyOnWrite();
        instance.clearAddtime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStatisticInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo other = (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo) arg1;
          meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
              other.meetingid_ != 0, other.meetingid_);
          meetname_ = visitor.visitByteString(meetname_ != com.google.protobuf.ByteString.EMPTY, meetname_,
              other.meetname_ != com.google.protobuf.ByteString.EMPTY, other.meetname_);
          streamgetcount_ = visitor.visitInt(streamgetcount_ != 0, streamgetcount_,
              other.streamgetcount_ != 0, other.streamgetcount_);
          screengetcount_ = visitor.visitInt(screengetcount_ != 0, screengetcount_,
              other.screengetcount_ != 0, other.screengetcount_);
          filegetcount_ = visitor.visitInt(filegetcount_ != 0, filegetcount_,
              other.filegetcount_ != 0, other.filegetcount_);
          chatcount_ = visitor.visitInt(chatcount_ != 0, chatcount_,
              other.chatcount_ != 0, other.chatcount_);
          servicegetcount_ = visitor.visitInt(servicegetcount_ != 0, servicegetcount_,
              other.servicegetcount_ != 0, other.servicegetcount_);
          whiteboardopencount_ = visitor.visitInt(whiteboardopencount_ != 0, whiteboardopencount_,
              other.whiteboardopencount_ != 0, other.whiteboardopencount_);
          whiteboardusecount_ = visitor.visitInt(whiteboardusecount_ != 0, whiteboardusecount_,
              other.whiteboardusecount_ != 0, other.whiteboardusecount_);
          votecount_ = visitor.visitInt(votecount_ != 0, votecount_,
              other.votecount_ != 0, other.votecount_);
          electioncount_ = visitor.visitInt(electioncount_ != 0, electioncount_,
              other.electioncount_ != 0, other.electioncount_);
          questioncount_ = visitor.visitInt(questioncount_ != 0, questioncount_,
              other.questioncount_ != 0, other.questioncount_);
          bulletcount_ = visitor.visitInt(bulletcount_ != 0, bulletcount_,
              other.bulletcount_ != 0, other.bulletcount_);
          addtime_ = visitor.visitLong(addtime_ != 0L, addtime_,
              other.addtime_ != 0L, other.addtime_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  meetingid_ = input.readFixed32();
                  break;
                }
                case 18: {

                  meetname_ = input.readBytes();
                  break;
                }
                case 29: {

                  streamgetcount_ = input.readFixed32();
                  break;
                }
                case 37: {

                  screengetcount_ = input.readFixed32();
                  break;
                }
                case 45: {

                  filegetcount_ = input.readFixed32();
                  break;
                }
                case 53: {

                  chatcount_ = input.readFixed32();
                  break;
                }
                case 61: {

                  servicegetcount_ = input.readFixed32();
                  break;
                }
                case 69: {

                  whiteboardopencount_ = input.readFixed32();
                  break;
                }
                case 77: {

                  whiteboardusecount_ = input.readFixed32();
                  break;
                }
                case 85: {

                  votecount_ = input.readFixed32();
                  break;
                }
                case 93: {

                  electioncount_ = input.readFixed32();
                  break;
                }
                case 101: {

                  questioncount_ = input.readFixed32();
                  break;
                }
                case 109: {

                  bulletcount_ = input.readFixed32();
                  break;
                }
                case 113: {

                  addtime_ = input.readFixed64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetStatisticInfo)
    private static final com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetStatisticInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetStatisticInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetStatisticInfo> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetStatisticInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_QueryQuarterStatisticOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_QueryQuarterStatistic)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    int getQuartertype();

    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 2;</code>
     */
    int getStartyear();

    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 startmonth = 3;</code>
     */
    int getStartmonth();

    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 4;</code>
     */
    int getEndyear();

    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 endmonth = 5;</code>
     */
    int getEndmonth();
  }
  /**
   * <pre>
   *按时间段查询会议统计
   *call
   *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
   *method: ask
   * </pre>
   *
   * Protobuf type {@code pbui_Type_QueryQuarterStatistic}
   */
  public  static final class pbui_Type_QueryQuarterStatistic extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_QueryQuarterStatistic, pbui_Type_QueryQuarterStatistic.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_QueryQuarterStatistic)
      pbui_Type_QueryQuarterStatisticOrBuilder {
    private pbui_Type_QueryQuarterStatistic() {
    }
    public static final int QUARTERTYPE_FIELD_NUMBER = 1;
    private int quartertype_;
    /**
     * <pre>
     *参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    public int getQuartertype() {
      return quartertype_;
    }
    /**
     * <pre>
     *参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    private void setQuartertype(int value) {
      
      quartertype_ = value;
    }
    /**
     * <pre>
     *参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    private void clearQuartertype() {
      
      quartertype_ = 0;
    }

    public static final int STARTYEAR_FIELD_NUMBER = 2;
    private int startyear_;
    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 2;</code>
     */
    public int getStartyear() {
      return startyear_;
    }
    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 2;</code>
     */
    private void setStartyear(int value) {
      
      startyear_ = value;
    }
    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 2;</code>
     */
    private void clearStartyear() {
      
      startyear_ = 0;
    }

    public static final int STARTMONTH_FIELD_NUMBER = 3;
    private int startmonth_;
    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 startmonth = 3;</code>
     */
    public int getStartmonth() {
      return startmonth_;
    }
    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 startmonth = 3;</code>
     */
    private void setStartmonth(int value) {
      
      startmonth_ = value;
    }
    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 startmonth = 3;</code>
     */
    private void clearStartmonth() {
      
      startmonth_ = 0;
    }

    public static final int ENDYEAR_FIELD_NUMBER = 4;
    private int endyear_;
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 4;</code>
     */
    public int getEndyear() {
      return endyear_;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 4;</code>
     */
    private void setEndyear(int value) {
      
      endyear_ = value;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 4;</code>
     */
    private void clearEndyear() {
      
      endyear_ = 0;
    }

    public static final int ENDMONTH_FIELD_NUMBER = 5;
    private int endmonth_;
    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 endmonth = 5;</code>
     */
    public int getEndmonth() {
      return endmonth_;
    }
    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 endmonth = 5;</code>
     */
    private void setEndmonth(int value) {
      
      endmonth_ = value;
    }
    /**
     * <pre>
     *&#47;/按月查询才有效
     * </pre>
     *
     * <code>fixed32 endmonth = 5;</code>
     */
    private void clearEndmonth() {
      
      endmonth_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (quartertype_ != 0) {
        output.writeFixed32(1, quartertype_);
      }
      if (startyear_ != 0) {
        output.writeFixed32(2, startyear_);
      }
      if (startmonth_ != 0) {
        output.writeFixed32(3, startmonth_);
      }
      if (endyear_ != 0) {
        output.writeFixed32(4, endyear_);
      }
      if (endmonth_ != 0) {
        output.writeFixed32(5, endmonth_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (quartertype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, quartertype_);
      }
      if (startyear_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, startyear_);
      }
      if (startmonth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, startmonth_);
      }
      if (endyear_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, endyear_);
      }
      if (endmonth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, endmonth_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *按时间段查询会议统计
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: ask
     * </pre>
     *
     * Protobuf type {@code pbui_Type_QueryQuarterStatistic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_QueryQuarterStatistic)
        com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatisticOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *参见 Pb_MeetStatisticFlag 定义
       * </pre>
       *
       * <code>fixed32 quartertype = 1;</code>
       */
      public int getQuartertype() {
        return instance.getQuartertype();
      }
      /**
       * <pre>
       *参见 Pb_MeetStatisticFlag 定义
       * </pre>
       *
       * <code>fixed32 quartertype = 1;</code>
       */
      public Builder setQuartertype(int value) {
        copyOnWrite();
        instance.setQuartertype(value);
        return this;
      }
      /**
       * <pre>
       *参见 Pb_MeetStatisticFlag 定义
       * </pre>
       *
       * <code>fixed32 quartertype = 1;</code>
       */
      public Builder clearQuartertype() {
        copyOnWrite();
        instance.clearQuartertype();
        return this;
      }

      /**
       * <pre>
       *统计时间段
       * </pre>
       *
       * <code>fixed32 startyear = 2;</code>
       */
      public int getStartyear() {
        return instance.getStartyear();
      }
      /**
       * <pre>
       *统计时间段
       * </pre>
       *
       * <code>fixed32 startyear = 2;</code>
       */
      public Builder setStartyear(int value) {
        copyOnWrite();
        instance.setStartyear(value);
        return this;
      }
      /**
       * <pre>
       *统计时间段
       * </pre>
       *
       * <code>fixed32 startyear = 2;</code>
       */
      public Builder clearStartyear() {
        copyOnWrite();
        instance.clearStartyear();
        return this;
      }

      /**
       * <pre>
       *&#47;/按月查询才有效
       * </pre>
       *
       * <code>fixed32 startmonth = 3;</code>
       */
      public int getStartmonth() {
        return instance.getStartmonth();
      }
      /**
       * <pre>
       *&#47;/按月查询才有效
       * </pre>
       *
       * <code>fixed32 startmonth = 3;</code>
       */
      public Builder setStartmonth(int value) {
        copyOnWrite();
        instance.setStartmonth(value);
        return this;
      }
      /**
       * <pre>
       *&#47;/按月查询才有效
       * </pre>
       *
       * <code>fixed32 startmonth = 3;</code>
       */
      public Builder clearStartmonth() {
        copyOnWrite();
        instance.clearStartmonth();
        return this;
      }

      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endyear = 4;</code>
       */
      public int getEndyear() {
        return instance.getEndyear();
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endyear = 4;</code>
       */
      public Builder setEndyear(int value) {
        copyOnWrite();
        instance.setEndyear(value);
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endyear = 4;</code>
       */
      public Builder clearEndyear() {
        copyOnWrite();
        instance.clearEndyear();
        return this;
      }

      /**
       * <pre>
       *&#47;/按月查询才有效
       * </pre>
       *
       * <code>fixed32 endmonth = 5;</code>
       */
      public int getEndmonth() {
        return instance.getEndmonth();
      }
      /**
       * <pre>
       *&#47;/按月查询才有效
       * </pre>
       *
       * <code>fixed32 endmonth = 5;</code>
       */
      public Builder setEndmonth(int value) {
        copyOnWrite();
        instance.setEndmonth(value);
        return this;
      }
      /**
       * <pre>
       *&#47;/按月查询才有效
       * </pre>
       *
       * <code>fixed32 endmonth = 5;</code>
       */
      public Builder clearEndmonth() {
        copyOnWrite();
        instance.clearEndmonth();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_QueryQuarterStatistic)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic other = (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic) arg1;
          quartertype_ = visitor.visitInt(quartertype_ != 0, quartertype_,
              other.quartertype_ != 0, other.quartertype_);
          startyear_ = visitor.visitInt(startyear_ != 0, startyear_,
              other.startyear_ != 0, other.startyear_);
          startmonth_ = visitor.visitInt(startmonth_ != 0, startmonth_,
              other.startmonth_ != 0, other.startmonth_);
          endyear_ = visitor.visitInt(endyear_ != 0, endyear_,
              other.endyear_ != 0, other.endyear_);
          endmonth_ = visitor.visitInt(endmonth_ != 0, endmonth_,
              other.endmonth_ != 0, other.endmonth_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  quartertype_ = input.readFixed32();
                  break;
                }
                case 21: {

                  startyear_ = input.readFixed32();
                  break;
                }
                case 29: {

                  startmonth_ = input.readFixed32();
                  break;
                }
                case 37: {

                  endyear_ = input.readFixed32();
                  break;
                }
                case 45: {

                  endmonth_ = input.readFixed32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_QueryQuarterStatistic)
    private static final com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_QueryQuarterStatistic();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_QueryQuarterStatistic getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_QueryQuarterStatistic> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_QueryQuarterStatistic> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Item_MeetOneStatisticOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Item_MeetOneStatistic)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 1;</code>
     */
    int getStartyear();

    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 startmonth = 2;</code>
     */
    int getStartmonth();

    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 3;</code>
     */
    int getEndyear();

    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endmonth = 4;</code>
     */
    int getEndmonth();

    /**
     * <pre>
     *总会议数
     * </pre>
     *
     * <code>fixed32 meetingcount = 5;</code>
     */
    int getMeetingcount();

    /**
     * <pre>
     *总计数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 6;</code>
     */
    int getStreamgetcount();

    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 7;</code>
     */
    int getScreengetcount();

    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 8;</code>
     */
    int getFilegetcount();

    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 9;</code>
     */
    int getChatcount();

    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 10;</code>
     */
    int getServicegetcount();

    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 11;</code>
     */
    int getWhiteboardopencount();

    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 12;</code>
     */
    int getWhiteboardusecount();

    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 13;</code>
     */
    int getVotecount();

    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 14;</code>
     */
    int getElectioncount();

    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 15;</code>
     */
    int getQuestioncount();

    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 16;</code>
     */
    int getBulletcount();
  }
  /**
   * Protobuf type {@code pbui_Item_MeetOneStatistic}
   */
  public  static final class pbui_Item_MeetOneStatistic extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Item_MeetOneStatistic, pbui_Item_MeetOneStatistic.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Item_MeetOneStatistic)
      pbui_Item_MeetOneStatisticOrBuilder {
    private pbui_Item_MeetOneStatistic() {
    }
    public static final int STARTYEAR_FIELD_NUMBER = 1;
    private int startyear_;
    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 1;</code>
     */
    public int getStartyear() {
      return startyear_;
    }
    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 1;</code>
     */
    private void setStartyear(int value) {
      
      startyear_ = value;
    }
    /**
     * <pre>
     *统计时间段
     * </pre>
     *
     * <code>fixed32 startyear = 1;</code>
     */
    private void clearStartyear() {
      
      startyear_ = 0;
    }

    public static final int STARTMONTH_FIELD_NUMBER = 2;
    private int startmonth_;
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 startmonth = 2;</code>
     */
    public int getStartmonth() {
      return startmonth_;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 startmonth = 2;</code>
     */
    private void setStartmonth(int value) {
      
      startmonth_ = value;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 startmonth = 2;</code>
     */
    private void clearStartmonth() {
      
      startmonth_ = 0;
    }

    public static final int ENDYEAR_FIELD_NUMBER = 3;
    private int endyear_;
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 3;</code>
     */
    public int getEndyear() {
      return endyear_;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 3;</code>
     */
    private void setEndyear(int value) {
      
      endyear_ = value;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endyear = 3;</code>
     */
    private void clearEndyear() {
      
      endyear_ = 0;
    }

    public static final int ENDMONTH_FIELD_NUMBER = 4;
    private int endmonth_;
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endmonth = 4;</code>
     */
    public int getEndmonth() {
      return endmonth_;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endmonth = 4;</code>
     */
    private void setEndmonth(int value) {
      
      endmonth_ = value;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>fixed32 endmonth = 4;</code>
     */
    private void clearEndmonth() {
      
      endmonth_ = 0;
    }

    public static final int MEETINGCOUNT_FIELD_NUMBER = 5;
    private int meetingcount_;
    /**
     * <pre>
     *总会议数
     * </pre>
     *
     * <code>fixed32 meetingcount = 5;</code>
     */
    public int getMeetingcount() {
      return meetingcount_;
    }
    /**
     * <pre>
     *总会议数
     * </pre>
     *
     * <code>fixed32 meetingcount = 5;</code>
     */
    private void setMeetingcount(int value) {
      
      meetingcount_ = value;
    }
    /**
     * <pre>
     *总会议数
     * </pre>
     *
     * <code>fixed32 meetingcount = 5;</code>
     */
    private void clearMeetingcount() {
      
      meetingcount_ = 0;
    }

    public static final int STREAMGETCOUNT_FIELD_NUMBER = 6;
    private int streamgetcount_;
    /**
     * <pre>
     *总计数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 6;</code>
     */
    public int getStreamgetcount() {
      return streamgetcount_;
    }
    /**
     * <pre>
     *总计数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 6;</code>
     */
    private void setStreamgetcount(int value) {
      
      streamgetcount_ = value;
    }
    /**
     * <pre>
     *总计数
     * </pre>
     *
     * <code>fixed32 streamgetcount = 6;</code>
     */
    private void clearStreamgetcount() {
      
      streamgetcount_ = 0;
    }

    public static final int SCREENGETCOUNT_FIELD_NUMBER = 7;
    private int screengetcount_;
    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 7;</code>
     */
    public int getScreengetcount() {
      return screengetcount_;
    }
    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 7;</code>
     */
    private void setScreengetcount(int value) {
      
      screengetcount_ = value;
    }
    /**
     * <pre>
     *同屏请求数
     * </pre>
     *
     * <code>fixed32 screengetcount = 7;</code>
     */
    private void clearScreengetcount() {
      
      screengetcount_ = 0;
    }

    public static final int FILEGETCOUNT_FIELD_NUMBER = 8;
    private int filegetcount_;
    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 8;</code>
     */
    public int getFilegetcount() {
      return filegetcount_;
    }
    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 8;</code>
     */
    private void setFilegetcount(int value) {
      
      filegetcount_ = value;
    }
    /**
     * <pre>
     *文件请求数
     * </pre>
     *
     * <code>fixed32 filegetcount = 8;</code>
     */
    private void clearFilegetcount() {
      
      filegetcount_ = 0;
    }

    public static final int CHATCOUNT_FIELD_NUMBER = 9;
    private int chatcount_;
    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 9;</code>
     */
    public int getChatcount() {
      return chatcount_;
    }
    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 9;</code>
     */
    private void setChatcount(int value) {
      
      chatcount_ = value;
    }
    /**
     * <pre>
     *交流次数
     * </pre>
     *
     * <code>fixed32 chatcount = 9;</code>
     */
    private void clearChatcount() {
      
      chatcount_ = 0;
    }

    public static final int SERVICEGETCOUNT_FIELD_NUMBER = 10;
    private int servicegetcount_;
    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 10;</code>
     */
    public int getServicegetcount() {
      return servicegetcount_;
    }
    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 10;</code>
     */
    private void setServicegetcount(int value) {
      
      servicegetcount_ = value;
    }
    /**
     * <pre>
     *服务请求数
     * </pre>
     *
     * <code>fixed32 servicegetcount = 10;</code>
     */
    private void clearServicegetcount() {
      
      servicegetcount_ = 0;
    }

    public static final int WHITEBOARDOPENCOUNT_FIELD_NUMBER = 11;
    private int whiteboardopencount_;
    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 11;</code>
     */
    public int getWhiteboardopencount() {
      return whiteboardopencount_;
    }
    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 11;</code>
     */
    private void setWhiteboardopencount(int value) {
      
      whiteboardopencount_ = value;
    }
    /**
     * <pre>
     *白板发起次数
     * </pre>
     *
     * <code>fixed32 whiteboardopencount = 11;</code>
     */
    private void clearWhiteboardopencount() {
      
      whiteboardopencount_ = 0;
    }

    public static final int WHITEBOARDUSECOUNT_FIELD_NUMBER = 12;
    private int whiteboardusecount_;
    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 12;</code>
     */
    public int getWhiteboardusecount() {
      return whiteboardusecount_;
    }
    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 12;</code>
     */
    private void setWhiteboardusecount(int value) {
      
      whiteboardusecount_ = value;
    }
    /**
     * <pre>
     *白板交流次数
     * </pre>
     *
     * <code>fixed32 whiteboardusecount = 12;</code>
     */
    private void clearWhiteboardusecount() {
      
      whiteboardusecount_ = 0;
    }

    public static final int VOTECOUNT_FIELD_NUMBER = 13;
    private int votecount_;
    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 13;</code>
     */
    public int getVotecount() {
      return votecount_;
    }
    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 13;</code>
     */
    private void setVotecount(int value) {
      
      votecount_ = value;
    }
    /**
     * <pre>
     *投票发起次数
     * </pre>
     *
     * <code>fixed32 votecount = 13;</code>
     */
    private void clearVotecount() {
      
      votecount_ = 0;
    }

    public static final int ELECTIONCOUNT_FIELD_NUMBER = 14;
    private int electioncount_;
    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 14;</code>
     */
    public int getElectioncount() {
      return electioncount_;
    }
    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 14;</code>
     */
    private void setElectioncount(int value) {
      
      electioncount_ = value;
    }
    /**
     * <pre>
     *选举发起次数
     * </pre>
     *
     * <code>fixed32 electioncount = 14;</code>
     */
    private void clearElectioncount() {
      
      electioncount_ = 0;
    }

    public static final int QUESTIONCOUNT_FIELD_NUMBER = 15;
    private int questioncount_;
    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 15;</code>
     */
    public int getQuestioncount() {
      return questioncount_;
    }
    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 15;</code>
     */
    private void setQuestioncount(int value) {
      
      questioncount_ = value;
    }
    /**
     * <pre>
     *问卷调查发起次数
     * </pre>
     *
     * <code>fixed32 questioncount = 15;</code>
     */
    private void clearQuestioncount() {
      
      questioncount_ = 0;
    }

    public static final int BULLETCOUNT_FIELD_NUMBER = 16;
    private int bulletcount_;
    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 16;</code>
     */
    public int getBulletcount() {
      return bulletcount_;
    }
    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 16;</code>
     */
    private void setBulletcount(int value) {
      
      bulletcount_ = value;
    }
    /**
     * <pre>
     *公告发起次数
     * </pre>
     *
     * <code>fixed32 bulletcount = 16;</code>
     */
    private void clearBulletcount() {
      
      bulletcount_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (startyear_ != 0) {
        output.writeFixed32(1, startyear_);
      }
      if (startmonth_ != 0) {
        output.writeFixed32(2, startmonth_);
      }
      if (endyear_ != 0) {
        output.writeFixed32(3, endyear_);
      }
      if (endmonth_ != 0) {
        output.writeFixed32(4, endmonth_);
      }
      if (meetingcount_ != 0) {
        output.writeFixed32(5, meetingcount_);
      }
      if (streamgetcount_ != 0) {
        output.writeFixed32(6, streamgetcount_);
      }
      if (screengetcount_ != 0) {
        output.writeFixed32(7, screengetcount_);
      }
      if (filegetcount_ != 0) {
        output.writeFixed32(8, filegetcount_);
      }
      if (chatcount_ != 0) {
        output.writeFixed32(9, chatcount_);
      }
      if (servicegetcount_ != 0) {
        output.writeFixed32(10, servicegetcount_);
      }
      if (whiteboardopencount_ != 0) {
        output.writeFixed32(11, whiteboardopencount_);
      }
      if (whiteboardusecount_ != 0) {
        output.writeFixed32(12, whiteboardusecount_);
      }
      if (votecount_ != 0) {
        output.writeFixed32(13, votecount_);
      }
      if (electioncount_ != 0) {
        output.writeFixed32(14, electioncount_);
      }
      if (questioncount_ != 0) {
        output.writeFixed32(15, questioncount_);
      }
      if (bulletcount_ != 0) {
        output.writeFixed32(16, bulletcount_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (startyear_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, startyear_);
      }
      if (startmonth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, startmonth_);
      }
      if (endyear_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, endyear_);
      }
      if (endmonth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, endmonth_);
      }
      if (meetingcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, meetingcount_);
      }
      if (streamgetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, streamgetcount_);
      }
      if (screengetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, screengetcount_);
      }
      if (filegetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, filegetcount_);
      }
      if (chatcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, chatcount_);
      }
      if (servicegetcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(10, servicegetcount_);
      }
      if (whiteboardopencount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(11, whiteboardopencount_);
      }
      if (whiteboardusecount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(12, whiteboardusecount_);
      }
      if (votecount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(13, votecount_);
      }
      if (electioncount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(14, electioncount_);
      }
      if (questioncount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(15, questioncount_);
      }
      if (bulletcount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(16, bulletcount_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code pbui_Item_MeetOneStatistic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Item_MeetOneStatistic)
        com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatisticOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *统计时间段
       * </pre>
       *
       * <code>fixed32 startyear = 1;</code>
       */
      public int getStartyear() {
        return instance.getStartyear();
      }
      /**
       * <pre>
       *统计时间段
       * </pre>
       *
       * <code>fixed32 startyear = 1;</code>
       */
      public Builder setStartyear(int value) {
        copyOnWrite();
        instance.setStartyear(value);
        return this;
      }
      /**
       * <pre>
       *统计时间段
       * </pre>
       *
       * <code>fixed32 startyear = 1;</code>
       */
      public Builder clearStartyear() {
        copyOnWrite();
        instance.clearStartyear();
        return this;
      }

      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 startmonth = 2;</code>
       */
      public int getStartmonth() {
        return instance.getStartmonth();
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 startmonth = 2;</code>
       */
      public Builder setStartmonth(int value) {
        copyOnWrite();
        instance.setStartmonth(value);
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 startmonth = 2;</code>
       */
      public Builder clearStartmonth() {
        copyOnWrite();
        instance.clearStartmonth();
        return this;
      }

      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endyear = 3;</code>
       */
      public int getEndyear() {
        return instance.getEndyear();
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endyear = 3;</code>
       */
      public Builder setEndyear(int value) {
        copyOnWrite();
        instance.setEndyear(value);
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endyear = 3;</code>
       */
      public Builder clearEndyear() {
        copyOnWrite();
        instance.clearEndyear();
        return this;
      }

      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endmonth = 4;</code>
       */
      public int getEndmonth() {
        return instance.getEndmonth();
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endmonth = 4;</code>
       */
      public Builder setEndmonth(int value) {
        copyOnWrite();
        instance.setEndmonth(value);
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>fixed32 endmonth = 4;</code>
       */
      public Builder clearEndmonth() {
        copyOnWrite();
        instance.clearEndmonth();
        return this;
      }

      /**
       * <pre>
       *总会议数
       * </pre>
       *
       * <code>fixed32 meetingcount = 5;</code>
       */
      public int getMeetingcount() {
        return instance.getMeetingcount();
      }
      /**
       * <pre>
       *总会议数
       * </pre>
       *
       * <code>fixed32 meetingcount = 5;</code>
       */
      public Builder setMeetingcount(int value) {
        copyOnWrite();
        instance.setMeetingcount(value);
        return this;
      }
      /**
       * <pre>
       *总会议数
       * </pre>
       *
       * <code>fixed32 meetingcount = 5;</code>
       */
      public Builder clearMeetingcount() {
        copyOnWrite();
        instance.clearMeetingcount();
        return this;
      }

      /**
       * <pre>
       *总计数
       * </pre>
       *
       * <code>fixed32 streamgetcount = 6;</code>
       */
      public int getStreamgetcount() {
        return instance.getStreamgetcount();
      }
      /**
       * <pre>
       *总计数
       * </pre>
       *
       * <code>fixed32 streamgetcount = 6;</code>
       */
      public Builder setStreamgetcount(int value) {
        copyOnWrite();
        instance.setStreamgetcount(value);
        return this;
      }
      /**
       * <pre>
       *总计数
       * </pre>
       *
       * <code>fixed32 streamgetcount = 6;</code>
       */
      public Builder clearStreamgetcount() {
        copyOnWrite();
        instance.clearStreamgetcount();
        return this;
      }

      /**
       * <pre>
       *同屏请求数
       * </pre>
       *
       * <code>fixed32 screengetcount = 7;</code>
       */
      public int getScreengetcount() {
        return instance.getScreengetcount();
      }
      /**
       * <pre>
       *同屏请求数
       * </pre>
       *
       * <code>fixed32 screengetcount = 7;</code>
       */
      public Builder setScreengetcount(int value) {
        copyOnWrite();
        instance.setScreengetcount(value);
        return this;
      }
      /**
       * <pre>
       *同屏请求数
       * </pre>
       *
       * <code>fixed32 screengetcount = 7;</code>
       */
      public Builder clearScreengetcount() {
        copyOnWrite();
        instance.clearScreengetcount();
        return this;
      }

      /**
       * <pre>
       *文件请求数
       * </pre>
       *
       * <code>fixed32 filegetcount = 8;</code>
       */
      public int getFilegetcount() {
        return instance.getFilegetcount();
      }
      /**
       * <pre>
       *文件请求数
       * </pre>
       *
       * <code>fixed32 filegetcount = 8;</code>
       */
      public Builder setFilegetcount(int value) {
        copyOnWrite();
        instance.setFilegetcount(value);
        return this;
      }
      /**
       * <pre>
       *文件请求数
       * </pre>
       *
       * <code>fixed32 filegetcount = 8;</code>
       */
      public Builder clearFilegetcount() {
        copyOnWrite();
        instance.clearFilegetcount();
        return this;
      }

      /**
       * <pre>
       *交流次数
       * </pre>
       *
       * <code>fixed32 chatcount = 9;</code>
       */
      public int getChatcount() {
        return instance.getChatcount();
      }
      /**
       * <pre>
       *交流次数
       * </pre>
       *
       * <code>fixed32 chatcount = 9;</code>
       */
      public Builder setChatcount(int value) {
        copyOnWrite();
        instance.setChatcount(value);
        return this;
      }
      /**
       * <pre>
       *交流次数
       * </pre>
       *
       * <code>fixed32 chatcount = 9;</code>
       */
      public Builder clearChatcount() {
        copyOnWrite();
        instance.clearChatcount();
        return this;
      }

      /**
       * <pre>
       *服务请求数
       * </pre>
       *
       * <code>fixed32 servicegetcount = 10;</code>
       */
      public int getServicegetcount() {
        return instance.getServicegetcount();
      }
      /**
       * <pre>
       *服务请求数
       * </pre>
       *
       * <code>fixed32 servicegetcount = 10;</code>
       */
      public Builder setServicegetcount(int value) {
        copyOnWrite();
        instance.setServicegetcount(value);
        return this;
      }
      /**
       * <pre>
       *服务请求数
       * </pre>
       *
       * <code>fixed32 servicegetcount = 10;</code>
       */
      public Builder clearServicegetcount() {
        copyOnWrite();
        instance.clearServicegetcount();
        return this;
      }

      /**
       * <pre>
       *白板发起次数
       * </pre>
       *
       * <code>fixed32 whiteboardopencount = 11;</code>
       */
      public int getWhiteboardopencount() {
        return instance.getWhiteboardopencount();
      }
      /**
       * <pre>
       *白板发起次数
       * </pre>
       *
       * <code>fixed32 whiteboardopencount = 11;</code>
       */
      public Builder setWhiteboardopencount(int value) {
        copyOnWrite();
        instance.setWhiteboardopencount(value);
        return this;
      }
      /**
       * <pre>
       *白板发起次数
       * </pre>
       *
       * <code>fixed32 whiteboardopencount = 11;</code>
       */
      public Builder clearWhiteboardopencount() {
        copyOnWrite();
        instance.clearWhiteboardopencount();
        return this;
      }

      /**
       * <pre>
       *白板交流次数
       * </pre>
       *
       * <code>fixed32 whiteboardusecount = 12;</code>
       */
      public int getWhiteboardusecount() {
        return instance.getWhiteboardusecount();
      }
      /**
       * <pre>
       *白板交流次数
       * </pre>
       *
       * <code>fixed32 whiteboardusecount = 12;</code>
       */
      public Builder setWhiteboardusecount(int value) {
        copyOnWrite();
        instance.setWhiteboardusecount(value);
        return this;
      }
      /**
       * <pre>
       *白板交流次数
       * </pre>
       *
       * <code>fixed32 whiteboardusecount = 12;</code>
       */
      public Builder clearWhiteboardusecount() {
        copyOnWrite();
        instance.clearWhiteboardusecount();
        return this;
      }

      /**
       * <pre>
       *投票发起次数
       * </pre>
       *
       * <code>fixed32 votecount = 13;</code>
       */
      public int getVotecount() {
        return instance.getVotecount();
      }
      /**
       * <pre>
       *投票发起次数
       * </pre>
       *
       * <code>fixed32 votecount = 13;</code>
       */
      public Builder setVotecount(int value) {
        copyOnWrite();
        instance.setVotecount(value);
        return this;
      }
      /**
       * <pre>
       *投票发起次数
       * </pre>
       *
       * <code>fixed32 votecount = 13;</code>
       */
      public Builder clearVotecount() {
        copyOnWrite();
        instance.clearVotecount();
        return this;
      }

      /**
       * <pre>
       *选举发起次数
       * </pre>
       *
       * <code>fixed32 electioncount = 14;</code>
       */
      public int getElectioncount() {
        return instance.getElectioncount();
      }
      /**
       * <pre>
       *选举发起次数
       * </pre>
       *
       * <code>fixed32 electioncount = 14;</code>
       */
      public Builder setElectioncount(int value) {
        copyOnWrite();
        instance.setElectioncount(value);
        return this;
      }
      /**
       * <pre>
       *选举发起次数
       * </pre>
       *
       * <code>fixed32 electioncount = 14;</code>
       */
      public Builder clearElectioncount() {
        copyOnWrite();
        instance.clearElectioncount();
        return this;
      }

      /**
       * <pre>
       *问卷调查发起次数
       * </pre>
       *
       * <code>fixed32 questioncount = 15;</code>
       */
      public int getQuestioncount() {
        return instance.getQuestioncount();
      }
      /**
       * <pre>
       *问卷调查发起次数
       * </pre>
       *
       * <code>fixed32 questioncount = 15;</code>
       */
      public Builder setQuestioncount(int value) {
        copyOnWrite();
        instance.setQuestioncount(value);
        return this;
      }
      /**
       * <pre>
       *问卷调查发起次数
       * </pre>
       *
       * <code>fixed32 questioncount = 15;</code>
       */
      public Builder clearQuestioncount() {
        copyOnWrite();
        instance.clearQuestioncount();
        return this;
      }

      /**
       * <pre>
       *公告发起次数
       * </pre>
       *
       * <code>fixed32 bulletcount = 16;</code>
       */
      public int getBulletcount() {
        return instance.getBulletcount();
      }
      /**
       * <pre>
       *公告发起次数
       * </pre>
       *
       * <code>fixed32 bulletcount = 16;</code>
       */
      public Builder setBulletcount(int value) {
        copyOnWrite();
        instance.setBulletcount(value);
        return this;
      }
      /**
       * <pre>
       *公告发起次数
       * </pre>
       *
       * <code>fixed32 bulletcount = 16;</code>
       */
      public Builder clearBulletcount() {
        copyOnWrite();
        instance.clearBulletcount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Item_MeetOneStatistic)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic other = (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic) arg1;
          startyear_ = visitor.visitInt(startyear_ != 0, startyear_,
              other.startyear_ != 0, other.startyear_);
          startmonth_ = visitor.visitInt(startmonth_ != 0, startmonth_,
              other.startmonth_ != 0, other.startmonth_);
          endyear_ = visitor.visitInt(endyear_ != 0, endyear_,
              other.endyear_ != 0, other.endyear_);
          endmonth_ = visitor.visitInt(endmonth_ != 0, endmonth_,
              other.endmonth_ != 0, other.endmonth_);
          meetingcount_ = visitor.visitInt(meetingcount_ != 0, meetingcount_,
              other.meetingcount_ != 0, other.meetingcount_);
          streamgetcount_ = visitor.visitInt(streamgetcount_ != 0, streamgetcount_,
              other.streamgetcount_ != 0, other.streamgetcount_);
          screengetcount_ = visitor.visitInt(screengetcount_ != 0, screengetcount_,
              other.screengetcount_ != 0, other.screengetcount_);
          filegetcount_ = visitor.visitInt(filegetcount_ != 0, filegetcount_,
              other.filegetcount_ != 0, other.filegetcount_);
          chatcount_ = visitor.visitInt(chatcount_ != 0, chatcount_,
              other.chatcount_ != 0, other.chatcount_);
          servicegetcount_ = visitor.visitInt(servicegetcount_ != 0, servicegetcount_,
              other.servicegetcount_ != 0, other.servicegetcount_);
          whiteboardopencount_ = visitor.visitInt(whiteboardopencount_ != 0, whiteboardopencount_,
              other.whiteboardopencount_ != 0, other.whiteboardopencount_);
          whiteboardusecount_ = visitor.visitInt(whiteboardusecount_ != 0, whiteboardusecount_,
              other.whiteboardusecount_ != 0, other.whiteboardusecount_);
          votecount_ = visitor.visitInt(votecount_ != 0, votecount_,
              other.votecount_ != 0, other.votecount_);
          electioncount_ = visitor.visitInt(electioncount_ != 0, electioncount_,
              other.electioncount_ != 0, other.electioncount_);
          questioncount_ = visitor.visitInt(questioncount_ != 0, questioncount_,
              other.questioncount_ != 0, other.questioncount_);
          bulletcount_ = visitor.visitInt(bulletcount_ != 0, bulletcount_,
              other.bulletcount_ != 0, other.bulletcount_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  startyear_ = input.readFixed32();
                  break;
                }
                case 21: {

                  startmonth_ = input.readFixed32();
                  break;
                }
                case 29: {

                  endyear_ = input.readFixed32();
                  break;
                }
                case 37: {

                  endmonth_ = input.readFixed32();
                  break;
                }
                case 45: {

                  meetingcount_ = input.readFixed32();
                  break;
                }
                case 53: {

                  streamgetcount_ = input.readFixed32();
                  break;
                }
                case 61: {

                  screengetcount_ = input.readFixed32();
                  break;
                }
                case 69: {

                  filegetcount_ = input.readFixed32();
                  break;
                }
                case 77: {

                  chatcount_ = input.readFixed32();
                  break;
                }
                case 85: {

                  servicegetcount_ = input.readFixed32();
                  break;
                }
                case 93: {

                  whiteboardopencount_ = input.readFixed32();
                  break;
                }
                case 101: {

                  whiteboardusecount_ = input.readFixed32();
                  break;
                }
                case 109: {

                  votecount_ = input.readFixed32();
                  break;
                }
                case 117: {

                  electioncount_ = input.readFixed32();
                  break;
                }
                case 125: {

                  questioncount_ = input.readFixed32();
                  break;
                }
                case 133: {

                  bulletcount_ = input.readFixed32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Item_MeetOneStatistic)
    private static final com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Item_MeetOneStatistic();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Item_MeetOneStatistic> PARSER;

    public static com.google.protobuf.Parser<pbui_Item_MeetOneStatistic> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_MeetQuarterStatisticInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetQuarterStatisticInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *&#47;/参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    int getQuartertype();

    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    java.util.List<com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic> 
        getItemList();
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic getItem(int index);
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    int getItemCount();
  }
  /**
   * <pre>
   *返回按时间段查询会议统计
   *callback
   *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
   *method: ask
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetQuarterStatisticInfo}
   */
  public  static final class pbui_Type_MeetQuarterStatisticInfo extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetQuarterStatisticInfo, pbui_Type_MeetQuarterStatisticInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetQuarterStatisticInfo)
      pbui_Type_MeetQuarterStatisticInfoOrBuilder {
    private pbui_Type_MeetQuarterStatisticInfo() {
      item_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int QUARTERTYPE_FIELD_NUMBER = 1;
    private int quartertype_;
    /**
     * <pre>
     *&#47;/参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    public int getQuartertype() {
      return quartertype_;
    }
    /**
     * <pre>
     *&#47;/参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    private void setQuartertype(int value) {
      
      quartertype_ = value;
    }
    /**
     * <pre>
     *&#47;/参见 Pb_MeetStatisticFlag 定义
     * </pre>
     *
     * <code>fixed32 quartertype = 1;</code>
     */
    private void clearQuartertype() {
      
      quartertype_ = 0;
    }

    public static final int ITEM_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic> item_;
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    public java.util.List<com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatisticOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatisticOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }
    private void ensureItemIsMutable() {
      if (!item_.isModifiable()) {
        item_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
       }
    }

    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.set(index, value);
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.Builder builderForValue) {
      ensureItemIsMutable();
      item_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void addItem(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(value);
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(index, value);
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void addItem(
        com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(builderForValue.build());
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void addAllItem(
        java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic> values) {
      ensureItemIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, item_);
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void clearItem() {
      item_ = emptyProtobufList();
    }
    /**
     * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
     */
    private void removeItem(int index) {
      ensureItemIsMutable();
      item_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (quartertype_ != 0) {
        output.writeFixed32(1, quartertype_);
      }
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(2, item_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (quartertype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, quartertype_);
      }
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, item_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *返回按时间段查询会议统计
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: ask
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetQuarterStatisticInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetQuarterStatisticInfo)
        com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfoOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *&#47;/参见 Pb_MeetStatisticFlag 定义
       * </pre>
       *
       * <code>fixed32 quartertype = 1;</code>
       */
      public int getQuartertype() {
        return instance.getQuartertype();
      }
      /**
       * <pre>
       *&#47;/参见 Pb_MeetStatisticFlag 定义
       * </pre>
       *
       * <code>fixed32 quartertype = 1;</code>
       */
      public Builder setQuartertype(int value) {
        copyOnWrite();
        instance.setQuartertype(value);
        return this;
      }
      /**
       * <pre>
       *&#47;/参见 Pb_MeetStatisticFlag 定义
       * </pre>
       *
       * <code>fixed32 quartertype = 1;</code>
       */
      public Builder clearQuartertype() {
        copyOnWrite();
        instance.clearQuartertype();
        return this;
      }

      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public java.util.List<com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic> getItemList() {
        return java.util.Collections.unmodifiableList(
            instance.getItemList());
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public int getItemCount() {
        return instance.getItemCount();
      }/**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic getItem(int index) {
        return instance.getItem(index);
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic value) {
        copyOnWrite();
        instance.setItem(index, value);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.Builder builderForValue) {
        copyOnWrite();
        instance.setItem(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder addItem(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic value) {
        copyOnWrite();
        instance.addItem(value);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic value) {
        copyOnWrite();
        instance.addItem(index, value);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder addItem(
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(builderForValue);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic> values) {
        copyOnWrite();
        instance.addAllItem(values);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder clearItem() {
        copyOnWrite();
        instance.clearItem();
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
       */
      public Builder removeItem(int index) {
        copyOnWrite();
        instance.removeItem(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetQuarterStatisticInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          item_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo other = (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo) arg1;
          quartertype_ = visitor.visitInt(quartertype_ != 0, quartertype_,
              other.quartertype_ != 0, other.quartertype_);
          item_= visitor.visitList(item_, other.item_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  quartertype_ = input.readFixed32();
                  break;
                }
                case 18: {
                  if (!item_.isModifiable()) {
                    item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                  }
                  item_.add(
                      input.readMessage(com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Item_MeetOneStatistic.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetQuarterStatisticInfo)
    private static final com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetQuarterStatisticInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStatistic.pbui_Type_MeetQuarterStatisticInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetQuarterStatisticInfo> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetQuarterStatisticInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
