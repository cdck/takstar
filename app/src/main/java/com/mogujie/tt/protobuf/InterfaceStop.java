// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interface_stop.proto

package com.mogujie.tt.protobuf;

public final class InterfaceStop {
  private InterfaceStop() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface pbui_Type_MeetStopResWorkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStopResWork)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    java.util.List<java.lang.Integer> getResList();
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    int getResCount();
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    int getRes(int index);
  }
  /**
   * <pre>
   *停止资源功能
   *callback
   *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
   *method: close
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetStopResWork}
   */
  public  static final class pbui_Type_MeetStopResWork extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetStopResWork, pbui_Type_MeetStopResWork.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetStopResWork)
      pbui_Type_MeetStopResWorkOrBuilder {
    private pbui_Type_MeetStopResWork() {
      res_ = emptyIntList();
    }
    public static final int RES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList res_;
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getResList() {
      return res_;
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    public int getResCount() {
      return res_.size();
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    public int getRes(int index) {
      return res_.getInt(index);
    }
    private void ensureResIsMutable() {
      if (!res_.isModifiable()) {
        res_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
       }
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    private void setRes(
        int index, int value) {
      ensureResIsMutable();
      res_.setInt(index, value);
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    private void addRes(int value) {
      ensureResIsMutable();
      res_.addInt(value);
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    private void addAllRes(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureResIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, res_);
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 1;</code>
     */
    private void clearRes() {
      res_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < res_.size(); i++) {
        output.writeFixed32(1, res_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getResList().size();
        size += dataSize;
        size += 1 * getResList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *停止资源功能
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: close
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStopResWork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStopResWork)
        com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWorkOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getResList() {
        return java.util.Collections.unmodifiableList(
            instance.getResList());
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 1;</code>
       */
      public int getResCount() {
        return instance.getResCount();
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 1;</code>
       */
      public int getRes(int index) {
        return instance.getRes(index);
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 1;</code>
       */
      public Builder setRes(
          int index, int value) {
        copyOnWrite();
        instance.setRes(index, value);
        return this;
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 1;</code>
       */
      public Builder addRes(int value) {
        copyOnWrite();
        instance.addRes(value);
        return this;
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 1;</code>
       */
      public Builder addAllRes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllRes(values);
        return this;
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 1;</code>
       */
      public Builder clearRes() {
        copyOnWrite();
        instance.clearRes();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStopResWork)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          res_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork other = (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork) arg1;
          res_= visitor.visitIntList(res_, other.res_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {
                  if (!res_.isModifiable()) {
                    res_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
                  }
                  res_.addInt(input.readFixed32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!res_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = res_.size();
                    res_ = res_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    res_.addInt(input.readFixed32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetStopResWork)
    private static final com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetStopResWork();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopResWork getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetStopResWork> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetStopResWork> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_MeetDoStopResWorkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoStopResWork)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    int getPlayflag();

    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    int getTriggeruserval();

    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    java.util.List<java.lang.Integer> getResList();
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    int getResCount();
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    int getRes(int index);

    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    java.util.List<java.lang.Integer> getDeviceidList();
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    int getDeviceidCount();
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    int getDeviceid(int index);
  }
  /**
   * <pre>
   *关闭资源功能
   *call
   *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
   *method: close
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetDoStopResWork}
   */
  public  static final class pbui_Type_MeetDoStopResWork extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetDoStopResWork, pbui_Type_MeetDoStopResWork.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoStopResWork)
      pbui_Type_MeetDoStopResWorkOrBuilder {
    private pbui_Type_MeetDoStopResWork() {
      res_ = emptyIntList();
      deviceid_ = emptyIntList();
    }
    private int bitField0_;
    public static final int PLAYFLAG_FIELD_NUMBER = 1;
    private int playflag_;
    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    public int getPlayflag() {
      return playflag_;
    }
    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    private void setPlayflag(int value) {
      
      playflag_ = value;
    }
    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    private void clearPlayflag() {
      
      playflag_ = 0;
    }

    public static final int TRIGGERUSERVAL_FIELD_NUMBER = 2;
    private int triggeruserval_;
    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    public int getTriggeruserval() {
      return triggeruserval_;
    }
    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    private void setTriggeruserval(int value) {
      
      triggeruserval_ = value;
    }
    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    private void clearTriggeruserval() {
      
      triggeruserval_ = 0;
    }

    public static final int RES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList res_;
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getResList() {
      return res_;
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    public int getResCount() {
      return res_.size();
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    public int getRes(int index) {
      return res_.getInt(index);
    }
    private void ensureResIsMutable() {
      if (!res_.isModifiable()) {
        res_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
       }
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    private void setRes(
        int index, int value) {
      ensureResIsMutable();
      res_.setInt(index, value);
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    private void addRes(int value) {
      ensureResIsMutable();
      res_.addInt(value);
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    private void addAllRes(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureResIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, res_);
    }
    /**
     * <pre>
     *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>repeated fixed32 res = 3;</code>
     */
    private void clearRes() {
      res_ = emptyIntList();
    }

    public static final int DEVICEID_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList deviceid_;
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getDeviceidList() {
      return deviceid_;
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    public int getDeviceidCount() {
      return deviceid_.size();
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    public int getDeviceid(int index) {
      return deviceid_.getInt(index);
    }
    private void ensureDeviceidIsMutable() {
      if (!deviceid_.isModifiable()) {
        deviceid_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
       }
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void setDeviceid(
        int index, int value) {
      ensureDeviceidIsMutable();
      deviceid_.setInt(index, value);
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void addDeviceid(int value) {
      ensureDeviceidIsMutable();
      deviceid_.addInt(value);
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void addAllDeviceid(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDeviceidIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, deviceid_);
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void clearDeviceid() {
      deviceid_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (playflag_ != 0) {
        output.writeFixed32(1, playflag_);
      }
      if (triggeruserval_ != 0) {
        output.writeFixed32(2, triggeruserval_);
      }
      for (int i = 0; i < res_.size(); i++) {
        output.writeFixed32(3, res_.getInt(i));
      }
      for (int i = 0; i < deviceid_.size(); i++) {
        output.writeFixed32(4, deviceid_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (playflag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, playflag_);
      }
      if (triggeruserval_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, triggeruserval_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getResList().size();
        size += dataSize;
        size += 1 * getResList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getDeviceidList().size();
        size += dataSize;
        size += 1 * getDeviceidList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *关闭资源功能
     *call
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: close
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoStopResWork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoStopResWork)
        com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWorkOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
       * </pre>
       *
       * <code>fixed32 playflag = 1;</code>
       */
      public int getPlayflag() {
        return instance.getPlayflag();
      }
      /**
       * <pre>
       *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
       * </pre>
       *
       * <code>fixed32 playflag = 1;</code>
       */
      public Builder setPlayflag(int value) {
        copyOnWrite();
        instance.setPlayflag(value);
        return this;
      }
      /**
       * <pre>
       *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
       * </pre>
       *
       * <code>fixed32 playflag = 1;</code>
       */
      public Builder clearPlayflag() {
        copyOnWrite();
        instance.clearPlayflag();
        return this;
      }

      /**
       * <pre>
       *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
       * </pre>
       *
       * <code>fixed32 triggeruserval = 2;</code>
       */
      public int getTriggeruserval() {
        return instance.getTriggeruserval();
      }
      /**
       * <pre>
       *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
       * </pre>
       *
       * <code>fixed32 triggeruserval = 2;</code>
       */
      public Builder setTriggeruserval(int value) {
        copyOnWrite();
        instance.setTriggeruserval(value);
        return this;
      }
      /**
       * <pre>
       *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
       * </pre>
       *
       * <code>fixed32 triggeruserval = 2;</code>
       */
      public Builder clearTriggeruserval() {
        copyOnWrite();
        instance.clearTriggeruserval();
        return this;
      }

      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getResList() {
        return java.util.Collections.unmodifiableList(
            instance.getResList());
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 3;</code>
       */
      public int getResCount() {
        return instance.getResCount();
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 3;</code>
       */
      public int getRes(int index) {
        return instance.getRes(index);
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 3;</code>
       */
      public Builder setRes(
          int index, int value) {
        copyOnWrite();
        instance.setRes(index, value);
        return this;
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 3;</code>
       */
      public Builder addRes(int value) {
        copyOnWrite();
        instance.addRes(value);
        return this;
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 3;</code>
       */
      public Builder addAllRes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllRes(values);
        return this;
      }
      /**
       * <pre>
       *有效资源个数,为空表示全部 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>repeated fixed32 res = 3;</code>
       */
      public Builder clearRes() {
        copyOnWrite();
        instance.clearRes();
        return this;
      }

      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getDeviceidList() {
        return java.util.Collections.unmodifiableList(
            instance.getDeviceidList());
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public int getDeviceidCount() {
        return instance.getDeviceidCount();
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public int getDeviceid(int index) {
        return instance.getDeviceid(index);
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder setDeviceid(
          int index, int value) {
        copyOnWrite();
        instance.setDeviceid(index, value);
        return this;
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder addDeviceid(int value) {
        copyOnWrite();
        instance.addDeviceid(value);
        return this;
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder addAllDeviceid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDeviceid(values);
        return this;
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder clearDeviceid() {
        copyOnWrite();
        instance.clearDeviceid();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoStopResWork)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          res_.makeImmutable();
          deviceid_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork other = (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork) arg1;
          playflag_ = visitor.visitInt(playflag_ != 0, playflag_,
              other.playflag_ != 0, other.playflag_);
          triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
              other.triggeruserval_ != 0, other.triggeruserval_);
          res_= visitor.visitIntList(res_, other.res_);
          deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  playflag_ = input.readFixed32();
                  break;
                }
                case 21: {

                  triggeruserval_ = input.readFixed32();
                  break;
                }
                case 29: {
                  if (!res_.isModifiable()) {
                    res_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
                  }
                  res_.addInt(input.readFixed32());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!res_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = res_.size();
                    res_ = res_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    res_.addInt(input.readFixed32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 37: {
                  if (!deviceid_.isModifiable()) {
                    deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                  }
                  deviceid_.addInt(input.readFixed32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = deviceid_.size();
                    deviceid_ = deviceid_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    deviceid_.addInt(input.readFixed32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoStopResWork)
    private static final com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetDoStopResWork();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopResWork getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoStopResWork> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetDoStopResWork> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_MeetDoStopTrrigerWorkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoStopTrrigerWork)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    int getPlayflag();

    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    int getTriggeruserval();

    /**
     * <pre>
     *触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 3;</code>
     */
    int getTriggerid();

    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    java.util.List<java.lang.Integer> getDeviceidList();
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    int getDeviceidCount();
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    int getDeviceid(int index);
  }
  /**
   * <pre>
   *停止触发器
   *call
   *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
   *method: stop
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetDoStopTrrigerWork}
   */
  public  static final class pbui_Type_MeetDoStopTrrigerWork extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetDoStopTrrigerWork, pbui_Type_MeetDoStopTrrigerWork.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoStopTrrigerWork)
      pbui_Type_MeetDoStopTrrigerWorkOrBuilder {
    private pbui_Type_MeetDoStopTrrigerWork() {
      deviceid_ = emptyIntList();
    }
    private int bitField0_;
    public static final int PLAYFLAG_FIELD_NUMBER = 1;
    private int playflag_;
    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    public int getPlayflag() {
      return playflag_;
    }
    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    private void setPlayflag(int value) {
      
      playflag_ = value;
    }
    /**
     * <pre>
     *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
     * </pre>
     *
     * <code>fixed32 playflag = 1;</code>
     */
    private void clearPlayflag() {
      
      playflag_ = 0;
    }

    public static final int TRIGGERUSERVAL_FIELD_NUMBER = 2;
    private int triggeruserval_;
    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    public int getTriggeruserval() {
      return triggeruserval_;
    }
    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    private void setTriggeruserval(int value) {
      
      triggeruserval_ = value;
    }
    /**
     * <pre>
     *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
     * </pre>
     *
     * <code>fixed32 triggeruserval = 2;</code>
     */
    private void clearTriggeruserval() {
      
      triggeruserval_ = 0;
    }

    public static final int TRIGGERID_FIELD_NUMBER = 3;
    private int triggerid_;
    /**
     * <pre>
     *触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 3;</code>
     */
    public int getTriggerid() {
      return triggerid_;
    }
    /**
     * <pre>
     *触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 3;</code>
     */
    private void setTriggerid(int value) {
      
      triggerid_ = value;
    }
    /**
     * <pre>
     *触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 3;</code>
     */
    private void clearTriggerid() {
      
      triggerid_ = 0;
    }

    public static final int DEVICEID_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList deviceid_;
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getDeviceidList() {
      return deviceid_;
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    public int getDeviceidCount() {
      return deviceid_.size();
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    public int getDeviceid(int index) {
      return deviceid_.getInt(index);
    }
    private void ensureDeviceidIsMutable() {
      if (!deviceid_.isModifiable()) {
        deviceid_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
       }
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void setDeviceid(
        int index, int value) {
      ensureDeviceidIsMutable();
      deviceid_.setInt(index, value);
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void addDeviceid(int value) {
      ensureDeviceidIsMutable();
      deviceid_.addInt(value);
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void addAllDeviceid(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDeviceidIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, deviceid_);
    }
    /**
     * <pre>
     *通知的目标设备,为空表示全部
     * </pre>
     *
     * <code>repeated fixed32 deviceid = 4;</code>
     */
    private void clearDeviceid() {
      deviceid_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (playflag_ != 0) {
        output.writeFixed32(1, playflag_);
      }
      if (triggeruserval_ != 0) {
        output.writeFixed32(2, triggeruserval_);
      }
      if (triggerid_ != 0) {
        output.writeFixed32(3, triggerid_);
      }
      for (int i = 0; i < deviceid_.size(); i++) {
        output.writeFixed32(4, deviceid_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (playflag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, playflag_);
      }
      if (triggeruserval_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, triggeruserval_);
      }
      if (triggerid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, triggerid_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getDeviceidList().size();
        size += dataSize;
        size += 1 * getDeviceidList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *停止触发器
     *call
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: stop
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoStopTrrigerWork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoStopTrrigerWork)
        com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWorkOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
       * </pre>
       *
       * <code>fixed32 playflag = 1;</code>
       */
      public int getPlayflag() {
        return instance.getPlayflag();
      }
      /**
       * <pre>
       *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
       * </pre>
       *
       * <code>fixed32 playflag = 1;</code>
       */
      public Builder setPlayflag(int value) {
        copyOnWrite();
        instance.setPlayflag(value);
        return this;
      }
      /**
       * <pre>
       *播放标志 参见Interface_Macro.proto Pb_MeetPlayFlag
       * </pre>
       *
       * <code>fixed32 playflag = 1;</code>
       */
      public Builder clearPlayflag() {
        copyOnWrite();
        instance.clearPlayflag();
        return this;
      }

      /**
       * <pre>
       *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
       * </pre>
       *
       * <code>fixed32 triggeruserval = 2;</code>
       */
      public int getTriggeruserval() {
        return instance.getTriggeruserval();
      }
      /**
       * <pre>
       *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
       * </pre>
       *
       * <code>fixed32 triggeruserval = 2;</code>
       */
      public Builder setTriggeruserval(int value) {
        copyOnWrite();
        instance.setTriggeruserval(value);
        return this;
      }
      /**
       * <pre>
       *参见Interface_Macro.proto文件中的Pb_TriggerUsedef定义
       * </pre>
       *
       * <code>fixed32 triggeruserval = 2;</code>
       */
      public Builder clearTriggeruserval() {
        copyOnWrite();
        instance.clearTriggeruserval();
        return this;
      }

      /**
       * <pre>
       *触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
       * </pre>
       *
       * <code>fixed32 triggerid = 3;</code>
       */
      public int getTriggerid() {
        return instance.getTriggerid();
      }
      /**
       * <pre>
       *触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
       * </pre>
       *
       * <code>fixed32 triggerid = 3;</code>
       */
      public Builder setTriggerid(int value) {
        copyOnWrite();
        instance.setTriggerid(value);
        return this;
      }
      /**
       * <pre>
       *触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
       * </pre>
       *
       * <code>fixed32 triggerid = 3;</code>
       */
      public Builder clearTriggerid() {
        copyOnWrite();
        instance.clearTriggerid();
        return this;
      }

      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getDeviceidList() {
        return java.util.Collections.unmodifiableList(
            instance.getDeviceidList());
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public int getDeviceidCount() {
        return instance.getDeviceidCount();
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public int getDeviceid(int index) {
        return instance.getDeviceid(index);
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder setDeviceid(
          int index, int value) {
        copyOnWrite();
        instance.setDeviceid(index, value);
        return this;
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder addDeviceid(int value) {
        copyOnWrite();
        instance.addDeviceid(value);
        return this;
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder addAllDeviceid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllDeviceid(values);
        return this;
      }
      /**
       * <pre>
       *通知的目标设备,为空表示全部
       * </pre>
       *
       * <code>repeated fixed32 deviceid = 4;</code>
       */
      public Builder clearDeviceid() {
        copyOnWrite();
        instance.clearDeviceid();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoStopTrrigerWork)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          deviceid_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork other = (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork) arg1;
          playflag_ = visitor.visitInt(playflag_ != 0, playflag_,
              other.playflag_ != 0, other.playflag_);
          triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
              other.triggeruserval_ != 0, other.triggeruserval_);
          triggerid_ = visitor.visitInt(triggerid_ != 0, triggerid_,
              other.triggerid_ != 0, other.triggerid_);
          deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  playflag_ = input.readFixed32();
                  break;
                }
                case 21: {

                  triggeruserval_ = input.readFixed32();
                  break;
                }
                case 29: {

                  triggerid_ = input.readFixed32();
                  break;
                }
                case 37: {
                  if (!deviceid_.isModifiable()) {
                    deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                  }
                  deviceid_.addInt(input.readFixed32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = deviceid_.size();
                    deviceid_ = deviceid_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    deviceid_.addInt(input.readFixed32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoStopTrrigerWork)
    private static final com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetDoStopTrrigerWork();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetDoStopTrrigerWork getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoStopTrrigerWork> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetDoStopTrrigerWork> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_MeetStopPlayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStopPlay)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *停止的触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 1;</code>
     */
    int getTriggerid();

    /**
     * <pre>
     *创建该触发器的设备ID
     * </pre>
     *
     * <code>fixed32 createdeviceid = 2;</code>
     */
    int getCreatedeviceid();

    /**
     * <pre>
     *停止的资源ID 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>fixed32 res = 3;</code>
     */
    int getRes();
  }
  /**
   * <pre>
   *媒体、流停止播放通知
   *callback
   *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
   *method: notify
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetStopPlay}
   */
  public  static final class pbui_Type_MeetStopPlay extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetStopPlay, pbui_Type_MeetStopPlay.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetStopPlay)
      pbui_Type_MeetStopPlayOrBuilder {
    private pbui_Type_MeetStopPlay() {
    }
    public static final int TRIGGERID_FIELD_NUMBER = 1;
    private int triggerid_;
    /**
     * <pre>
     *停止的触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 1;</code>
     */
    public int getTriggerid() {
      return triggerid_;
    }
    /**
     * <pre>
     *停止的触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 1;</code>
     */
    private void setTriggerid(int value) {
      
      triggerid_ = value;
    }
    /**
     * <pre>
     *停止的触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
     * </pre>
     *
     * <code>fixed32 triggerid = 1;</code>
     */
    private void clearTriggerid() {
      
      triggerid_ = 0;
    }

    public static final int CREATEDEVICEID_FIELD_NUMBER = 2;
    private int createdeviceid_;
    /**
     * <pre>
     *创建该触发器的设备ID
     * </pre>
     *
     * <code>fixed32 createdeviceid = 2;</code>
     */
    public int getCreatedeviceid() {
      return createdeviceid_;
    }
    /**
     * <pre>
     *创建该触发器的设备ID
     * </pre>
     *
     * <code>fixed32 createdeviceid = 2;</code>
     */
    private void setCreatedeviceid(int value) {
      
      createdeviceid_ = value;
    }
    /**
     * <pre>
     *创建该触发器的设备ID
     * </pre>
     *
     * <code>fixed32 createdeviceid = 2;</code>
     */
    private void clearCreatedeviceid() {
      
      createdeviceid_ = 0;
    }

    public static final int RES_FIELD_NUMBER = 3;
    private int res_;
    /**
     * <pre>
     *停止的资源ID 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>fixed32 res = 3;</code>
     */
    public int getRes() {
      return res_;
    }
    /**
     * <pre>
     *停止的资源ID 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>fixed32 res = 3;</code>
     */
    private void setRes(int value) {
      
      res_ = value;
    }
    /**
     * <pre>
     *停止的资源ID 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
     * </pre>
     *
     * <code>fixed32 res = 3;</code>
     */
    private void clearRes() {
      
      res_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (triggerid_ != 0) {
        output.writeFixed32(1, triggerid_);
      }
      if (createdeviceid_ != 0) {
        output.writeFixed32(2, createdeviceid_);
      }
      if (res_ != 0) {
        output.writeFixed32(3, res_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (triggerid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, triggerid_);
      }
      if (createdeviceid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, createdeviceid_);
      }
      if (res_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, res_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *媒体、流停止播放通知
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStopPlay}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStopPlay)
        com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlayOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *停止的触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
       * </pre>
       *
       * <code>fixed32 triggerid = 1;</code>
       */
      public int getTriggerid() {
        return instance.getTriggerid();
      }
      /**
       * <pre>
       *停止的触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
       * </pre>
       *
       * <code>fixed32 triggerid = 1;</code>
       */
      public Builder setTriggerid(int value) {
        copyOnWrite();
        instance.setTriggerid(value);
        return this;
      }
      /**
       * <pre>
       *停止的触发器ID 这是一个用户操作生成的ID,用来标识操作的,可以根据这个ID来判断操作,然后执行停止操作等
       * </pre>
       *
       * <code>fixed32 triggerid = 1;</code>
       */
      public Builder clearTriggerid() {
        copyOnWrite();
        instance.clearTriggerid();
        return this;
      }

      /**
       * <pre>
       *创建该触发器的设备ID
       * </pre>
       *
       * <code>fixed32 createdeviceid = 2;</code>
       */
      public int getCreatedeviceid() {
        return instance.getCreatedeviceid();
      }
      /**
       * <pre>
       *创建该触发器的设备ID
       * </pre>
       *
       * <code>fixed32 createdeviceid = 2;</code>
       */
      public Builder setCreatedeviceid(int value) {
        copyOnWrite();
        instance.setCreatedeviceid(value);
        return this;
      }
      /**
       * <pre>
       *创建该触发器的设备ID
       * </pre>
       *
       * <code>fixed32 createdeviceid = 2;</code>
       */
      public Builder clearCreatedeviceid() {
        copyOnWrite();
        instance.clearCreatedeviceid();
        return this;
      }

      /**
       * <pre>
       *停止的资源ID 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>fixed32 res = 3;</code>
       */
      public int getRes() {
        return instance.getRes();
      }
      /**
       * <pre>
       *停止的资源ID 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>fixed32 res = 3;</code>
       */
      public Builder setRes(int value) {
        copyOnWrite();
        instance.setRes(value);
        return this;
      }
      /**
       * <pre>
       *停止的资源ID 初始化播放资源时传入的资源ID eg:0,1,2,3 etc
       * </pre>
       *
       * <code>fixed32 res = 3;</code>
       */
      public Builder clearRes() {
        copyOnWrite();
        instance.clearRes();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStopPlay)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay other = (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay) arg1;
          triggerid_ = visitor.visitInt(triggerid_ != 0, triggerid_,
              other.triggerid_ != 0, other.triggerid_);
          createdeviceid_ = visitor.visitInt(createdeviceid_ != 0, createdeviceid_,
              other.createdeviceid_ != 0, other.createdeviceid_);
          res_ = visitor.visitInt(res_ != 0, res_,
              other.res_ != 0, other.res_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  triggerid_ = input.readFixed32();
                  break;
                }
                case 21: {

                  createdeviceid_ = input.readFixed32();
                  break;
                }
                case 29: {

                  res_ = input.readFixed32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetStopPlay)
    private static final com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetStopPlay();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceStop.pbui_Type_MeetStopPlay getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetStopPlay> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetStopPlay> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
