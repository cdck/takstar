// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interface_agenda.proto

package com.mogujie.tt.protobuf;

public final class InterfaceAgenda {
  private InterfaceAgenda() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface pbui_ItemAgendaTimeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_ItemAgendaTimeInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *议程ID
     * </pre>
     *
     * <code>fixed32 agendaid = 1;</code>
     */
    int getAgendaid();

    /**
     * <pre>
     *议程状态 参见Pb_AgendaStatus
     * </pre>
     *
     * <code>fixed32 status = 2;</code>
     */
    int getStatus();

    /**
     * <pre>
     *绑定目录ID
     * </pre>
     *
     * <code>fixed32 dirid = 3;</code>
     */
    int getDirid();

    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 startutctime = 4;</code>
     */
    long getStartutctime();

    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 endutctime = 5;</code>
     */
    long getEndutctime();

    /**
     * <pre>
     *描述内容
     * </pre>
     *
     * <code>bytes desctext = 6;</code>
     */
    com.google.protobuf.ByteString getDesctext();
  }
  /**
   * Protobuf type {@code pbui_ItemAgendaTimeInfo}
   */
  public  static final class pbui_ItemAgendaTimeInfo extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_ItemAgendaTimeInfo, pbui_ItemAgendaTimeInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_ItemAgendaTimeInfo)
      pbui_ItemAgendaTimeInfoOrBuilder {
    private pbui_ItemAgendaTimeInfo() {
      desctext_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int AGENDAID_FIELD_NUMBER = 1;
    private int agendaid_;
    /**
     * <pre>
     *议程ID
     * </pre>
     *
     * <code>fixed32 agendaid = 1;</code>
     */
    public int getAgendaid() {
      return agendaid_;
    }
    /**
     * <pre>
     *议程ID
     * </pre>
     *
     * <code>fixed32 agendaid = 1;</code>
     */
    private void setAgendaid(int value) {
      
      agendaid_ = value;
    }
    /**
     * <pre>
     *议程ID
     * </pre>
     *
     * <code>fixed32 agendaid = 1;</code>
     */
    private void clearAgendaid() {
      
      agendaid_ = 0;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <pre>
     *议程状态 参见Pb_AgendaStatus
     * </pre>
     *
     * <code>fixed32 status = 2;</code>
     */
    public int getStatus() {
      return status_;
    }
    /**
     * <pre>
     *议程状态 参见Pb_AgendaStatus
     * </pre>
     *
     * <code>fixed32 status = 2;</code>
     */
    private void setStatus(int value) {
      
      status_ = value;
    }
    /**
     * <pre>
     *议程状态 参见Pb_AgendaStatus
     * </pre>
     *
     * <code>fixed32 status = 2;</code>
     */
    private void clearStatus() {
      
      status_ = 0;
    }

    public static final int DIRID_FIELD_NUMBER = 3;
    private int dirid_;
    /**
     * <pre>
     *绑定目录ID
     * </pre>
     *
     * <code>fixed32 dirid = 3;</code>
     */
    public int getDirid() {
      return dirid_;
    }
    /**
     * <pre>
     *绑定目录ID
     * </pre>
     *
     * <code>fixed32 dirid = 3;</code>
     */
    private void setDirid(int value) {
      
      dirid_ = value;
    }
    /**
     * <pre>
     *绑定目录ID
     * </pre>
     *
     * <code>fixed32 dirid = 3;</code>
     */
    private void clearDirid() {
      
      dirid_ = 0;
    }

    public static final int STARTUTCTIME_FIELD_NUMBER = 4;
    private long startutctime_;
    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 startutctime = 4;</code>
     */
    public long getStartutctime() {
      return startutctime_;
    }
    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 startutctime = 4;</code>
     */
    private void setStartutctime(long value) {
      
      startutctime_ = value;
    }
    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 startutctime = 4;</code>
     */
    private void clearStartutctime() {
      
      startutctime_ = 0L;
    }

    public static final int ENDUTCTIME_FIELD_NUMBER = 5;
    private long endutctime_;
    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 endutctime = 5;</code>
     */
    public long getEndutctime() {
      return endutctime_;
    }
    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 endutctime = 5;</code>
     */
    private void setEndutctime(long value) {
      
      endutctime_ = value;
    }
    /**
     * <pre>
     *单位秒
     * </pre>
     *
     * <code>fixed64 endutctime = 5;</code>
     */
    private void clearEndutctime() {
      
      endutctime_ = 0L;
    }

    public static final int DESCTEXT_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString desctext_;
    /**
     * <pre>
     *描述内容
     * </pre>
     *
     * <code>bytes desctext = 6;</code>
     */
    public com.google.protobuf.ByteString getDesctext() {
      return desctext_;
    }
    /**
     * <pre>
     *描述内容
     * </pre>
     *
     * <code>bytes desctext = 6;</code>
     */
    private void setDesctext(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      desctext_ = value;
    }
    /**
     * <pre>
     *描述内容
     * </pre>
     *
     * <code>bytes desctext = 6;</code>
     */
    private void clearDesctext() {
      
      desctext_ = getDefaultInstance().getDesctext();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (agendaid_ != 0) {
        output.writeFixed32(1, agendaid_);
      }
      if (status_ != 0) {
        output.writeFixed32(2, status_);
      }
      if (dirid_ != 0) {
        output.writeFixed32(3, dirid_);
      }
      if (startutctime_ != 0L) {
        output.writeFixed64(4, startutctime_);
      }
      if (endutctime_ != 0L) {
        output.writeFixed64(5, endutctime_);
      }
      if (!desctext_.isEmpty()) {
        output.writeBytes(6, desctext_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (agendaid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, agendaid_);
      }
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, status_);
      }
      if (dirid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, dirid_);
      }
      if (startutctime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, startutctime_);
      }
      if (endutctime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, endutctime_);
      }
      if (!desctext_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, desctext_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code pbui_ItemAgendaTimeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_ItemAgendaTimeInfo)
        com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfoOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *议程ID
       * </pre>
       *
       * <code>fixed32 agendaid = 1;</code>
       */
      public int getAgendaid() {
        return instance.getAgendaid();
      }
      /**
       * <pre>
       *议程ID
       * </pre>
       *
       * <code>fixed32 agendaid = 1;</code>
       */
      public Builder setAgendaid(int value) {
        copyOnWrite();
        instance.setAgendaid(value);
        return this;
      }
      /**
       * <pre>
       *议程ID
       * </pre>
       *
       * <code>fixed32 agendaid = 1;</code>
       */
      public Builder clearAgendaid() {
        copyOnWrite();
        instance.clearAgendaid();
        return this;
      }

      /**
       * <pre>
       *议程状态 参见Pb_AgendaStatus
       * </pre>
       *
       * <code>fixed32 status = 2;</code>
       */
      public int getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       *议程状态 参见Pb_AgendaStatus
       * </pre>
       *
       * <code>fixed32 status = 2;</code>
       */
      public Builder setStatus(int value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       *议程状态 参见Pb_AgendaStatus
       * </pre>
       *
       * <code>fixed32 status = 2;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      /**
       * <pre>
       *绑定目录ID
       * </pre>
       *
       * <code>fixed32 dirid = 3;</code>
       */
      public int getDirid() {
        return instance.getDirid();
      }
      /**
       * <pre>
       *绑定目录ID
       * </pre>
       *
       * <code>fixed32 dirid = 3;</code>
       */
      public Builder setDirid(int value) {
        copyOnWrite();
        instance.setDirid(value);
        return this;
      }
      /**
       * <pre>
       *绑定目录ID
       * </pre>
       *
       * <code>fixed32 dirid = 3;</code>
       */
      public Builder clearDirid() {
        copyOnWrite();
        instance.clearDirid();
        return this;
      }

      /**
       * <pre>
       *单位秒
       * </pre>
       *
       * <code>fixed64 startutctime = 4;</code>
       */
      public long getStartutctime() {
        return instance.getStartutctime();
      }
      /**
       * <pre>
       *单位秒
       * </pre>
       *
       * <code>fixed64 startutctime = 4;</code>
       */
      public Builder setStartutctime(long value) {
        copyOnWrite();
        instance.setStartutctime(value);
        return this;
      }
      /**
       * <pre>
       *单位秒
       * </pre>
       *
       * <code>fixed64 startutctime = 4;</code>
       */
      public Builder clearStartutctime() {
        copyOnWrite();
        instance.clearStartutctime();
        return this;
      }

      /**
       * <pre>
       *单位秒
       * </pre>
       *
       * <code>fixed64 endutctime = 5;</code>
       */
      public long getEndutctime() {
        return instance.getEndutctime();
      }
      /**
       * <pre>
       *单位秒
       * </pre>
       *
       * <code>fixed64 endutctime = 5;</code>
       */
      public Builder setEndutctime(long value) {
        copyOnWrite();
        instance.setEndutctime(value);
        return this;
      }
      /**
       * <pre>
       *单位秒
       * </pre>
       *
       * <code>fixed64 endutctime = 5;</code>
       */
      public Builder clearEndutctime() {
        copyOnWrite();
        instance.clearEndutctime();
        return this;
      }

      /**
       * <pre>
       *描述内容
       * </pre>
       *
       * <code>bytes desctext = 6;</code>
       */
      public com.google.protobuf.ByteString getDesctext() {
        return instance.getDesctext();
      }
      /**
       * <pre>
       *描述内容
       * </pre>
       *
       * <code>bytes desctext = 6;</code>
       */
      public Builder setDesctext(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDesctext(value);
        return this;
      }
      /**
       * <pre>
       *描述内容
       * </pre>
       *
       * <code>bytes desctext = 6;</code>
       */
      public Builder clearDesctext() {
        copyOnWrite();
        instance.clearDesctext();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_ItemAgendaTimeInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo other = (com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo) arg1;
          agendaid_ = visitor.visitInt(agendaid_ != 0, agendaid_,
              other.agendaid_ != 0, other.agendaid_);
          status_ = visitor.visitInt(status_ != 0, status_,
              other.status_ != 0, other.status_);
          dirid_ = visitor.visitInt(dirid_ != 0, dirid_,
              other.dirid_ != 0, other.dirid_);
          startutctime_ = visitor.visitLong(startutctime_ != 0L, startutctime_,
              other.startutctime_ != 0L, other.startutctime_);
          endutctime_ = visitor.visitLong(endutctime_ != 0L, endutctime_,
              other.endutctime_ != 0L, other.endutctime_);
          desctext_ = visitor.visitByteString(desctext_ != com.google.protobuf.ByteString.EMPTY, desctext_,
              other.desctext_ != com.google.protobuf.ByteString.EMPTY, other.desctext_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  agendaid_ = input.readFixed32();
                  break;
                }
                case 21: {

                  status_ = input.readFixed32();
                  break;
                }
                case 29: {

                  dirid_ = input.readFixed32();
                  break;
                }
                case 33: {

                  startutctime_ = input.readFixed64();
                  break;
                }
                case 41: {

                  endutctime_ = input.readFixed64();
                  break;
                }
                case 50: {

                  desctext_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_ItemAgendaTimeInfo)
    private static final com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_ItemAgendaTimeInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_ItemAgendaTimeInfo> PARSER;

    public static com.google.protobuf.Parser<pbui_ItemAgendaTimeInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_meetAgendaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_meetAgenda)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *议程类型 参见Pb_AgendaType 查询时可以指定议程的类型查询
     * </pre>
     *
     * <code>fixed32 agendatype = 1;</code>
     */
    int getAgendatype();

    /**
     * <pre>
     * 媒体ID
     * </pre>
     *
     * <code>fixed32 mediaid = 2;</code>
     */
    int getMediaid();

    /**
     * <pre>
     * 议程文本
     * </pre>
     *
     * <code>bytes text = 3;</code>
     */
    com.google.protobuf.ByteString getText();

    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    java.util.List<com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo> 
        getItemList();
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo getItem(int index);
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    int getItemCount();
  }
  /**
   * <pre>
   *指定的媒体作议程 agendatype=Pb_MEET_AGENDA_TYPE_FILE(modify,query)
   *指定的文本作议程 agendatype=Pb_MEET_AGENDA_TYPE_TEXT(modify,query)
   *时间轴式议程     agendatype=Pb_MEET_AGENDA_TYPE_TIME(modify,query,add,del,set)
   *Pb_MEET_AGENDA_TYPE_NOSET= 0xff000000; //未指定类型，如果查询时agendatype等于该值会返回会议当前设置的议程类型
   *call ,callreturn
   *type: Pb_TYPE_MEET_INTERFACE_MEETAGENDA
   * </pre>
   *
   * Protobuf type {@code pbui_meetAgenda}
   */
  public  static final class pbui_meetAgenda extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_meetAgenda, pbui_meetAgenda.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_meetAgenda)
      pbui_meetAgendaOrBuilder {
    private pbui_meetAgenda() {
      text_ = com.google.protobuf.ByteString.EMPTY;
      item_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int AGENDATYPE_FIELD_NUMBER = 1;
    private int agendatype_;
    /**
     * <pre>
     *议程类型 参见Pb_AgendaType 查询时可以指定议程的类型查询
     * </pre>
     *
     * <code>fixed32 agendatype = 1;</code>
     */
    public int getAgendatype() {
      return agendatype_;
    }
    /**
     * <pre>
     *议程类型 参见Pb_AgendaType 查询时可以指定议程的类型查询
     * </pre>
     *
     * <code>fixed32 agendatype = 1;</code>
     */
    private void setAgendatype(int value) {
      
      agendatype_ = value;
    }
    /**
     * <pre>
     *议程类型 参见Pb_AgendaType 查询时可以指定议程的类型查询
     * </pre>
     *
     * <code>fixed32 agendatype = 1;</code>
     */
    private void clearAgendatype() {
      
      agendatype_ = 0;
    }

    public static final int MEDIAID_FIELD_NUMBER = 2;
    private int mediaid_;
    /**
     * <pre>
     * 媒体ID
     * </pre>
     *
     * <code>fixed32 mediaid = 2;</code>
     */
    public int getMediaid() {
      return mediaid_;
    }
    /**
     * <pre>
     * 媒体ID
     * </pre>
     *
     * <code>fixed32 mediaid = 2;</code>
     */
    private void setMediaid(int value) {
      
      mediaid_ = value;
    }
    /**
     * <pre>
     * 媒体ID
     * </pre>
     *
     * <code>fixed32 mediaid = 2;</code>
     */
    private void clearMediaid() {
      
      mediaid_ = 0;
    }

    public static final int TEXT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString text_;
    /**
     * <pre>
     * 议程文本
     * </pre>
     *
     * <code>bytes text = 3;</code>
     */
    public com.google.protobuf.ByteString getText() {
      return text_;
    }
    /**
     * <pre>
     * 议程文本
     * </pre>
     *
     * <code>bytes text = 3;</code>
     */
    private void setText(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      text_ = value;
    }
    /**
     * <pre>
     * 议程文本
     * </pre>
     *
     * <code>bytes text = 3;</code>
     */
    private void clearText() {
      
      text_ = getDefaultInstance().getText();
    }

    public static final int ITEM_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo> item_;
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    public java.util.List<com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo> getItemList() {
      return item_;
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfoOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo getItem(int index) {
      return item_.get(index);
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfoOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }
    private void ensureItemIsMutable() {
      if (!item_.isModifiable()) {
        item_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
       }
    }

    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.set(index, value);
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.Builder builderForValue) {
      ensureItemIsMutable();
      item_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void addItem(com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(value);
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(index, value);
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void addItem(
        com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(builderForValue.build());
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void addAllItem(
        java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo> values) {
      ensureItemIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, item_);
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void clearItem() {
      item_ = emptyProtobufList();
    }
    /**
     * <pre>
     * 时间轴式议程
     * </pre>
     *
     * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
     */
    private void removeItem(int index) {
      ensureItemIsMutable();
      item_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (agendatype_ != 0) {
        output.writeFixed32(1, agendatype_);
      }
      if (mediaid_ != 0) {
        output.writeFixed32(2, mediaid_);
      }
      if (!text_.isEmpty()) {
        output.writeBytes(3, text_);
      }
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(4, item_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (agendatype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, agendatype_);
      }
      if (mediaid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, mediaid_);
      }
      if (!text_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, text_);
      }
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, item_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *指定的媒体作议程 agendatype=Pb_MEET_AGENDA_TYPE_FILE(modify,query)
     *指定的文本作议程 agendatype=Pb_MEET_AGENDA_TYPE_TEXT(modify,query)
     *时间轴式议程     agendatype=Pb_MEET_AGENDA_TYPE_TIME(modify,query,add,del,set)
     *Pb_MEET_AGENDA_TYPE_NOSET= 0xff000000; //未指定类型，如果查询时agendatype等于该值会返回会议当前设置的议程类型
     *call ,callreturn
     *type: Pb_TYPE_MEET_INTERFACE_MEETAGENDA
     * </pre>
     *
     * Protobuf type {@code pbui_meetAgenda}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_meetAgenda)
        com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgendaOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *议程类型 参见Pb_AgendaType 查询时可以指定议程的类型查询
       * </pre>
       *
       * <code>fixed32 agendatype = 1;</code>
       */
      public int getAgendatype() {
        return instance.getAgendatype();
      }
      /**
       * <pre>
       *议程类型 参见Pb_AgendaType 查询时可以指定议程的类型查询
       * </pre>
       *
       * <code>fixed32 agendatype = 1;</code>
       */
      public Builder setAgendatype(int value) {
        copyOnWrite();
        instance.setAgendatype(value);
        return this;
      }
      /**
       * <pre>
       *议程类型 参见Pb_AgendaType 查询时可以指定议程的类型查询
       * </pre>
       *
       * <code>fixed32 agendatype = 1;</code>
       */
      public Builder clearAgendatype() {
        copyOnWrite();
        instance.clearAgendatype();
        return this;
      }

      /**
       * <pre>
       * 媒体ID
       * </pre>
       *
       * <code>fixed32 mediaid = 2;</code>
       */
      public int getMediaid() {
        return instance.getMediaid();
      }
      /**
       * <pre>
       * 媒体ID
       * </pre>
       *
       * <code>fixed32 mediaid = 2;</code>
       */
      public Builder setMediaid(int value) {
        copyOnWrite();
        instance.setMediaid(value);
        return this;
      }
      /**
       * <pre>
       * 媒体ID
       * </pre>
       *
       * <code>fixed32 mediaid = 2;</code>
       */
      public Builder clearMediaid() {
        copyOnWrite();
        instance.clearMediaid();
        return this;
      }

      /**
       * <pre>
       * 议程文本
       * </pre>
       *
       * <code>bytes text = 3;</code>
       */
      public com.google.protobuf.ByteString getText() {
        return instance.getText();
      }
      /**
       * <pre>
       * 议程文本
       * </pre>
       *
       * <code>bytes text = 3;</code>
       */
      public Builder setText(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setText(value);
        return this;
      }
      /**
       * <pre>
       * 议程文本
       * </pre>
       *
       * <code>bytes text = 3;</code>
       */
      public Builder clearText() {
        copyOnWrite();
        instance.clearText();
        return this;
      }

      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public java.util.List<com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo> getItemList() {
        return java.util.Collections.unmodifiableList(
            instance.getItemList());
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public int getItemCount() {
        return instance.getItemCount();
      }/**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo getItem(int index) {
        return instance.getItem(index);
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo value) {
        copyOnWrite();
        instance.setItem(index, value);
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setItem(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder addItem(com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo value) {
        copyOnWrite();
        instance.addItem(value);
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo value) {
        copyOnWrite();
        instance.addItem(index, value);
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder addItem(
          com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(builderForValue);
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo> values) {
        copyOnWrite();
        instance.addAllItem(values);
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder clearItem() {
        copyOnWrite();
        instance.clearItem();
        return this;
      }
      /**
       * <pre>
       * 时间轴式议程
       * </pre>
       *
       * <code>repeated .pbui_ItemAgendaTimeInfo item = 4;</code>
       */
      public Builder removeItem(int index) {
        copyOnWrite();
        instance.removeItem(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_meetAgenda)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          item_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda other = (com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda) arg1;
          agendatype_ = visitor.visitInt(agendatype_ != 0, agendatype_,
              other.agendatype_ != 0, other.agendatype_);
          mediaid_ = visitor.visitInt(mediaid_ != 0, mediaid_,
              other.mediaid_ != 0, other.mediaid_);
          text_ = visitor.visitByteString(text_ != com.google.protobuf.ByteString.EMPTY, text_,
              other.text_ != com.google.protobuf.ByteString.EMPTY, other.text_);
          item_= visitor.visitList(item_, other.item_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  agendatype_ = input.readFixed32();
                  break;
                }
                case 21: {

                  mediaid_ = input.readFixed32();
                  break;
                }
                case 26: {

                  text_ = input.readBytes();
                  break;
                }
                case 34: {
                  if (!item_.isModifiable()) {
                    item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                  }
                  item_.add(
                      input.readMessage(com.mogujie.tt.protobuf.InterfaceAgenda.pbui_ItemAgendaTimeInfo.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_meetAgenda)
    private static final com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_meetAgenda();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceAgenda.pbui_meetAgenda getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_meetAgenda> PARSER;

    public static com.google.protobuf.Parser<pbui_meetAgenda> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
