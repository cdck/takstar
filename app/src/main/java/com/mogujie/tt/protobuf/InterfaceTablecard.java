// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interface_tablecard.proto

package com.mogujie.tt.protobuf;

public final class InterfaceTablecard {
  private InterfaceTablecard() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   *桌牌修改标志位
   * </pre>
   *
   * Protobuf enum {@code Pb_TableCard_ModifyFlag}
   */
  public enum Pb_TableCard_ModifyFlag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>Pb_TABLECARD_MODFLAG_ZERO = 0;</code>
     */
    Pb_TABLECARD_MODFLAG_ZERO(0),
    /**
     * <pre>
     *设置为默认
     * </pre>
     *
     * <code>Pb_TABLECARD_MODFLAG_SETDEFAULT = 1;</code>
     */
    Pb_TABLECARD_MODFLAG_SETDEFAULT(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Pb_TABLECARD_MODFLAG_ZERO = 0;</code>
     */
    public static final int Pb_TABLECARD_MODFLAG_ZERO_VALUE = 0;
    /**
     * <pre>
     *设置为默认
     * </pre>
     *
     * <code>Pb_TABLECARD_MODFLAG_SETDEFAULT = 1;</code>
     */
    public static final int Pb_TABLECARD_MODFLAG_SETDEFAULT_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pb_TableCard_ModifyFlag valueOf(int value) {
      return forNumber(value);
    }

    public static Pb_TableCard_ModifyFlag forNumber(int value) {
      switch (value) {
        case 0: return Pb_TABLECARD_MODFLAG_ZERO;
        case 1: return Pb_TABLECARD_MODFLAG_SETDEFAULT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pb_TableCard_ModifyFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pb_TableCard_ModifyFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pb_TableCard_ModifyFlag>() {
            public Pb_TableCard_ModifyFlag findValueByNumber(int number) {
              return Pb_TableCard_ModifyFlag.forNumber(number);
            }
          };

    private final int value;

    private Pb_TableCard_ModifyFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Pb_TableCard_ModifyFlag)
  }

  public interface pbui_Item_MeetTableCardDetailInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Item_MeetTableCardDetailInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *使用字体名称
     * </pre>
     *
     * <code>bytes fontname = 1;</code>
     */
    com.google.protobuf.ByteString getFontname();

    /**
     * <pre>
     * 桌面字体大小计算方法
     *fontsize * 当前屏幕高度 / 基准屏幕高度
     *eg: 收到字体大小是100，当前的屏幕高度是720，推算出真实的字体大小为：100 * 720 / 1080 = 67
     * </pre>
     *
     * <code>fixed32 fontsize = 2;</code>
     */
    int getFontsize();

    /**
     * <pre>
     *字体颜色
     * </pre>
     *
     * <code>fixed32 fontcolor = 3;</code>
     */
    int getFontcolor();

    /**
     * <pre>
     *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
     * </pre>
     *
     * <code>float lx = 4;</code>
     */
    float getLx();

    /**
     * <code>float ly = 5;</code>
     */
    float getLy();

    /**
     * <code>float rx = 6;</code>
     */
    float getRx();

    /**
     * <code>float ry = 7;</code>
     */
    float getRy();

    /**
     * <pre>
     *显示标志 参见Pb_TableCardFlag
     * </pre>
     *
     * <code>fixed32 flag = 8;</code>
     */
    int getFlag();

    /**
     * <pre>
     *参见 font align flag
     * </pre>
     *
     * <code>fixed32 align = 9;</code>
     */
    int getAlign();

    /**
     * <pre>
     *显示的信息 参见Pb_TableCardType
     * </pre>
     *
     * <code>fixed32 type = 10;</code>
     */
    int getType();
  }
  /**
   * <pre>
   *会议桌牌显示相关
   * </pre>
   *
   * Protobuf type {@code pbui_Item_MeetTableCardDetailInfo}
   */
  public  static final class pbui_Item_MeetTableCardDetailInfo extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Item_MeetTableCardDetailInfo, pbui_Item_MeetTableCardDetailInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Item_MeetTableCardDetailInfo)
      pbui_Item_MeetTableCardDetailInfoOrBuilder {
    private pbui_Item_MeetTableCardDetailInfo() {
      fontname_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int FONTNAME_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString fontname_;
    /**
     * <pre>
     *使用字体名称
     * </pre>
     *
     * <code>bytes fontname = 1;</code>
     */
    public com.google.protobuf.ByteString getFontname() {
      return fontname_;
    }
    /**
     * <pre>
     *使用字体名称
     * </pre>
     *
     * <code>bytes fontname = 1;</code>
     */
    private void setFontname(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fontname_ = value;
    }
    /**
     * <pre>
     *使用字体名称
     * </pre>
     *
     * <code>bytes fontname = 1;</code>
     */
    private void clearFontname() {
      
      fontname_ = getDefaultInstance().getFontname();
    }

    public static final int FONTSIZE_FIELD_NUMBER = 2;
    private int fontsize_;
    /**
     * <pre>
     * 桌面字体大小计算方法
     *fontsize * 当前屏幕高度 / 基准屏幕高度
     *eg: 收到字体大小是100，当前的屏幕高度是720，推算出真实的字体大小为：100 * 720 / 1080 = 67
     * </pre>
     *
     * <code>fixed32 fontsize = 2;</code>
     */
    public int getFontsize() {
      return fontsize_;
    }
    /**
     * <pre>
     * 桌面字体大小计算方法
     *fontsize * 当前屏幕高度 / 基准屏幕高度
     *eg: 收到字体大小是100，当前的屏幕高度是720，推算出真实的字体大小为：100 * 720 / 1080 = 67
     * </pre>
     *
     * <code>fixed32 fontsize = 2;</code>
     */
    private void setFontsize(int value) {
      
      fontsize_ = value;
    }
    /**
     * <pre>
     * 桌面字体大小计算方法
     *fontsize * 当前屏幕高度 / 基准屏幕高度
     *eg: 收到字体大小是100，当前的屏幕高度是720，推算出真实的字体大小为：100 * 720 / 1080 = 67
     * </pre>
     *
     * <code>fixed32 fontsize = 2;</code>
     */
    private void clearFontsize() {
      
      fontsize_ = 0;
    }

    public static final int FONTCOLOR_FIELD_NUMBER = 3;
    private int fontcolor_;
    /**
     * <pre>
     *字体颜色
     * </pre>
     *
     * <code>fixed32 fontcolor = 3;</code>
     */
    public int getFontcolor() {
      return fontcolor_;
    }
    /**
     * <pre>
     *字体颜色
     * </pre>
     *
     * <code>fixed32 fontcolor = 3;</code>
     */
    private void setFontcolor(int value) {
      
      fontcolor_ = value;
    }
    /**
     * <pre>
     *字体颜色
     * </pre>
     *
     * <code>fixed32 fontcolor = 3;</code>
     */
    private void clearFontcolor() {
      
      fontcolor_ = 0;
    }

    public static final int LX_FIELD_NUMBER = 4;
    private float lx_;
    /**
     * <pre>
     *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
     * </pre>
     *
     * <code>float lx = 4;</code>
     */
    public float getLx() {
      return lx_;
    }
    /**
     * <pre>
     *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
     * </pre>
     *
     * <code>float lx = 4;</code>
     */
    private void setLx(float value) {
      
      lx_ = value;
    }
    /**
     * <pre>
     *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
     * </pre>
     *
     * <code>float lx = 4;</code>
     */
    private void clearLx() {
      
      lx_ = 0F;
    }

    public static final int LY_FIELD_NUMBER = 5;
    private float ly_;
    /**
     * <code>float ly = 5;</code>
     */
    public float getLy() {
      return ly_;
    }
    /**
     * <code>float ly = 5;</code>
     */
    private void setLy(float value) {
      
      ly_ = value;
    }
    /**
     * <code>float ly = 5;</code>
     */
    private void clearLy() {
      
      ly_ = 0F;
    }

    public static final int RX_FIELD_NUMBER = 6;
    private float rx_;
    /**
     * <code>float rx = 6;</code>
     */
    public float getRx() {
      return rx_;
    }
    /**
     * <code>float rx = 6;</code>
     */
    private void setRx(float value) {
      
      rx_ = value;
    }
    /**
     * <code>float rx = 6;</code>
     */
    private void clearRx() {
      
      rx_ = 0F;
    }

    public static final int RY_FIELD_NUMBER = 7;
    private float ry_;
    /**
     * <code>float ry = 7;</code>
     */
    public float getRy() {
      return ry_;
    }
    /**
     * <code>float ry = 7;</code>
     */
    private void setRy(float value) {
      
      ry_ = value;
    }
    /**
     * <code>float ry = 7;</code>
     */
    private void clearRy() {
      
      ry_ = 0F;
    }

    public static final int FLAG_FIELD_NUMBER = 8;
    private int flag_;
    /**
     * <pre>
     *显示标志 参见Pb_TableCardFlag
     * </pre>
     *
     * <code>fixed32 flag = 8;</code>
     */
    public int getFlag() {
      return flag_;
    }
    /**
     * <pre>
     *显示标志 参见Pb_TableCardFlag
     * </pre>
     *
     * <code>fixed32 flag = 8;</code>
     */
    private void setFlag(int value) {
      
      flag_ = value;
    }
    /**
     * <pre>
     *显示标志 参见Pb_TableCardFlag
     * </pre>
     *
     * <code>fixed32 flag = 8;</code>
     */
    private void clearFlag() {
      
      flag_ = 0;
    }

    public static final int ALIGN_FIELD_NUMBER = 9;
    private int align_;
    /**
     * <pre>
     *参见 font align flag
     * </pre>
     *
     * <code>fixed32 align = 9;</code>
     */
    public int getAlign() {
      return align_;
    }
    /**
     * <pre>
     *参见 font align flag
     * </pre>
     *
     * <code>fixed32 align = 9;</code>
     */
    private void setAlign(int value) {
      
      align_ = value;
    }
    /**
     * <pre>
     *参见 font align flag
     * </pre>
     *
     * <code>fixed32 align = 9;</code>
     */
    private void clearAlign() {
      
      align_ = 0;
    }

    public static final int TYPE_FIELD_NUMBER = 10;
    private int type_;
    /**
     * <pre>
     *显示的信息 参见Pb_TableCardType
     * </pre>
     *
     * <code>fixed32 type = 10;</code>
     */
    public int getType() {
      return type_;
    }
    /**
     * <pre>
     *显示的信息 参见Pb_TableCardType
     * </pre>
     *
     * <code>fixed32 type = 10;</code>
     */
    private void setType(int value) {
      
      type_ = value;
    }
    /**
     * <pre>
     *显示的信息 参见Pb_TableCardType
     * </pre>
     *
     * <code>fixed32 type = 10;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!fontname_.isEmpty()) {
        output.writeBytes(1, fontname_);
      }
      if (fontsize_ != 0) {
        output.writeFixed32(2, fontsize_);
      }
      if (fontcolor_ != 0) {
        output.writeFixed32(3, fontcolor_);
      }
      if (lx_ != 0F) {
        output.writeFloat(4, lx_);
      }
      if (ly_ != 0F) {
        output.writeFloat(5, ly_);
      }
      if (rx_ != 0F) {
        output.writeFloat(6, rx_);
      }
      if (ry_ != 0F) {
        output.writeFloat(7, ry_);
      }
      if (flag_ != 0) {
        output.writeFixed32(8, flag_);
      }
      if (align_ != 0) {
        output.writeFixed32(9, align_);
      }
      if (type_ != 0) {
        output.writeFixed32(10, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!fontname_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, fontname_);
      }
      if (fontsize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, fontsize_);
      }
      if (fontcolor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, fontcolor_);
      }
      if (lx_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, lx_);
      }
      if (ly_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, ly_);
      }
      if (rx_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, rx_);
      }
      if (ry_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, ry_);
      }
      if (flag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, flag_);
      }
      if (align_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, align_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(10, type_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *会议桌牌显示相关
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetTableCardDetailInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Item_MeetTableCardDetailInfo)
        com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfoOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *使用字体名称
       * </pre>
       *
       * <code>bytes fontname = 1;</code>
       */
      public com.google.protobuf.ByteString getFontname() {
        return instance.getFontname();
      }
      /**
       * <pre>
       *使用字体名称
       * </pre>
       *
       * <code>bytes fontname = 1;</code>
       */
      public Builder setFontname(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFontname(value);
        return this;
      }
      /**
       * <pre>
       *使用字体名称
       * </pre>
       *
       * <code>bytes fontname = 1;</code>
       */
      public Builder clearFontname() {
        copyOnWrite();
        instance.clearFontname();
        return this;
      }

      /**
       * <pre>
       * 桌面字体大小计算方法
       *fontsize * 当前屏幕高度 / 基准屏幕高度
       *eg: 收到字体大小是100，当前的屏幕高度是720，推算出真实的字体大小为：100 * 720 / 1080 = 67
       * </pre>
       *
       * <code>fixed32 fontsize = 2;</code>
       */
      public int getFontsize() {
        return instance.getFontsize();
      }
      /**
       * <pre>
       * 桌面字体大小计算方法
       *fontsize * 当前屏幕高度 / 基准屏幕高度
       *eg: 收到字体大小是100，当前的屏幕高度是720，推算出真实的字体大小为：100 * 720 / 1080 = 67
       * </pre>
       *
       * <code>fixed32 fontsize = 2;</code>
       */
      public Builder setFontsize(int value) {
        copyOnWrite();
        instance.setFontsize(value);
        return this;
      }
      /**
       * <pre>
       * 桌面字体大小计算方法
       *fontsize * 当前屏幕高度 / 基准屏幕高度
       *eg: 收到字体大小是100，当前的屏幕高度是720，推算出真实的字体大小为：100 * 720 / 1080 = 67
       * </pre>
       *
       * <code>fixed32 fontsize = 2;</code>
       */
      public Builder clearFontsize() {
        copyOnWrite();
        instance.clearFontsize();
        return this;
      }

      /**
       * <pre>
       *字体颜色
       * </pre>
       *
       * <code>fixed32 fontcolor = 3;</code>
       */
      public int getFontcolor() {
        return instance.getFontcolor();
      }
      /**
       * <pre>
       *字体颜色
       * </pre>
       *
       * <code>fixed32 fontcolor = 3;</code>
       */
      public Builder setFontcolor(int value) {
        copyOnWrite();
        instance.setFontcolor(value);
        return this;
      }
      /**
       * <pre>
       *字体颜色
       * </pre>
       *
       * <code>fixed32 fontcolor = 3;</code>
       */
      public Builder clearFontcolor() {
        copyOnWrite();
        instance.clearFontcolor();
        return this;
      }

      /**
       * <pre>
       *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
       * </pre>
       *
       * <code>float lx = 4;</code>
       */
      public float getLx() {
        return instance.getLx();
      }
      /**
       * <pre>
       *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
       * </pre>
       *
       * <code>float lx = 4;</code>
       */
      public Builder setLx(float value) {
        copyOnWrite();
        instance.setLx(value);
        return this;
      }
      /**
       * <pre>
       *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
       * </pre>
       *
       * <code>float lx = 4;</code>
       */
      public Builder clearLx() {
        copyOnWrite();
        instance.clearLx();
        return this;
      }

      /**
       * <code>float ly = 5;</code>
       */
      public float getLy() {
        return instance.getLy();
      }
      /**
       * <code>float ly = 5;</code>
       */
      public Builder setLy(float value) {
        copyOnWrite();
        instance.setLy(value);
        return this;
      }
      /**
       * <code>float ly = 5;</code>
       */
      public Builder clearLy() {
        copyOnWrite();
        instance.clearLy();
        return this;
      }

      /**
       * <code>float rx = 6;</code>
       */
      public float getRx() {
        return instance.getRx();
      }
      /**
       * <code>float rx = 6;</code>
       */
      public Builder setRx(float value) {
        copyOnWrite();
        instance.setRx(value);
        return this;
      }
      /**
       * <code>float rx = 6;</code>
       */
      public Builder clearRx() {
        copyOnWrite();
        instance.clearRx();
        return this;
      }

      /**
       * <code>float ry = 7;</code>
       */
      public float getRy() {
        return instance.getRy();
      }
      /**
       * <code>float ry = 7;</code>
       */
      public Builder setRy(float value) {
        copyOnWrite();
        instance.setRy(value);
        return this;
      }
      /**
       * <code>float ry = 7;</code>
       */
      public Builder clearRy() {
        copyOnWrite();
        instance.clearRy();
        return this;
      }

      /**
       * <pre>
       *显示标志 参见Pb_TableCardFlag
       * </pre>
       *
       * <code>fixed32 flag = 8;</code>
       */
      public int getFlag() {
        return instance.getFlag();
      }
      /**
       * <pre>
       *显示标志 参见Pb_TableCardFlag
       * </pre>
       *
       * <code>fixed32 flag = 8;</code>
       */
      public Builder setFlag(int value) {
        copyOnWrite();
        instance.setFlag(value);
        return this;
      }
      /**
       * <pre>
       *显示标志 参见Pb_TableCardFlag
       * </pre>
       *
       * <code>fixed32 flag = 8;</code>
       */
      public Builder clearFlag() {
        copyOnWrite();
        instance.clearFlag();
        return this;
      }

      /**
       * <pre>
       *参见 font align flag
       * </pre>
       *
       * <code>fixed32 align = 9;</code>
       */
      public int getAlign() {
        return instance.getAlign();
      }
      /**
       * <pre>
       *参见 font align flag
       * </pre>
       *
       * <code>fixed32 align = 9;</code>
       */
      public Builder setAlign(int value) {
        copyOnWrite();
        instance.setAlign(value);
        return this;
      }
      /**
       * <pre>
       *参见 font align flag
       * </pre>
       *
       * <code>fixed32 align = 9;</code>
       */
      public Builder clearAlign() {
        copyOnWrite();
        instance.clearAlign();
        return this;
      }

      /**
       * <pre>
       *显示的信息 参见Pb_TableCardType
       * </pre>
       *
       * <code>fixed32 type = 10;</code>
       */
      public int getType() {
        return instance.getType();
      }
      /**
       * <pre>
       *显示的信息 参见Pb_TableCardType
       * </pre>
       *
       * <code>fixed32 type = 10;</code>
       */
      public Builder setType(int value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       *显示的信息 参见Pb_TableCardType
       * </pre>
       *
       * <code>fixed32 type = 10;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Item_MeetTableCardDetailInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo other = (com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo) arg1;
          fontname_ = visitor.visitByteString(fontname_ != com.google.protobuf.ByteString.EMPTY, fontname_,
              other.fontname_ != com.google.protobuf.ByteString.EMPTY, other.fontname_);
          fontsize_ = visitor.visitInt(fontsize_ != 0, fontsize_,
              other.fontsize_ != 0, other.fontsize_);
          fontcolor_ = visitor.visitInt(fontcolor_ != 0, fontcolor_,
              other.fontcolor_ != 0, other.fontcolor_);
          lx_ = visitor.visitFloat(lx_ != 0F, lx_,
              other.lx_ != 0F, other.lx_);
          ly_ = visitor.visitFloat(ly_ != 0F, ly_,
              other.ly_ != 0F, other.ly_);
          rx_ = visitor.visitFloat(rx_ != 0F, rx_,
              other.rx_ != 0F, other.rx_);
          ry_ = visitor.visitFloat(ry_ != 0F, ry_,
              other.ry_ != 0F, other.ry_);
          flag_ = visitor.visitInt(flag_ != 0, flag_,
              other.flag_ != 0, other.flag_);
          align_ = visitor.visitInt(align_ != 0, align_,
              other.align_ != 0, other.align_);
          type_ = visitor.visitInt(type_ != 0, type_,
              other.type_ != 0, other.type_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  fontname_ = input.readBytes();
                  break;
                }
                case 21: {

                  fontsize_ = input.readFixed32();
                  break;
                }
                case 29: {

                  fontcolor_ = input.readFixed32();
                  break;
                }
                case 37: {

                  lx_ = input.readFloat();
                  break;
                }
                case 45: {

                  ly_ = input.readFloat();
                  break;
                }
                case 53: {

                  rx_ = input.readFloat();
                  break;
                }
                case 61: {

                  ry_ = input.readFloat();
                  break;
                }
                case 69: {

                  flag_ = input.readFixed32();
                  break;
                }
                case 77: {

                  align_ = input.readFixed32();
                  break;
                }
                case 85: {

                  type_ = input.readFixed32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Item_MeetTableCardDetailInfo)
    private static final com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Item_MeetTableCardDetailInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Item_MeetTableCardDetailInfo> PARSER;

    public static com.google.protobuf.Parser<pbui_Item_MeetTableCardDetailInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_MeetTableCardDetailInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetTableCardDetailInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *修改标志 参见Pb_TableCard_ModifyFlag
     * </pre>
     *
     * <code>fixed32 modifyflag = 1;</code>
     */
    int getModifyflag();

    /**
     * <pre>
     *底图ID
     * </pre>
     *
     * <code>fixed32 bgphotoid = 2;</code>
     */
    int getBgphotoid();

    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    java.util.List<com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo> 
        getItemList();
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo getItem(int index);
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    int getItemCount();
  }
  /**
   * <pre>
   *会议桌牌显示相关
   *call
   *type:Pb_TYPE_MEET_INTERFACE_MEETTABLECARD
   *method: mod/query
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetTableCardDetailInfo}
   */
  public  static final class pbui_Type_MeetTableCardDetailInfo extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetTableCardDetailInfo, pbui_Type_MeetTableCardDetailInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetTableCardDetailInfo)
      pbui_Type_MeetTableCardDetailInfoOrBuilder {
    private pbui_Type_MeetTableCardDetailInfo() {
      item_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int MODIFYFLAG_FIELD_NUMBER = 1;
    private int modifyflag_;
    /**
     * <pre>
     *修改标志 参见Pb_TableCard_ModifyFlag
     * </pre>
     *
     * <code>fixed32 modifyflag = 1;</code>
     */
    public int getModifyflag() {
      return modifyflag_;
    }
    /**
     * <pre>
     *修改标志 参见Pb_TableCard_ModifyFlag
     * </pre>
     *
     * <code>fixed32 modifyflag = 1;</code>
     */
    private void setModifyflag(int value) {
      
      modifyflag_ = value;
    }
    /**
     * <pre>
     *修改标志 参见Pb_TableCard_ModifyFlag
     * </pre>
     *
     * <code>fixed32 modifyflag = 1;</code>
     */
    private void clearModifyflag() {
      
      modifyflag_ = 0;
    }

    public static final int BGPHOTOID_FIELD_NUMBER = 2;
    private int bgphotoid_;
    /**
     * <pre>
     *底图ID
     * </pre>
     *
     * <code>fixed32 bgphotoid = 2;</code>
     */
    public int getBgphotoid() {
      return bgphotoid_;
    }
    /**
     * <pre>
     *底图ID
     * </pre>
     *
     * <code>fixed32 bgphotoid = 2;</code>
     */
    private void setBgphotoid(int value) {
      
      bgphotoid_ = value;
    }
    /**
     * <pre>
     *底图ID
     * </pre>
     *
     * <code>fixed32 bgphotoid = 2;</code>
     */
    private void clearBgphotoid() {
      
      bgphotoid_ = 0;
    }

    public static final int ITEM_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo> item_;
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    public java.util.List<com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo> getItemList() {
      return item_;
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfoOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo getItem(int index) {
      return item_.get(index);
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfoOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }
    private void ensureItemIsMutable() {
      if (!item_.isModifiable()) {
        item_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
       }
    }

    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.set(index, value);
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
      ensureItemIsMutable();
      item_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void addItem(com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(value);
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(index, value);
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void addItem(
        com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(builderForValue.build());
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void addAllItem(
        java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo> values) {
      ensureItemIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, item_);
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void clearItem() {
      item_ = emptyProtobufList();
    }
    /**
     * <pre>
     *必须是3个
     * </pre>
     *
     * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
     */
    private void removeItem(int index) {
      ensureItemIsMutable();
      item_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (modifyflag_ != 0) {
        output.writeFixed32(1, modifyflag_);
      }
      if (bgphotoid_ != 0) {
        output.writeFixed32(2, bgphotoid_);
      }
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(3, item_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (modifyflag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, modifyflag_);
      }
      if (bgphotoid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, bgphotoid_);
      }
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, item_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *会议桌牌显示相关
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETTABLECARD
     *method: mod/query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetTableCardDetailInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetTableCardDetailInfo)
        com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfoOrBuilder {
      // Construct using com.mogujie.tt.com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *修改标志 参见Pb_TableCard_ModifyFlag
       * </pre>
       *
       * <code>fixed32 modifyflag = 1;</code>
       */
      public int getModifyflag() {
        return instance.getModifyflag();
      }
      /**
       * <pre>
       *修改标志 参见Pb_TableCard_ModifyFlag
       * </pre>
       *
       * <code>fixed32 modifyflag = 1;</code>
       */
      public Builder setModifyflag(int value) {
        copyOnWrite();
        instance.setModifyflag(value);
        return this;
      }
      /**
       * <pre>
       *修改标志 参见Pb_TableCard_ModifyFlag
       * </pre>
       *
       * <code>fixed32 modifyflag = 1;</code>
       */
      public Builder clearModifyflag() {
        copyOnWrite();
        instance.clearModifyflag();
        return this;
      }

      /**
       * <pre>
       *底图ID
       * </pre>
       *
       * <code>fixed32 bgphotoid = 2;</code>
       */
      public int getBgphotoid() {
        return instance.getBgphotoid();
      }
      /**
       * <pre>
       *底图ID
       * </pre>
       *
       * <code>fixed32 bgphotoid = 2;</code>
       */
      public Builder setBgphotoid(int value) {
        copyOnWrite();
        instance.setBgphotoid(value);
        return this;
      }
      /**
       * <pre>
       *底图ID
       * </pre>
       *
       * <code>fixed32 bgphotoid = 2;</code>
       */
      public Builder clearBgphotoid() {
        copyOnWrite();
        instance.clearBgphotoid();
        return this;
      }

      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public java.util.List<com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo> getItemList() {
        return java.util.Collections.unmodifiableList(
            instance.getItemList());
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public int getItemCount() {
        return instance.getItemCount();
      }/**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo getItem(int index) {
        return instance.getItem(index);
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo value) {
        copyOnWrite();
        instance.setItem(index, value);
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setItem(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder addItem(com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo value) {
        copyOnWrite();
        instance.addItem(value);
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo value) {
        copyOnWrite();
        instance.addItem(index, value);
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder addItem(
          com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(builderForValue);
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo> values) {
        copyOnWrite();
        instance.addAllItem(values);
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder clearItem() {
        copyOnWrite();
        instance.clearItem();
        return this;
      }
      /**
       * <pre>
       *必须是3个
       * </pre>
       *
       * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 3;</code>
       */
      public Builder removeItem(int index) {
        copyOnWrite();
        instance.removeItem(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetTableCardDetailInfo)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          item_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo other = (com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo) arg1;
          modifyflag_ = visitor.visitInt(modifyflag_ != 0, modifyflag_,
              other.modifyflag_ != 0, other.modifyflag_);
          bgphotoid_ = visitor.visitInt(bgphotoid_ != 0, bgphotoid_,
              other.bgphotoid_ != 0, other.bgphotoid_);
          item_= visitor.visitList(item_, other.item_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  modifyflag_ = input.readFixed32();
                  break;
                }
                case 21: {

                  bgphotoid_ = input.readFixed32();
                  break;
                }
                case 26: {
                  if (!item_.isModifiable()) {
                    item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                  }
                  item_.add(
                      input.readMessage(com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Item_MeetTableCardDetailInfo.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetTableCardDetailInfo)
    private static final com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetTableCardDetailInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceTablecard.pbui_Type_MeetTableCardDetailInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetTableCardDetailInfo> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetTableCardDetailInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
